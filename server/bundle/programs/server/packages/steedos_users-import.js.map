{"version":3,"sources":["meteor://💻app/packages/steedos:users-import/checkNpm.js","meteor://💻app/packages/steedos_users-import/space_users_actions.coffee","meteor://💻app/space_users_actions.coffee","meteor://💻app/packages/steedos_users-import/server/methods/import_users.coffee","meteor://💻app/server/methods/import_users.coffee","meteor://💻app/packages/steedos_users-import/routes/api_space_users_export.coffee","meteor://💻app/routes/api_space_users_export.coffee"],"names":["checkNpmVersions","module","link","v","actions","label","on","visible","object_name","record_id","record_permissions","Creator","isSpaceAdmin","todo","Steedos","isPaidSpace","spaceUpgradedModal","Modal","show","orgId","ref","spaceId","uobj","url","Session","get","Meteor","userId","Accounts","_storedLoginToken","space_id","org_id","absoluteUrl","$","param","window","open","swal","title","text","html","type","confirmButtonText","TAPi18n","__","startup","Objects","space_users","_","extend","methods","import_users","user_pk","data","onlyCheck","_self","accepted_user_count","currentUser","currentUserLocale","currentUserPhonePrefix","errorList","owner_id","root_org","space","testData","Error","db","organizations","findOne","is_company","parent","spaces","admins","includes","is_paid","find","_id","user_accepted","count","length","user_limit","owner","users","fields","locale","phone","getPhonePrefix","forEach","item","i","operating","organization","organization_depts","phoneNumber","ref1","ref2","ref3","selector","spaceUserExist","testObj","user","userExist","email","username","filterProperty","test","push","$or","fetch","password","services","bcrypt","split","name","dept_name","j","belongOrgids","e","error","multiOrgs","now","space_user","space_user_update_doc","su_doc","udoc","user_id","Date","orgFullname","fullname","parent_org_id","trim","org","org_doc","updateFields","_makeNewID","created","created_by","modified","modified_by","direct","insert","parents","calculateParents","calculateFullname","isEmpty","update","$set","children","calculateChildren","steedos_id","spaces_invited","emails","address","verified","number","mobile","setPassword","logout","uniq","concat","company","position","work_phone","sort_no","keys","invite_state","error1","line","message","reason","WebApp","connectHandlers","use","req","res","next","current_user_info","ejs","ejsLint","error_obj","fileName","lang","orgName","org_ids","org_objs","query","ret","sheet_name","str","template","users_to_xls","uuflowManager","check_authorization","Array","sort","pluck","each","org_obj","union","$in","require","Assets","getText","lint","console","compile","width","transform","value","orgNames","map","index","join","replace","moment","format","setHeader","encodeURI","end","stack"],"mappings":"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","file":"/packages/steedos_users-import.js","sourcesContent":["import { checkNpmVersions } from 'meteor/tmeasday:check-npm-versions';\ncheckNpmVersions({\n\t\"ejs\": \"^2.5.5\",\n\t\"ejs-lint\": \"^0.2.0\"\n}, 'steedos:users-import');\n","actions = \n\timport:\n\t\tlabel: \"导入\"\n\t\ton: \"list\"\n\t\tvisible: (object_name, record_id, record_permissions)->\n\t\t\treturn Creator.isSpaceAdmin()\n\t\ttodo: ()->\n\t\t\tif !Steedos.isPaidSpace()\n\t\t\t\tSteedos.spaceUpgradedModal()\n\t\t\t\treturn;\n\n\t\t\tModal.show(\"import_users_modal\");\n\t\n\texport:\n\t\tlabel: \"导出\"\n\t\ton: \"list\"\n\t\tvisible: (object_name, record_id, record_permissions)->\n\t\t\treturn Creator.isSpaceAdmin()\n\t\ttodo: ()->\n\t\t\tspaceId = Session.get(\"spaceId\")\n\t\t\torgId = Session.get(\"grid_sidebar_selected\")?[0]\n\t\t\tif spaceId and orgId\n\t\t\t\tuobj = {}\n\t\t\t\tuobj[\"X-User-Id\"] = Meteor.userId()\n\t\t\t\tuobj[\"X-Auth-Token\"] = Accounts._storedLoginToken()\n\t\t\t\tuobj.space_id = spaceId\n\t\t\t\tuobj.org_id = orgId\n\t\t\t\turl = Steedos.absoluteUrl() + \"api/export/space_users?\" + $.param(uobj)\n\t\t\t\twindow.open(url, '_parent', 'EnableViewPortScale=yes')\n\t\t\telse\n\t\t\t\tswal\n\t\t\t\t\ttitle: \"左侧未选中任何组织\"\n\t\t\t\t\ttext: \"请在左侧组织机构树中选中一个组织后再执行导出操作\"\n\t\t\t\t\thtml: true\n\t\t\t\t\ttype: 'warning'\n\t\t\t\t\tconfirmButtonText: TAPi18n.__('OK')\n\n\nMeteor.startup ()->\n\tunless Creator.Objects.space_users?.actions\n\t\tCreator.Objects.space_users.actions = {}\n\n\t_.extend(Creator.Objects.space_users.actions, actions);\n","var actions;\n\nactions = {\n  \"import\": {\n    label: \"导入\",\n    on: \"list\",\n    visible: function(object_name, record_id, record_permissions) {\n      return Creator.isSpaceAdmin();\n    },\n    todo: function() {\n      if (!Steedos.isPaidSpace()) {\n        Steedos.spaceUpgradedModal();\n        return;\n      }\n      return Modal.show(\"import_users_modal\");\n    }\n  },\n  \"export\": {\n    label: \"导出\",\n    on: \"list\",\n    visible: function(object_name, record_id, record_permissions) {\n      return Creator.isSpaceAdmin();\n    },\n    todo: function() {\n      var orgId, ref, spaceId, uobj, url;\n      spaceId = Session.get(\"spaceId\");\n      orgId = (ref = Session.get(\"grid_sidebar_selected\")) != null ? ref[0] : void 0;\n      if (spaceId && orgId) {\n        uobj = {};\n        uobj[\"X-User-Id\"] = Meteor.userId();\n        uobj[\"X-Auth-Token\"] = Accounts._storedLoginToken();\n        uobj.space_id = spaceId;\n        uobj.org_id = orgId;\n        url = Steedos.absoluteUrl() + \"api/export/space_users?\" + $.param(uobj);\n        return window.open(url, '_parent', 'EnableViewPortScale=yes');\n      } else {\n        return swal({\n          title: \"左侧未选中任何组织\",\n          text: \"请在左侧组织机构树中选中一个组织后再执行导出操作\",\n          html: true,\n          type: 'warning',\n          confirmButtonText: TAPi18n.__('OK')\n        });\n      }\n    }\n  }\n};\n\nMeteor.startup(function() {\n  var ref;\n  if (!((ref = Creator.Objects.space_users) != null ? ref.actions : void 0)) {\n    Creator.Objects.space_users.actions = {};\n  }\n  return _.extend(Creator.Objects.space_users.actions, actions);\n});\n","Meteor.methods\n\t###\n\t\t1、校验用户是否存在\n\t\t2、校验工作区用户是否存在\n\t\t3、校验部门是否存在\n\t\t4、校验部门用户是否存在\n\t\tTODO: 国际化\n\t###\n\timport_users: (space_id, user_pk, data, onlyCheck)->\n\n\t\t_self = this\n\n\t\tif !this.userId\n\t\t\tthrow new Meteor.Error(401, \"请先登录\")\n\n\t\troot_org = db.organizations.findOne({space: space_id, is_company: true, parent: null})\n\n\t\tspace = db.spaces.findOne(space_id)\n\t\tif !space || !space?.admins.includes(this.userId)\n\t\t\tthrow new Meteor.Error(401, \"只有工作区管理员可以导入用户\");\n\n\t\tif !space.is_paid\n\t\t\tthrow new Meteor.Error(401, \"标准版不支持此功能\");\n\n\t\taccepted_user_count = db.space_users.find({space: space._id, user_accepted: true}).count()\n\t\tif (accepted_user_count + data.length) > space.user_limit\n\t\t\tthrow new Meteor.Error(400, \"需要提升已购买用户数至#{accepted_user_count + data.length}(当前#{space.user_limit})\" +\", 请在企业信息模块中点击升级按钮购买\")\n\n\t\towner_id = space.owner\n\n\t\ttestData = []\n\n\t\terrorList = []\n\n\t\tcurrentUser = db.users.findOne({_id: _self.userId},{fields:{locale:1,phone:1}})\n\t\tcurrentUserLocale = currentUser.locale\n\t\tcurrentUserPhonePrefix = Accounts.getPhonePrefix currentUser\n\n\t\t# 数据统一校验\n\n\t\tdata.forEach (item, i)->\n\t\t\t# console.log item\n\t\t\t# 用户名，手机号，邮箱不能都为空\n\t\t\tif !item.phone and !item.email\n\t\t\t\tthrow new Meteor.Error(500, \"第#{i + 1}行: 手机号，邮箱不能都为空\")\n\n\t\t\t# 判断excel中的数据，用户名、手机号等信息是否有误\n\t\t\ttestObj = {}\n\t\t\tif item.username\n\t\t\t\ttestObj.username = item.username\n\t\t\t\tif testData.filterProperty(\"username\", item.username).length > 0\n\t\t\t\t\tthrow new Meteor.Error(500, \"第#{i + 1}行：用户名重复\");\n\n\t\t\tif item.phone\n\t\t\t\ttestObj.phone = item.phone\n\t\t\t\tif testData.filterProperty(\"phone\", item.phone).length > 0\n\t\t\t\t\tthrow new Meteor.Error(500, \"第#{i + 1}行：手机号重复\");\n\n\t\t\tif item.email\n\t\t\t\tif not /^([A-Z0-9\\.\\-\\_\\+])*([A-Z0-9\\+\\-\\_])+\\@[A-Z0-9]+([\\-][A-Z0-9]+)*([\\.][A-Z0-9\\-]+){1,8}$/i.test(item.email)\n\t\t\t\t\tthrow new Meteor.Error(500, \"第#{i + 1}行：邮件格式错误#{item.email}\");\n\n\t\t\t\ttestObj.email = item.email\n\t\t\t\tif testData.filterProperty(\"email\", item.email).length > 0\n\t\t\t\t\tthrow new Meteor.Error(500, \"第#{i + 1}行：邮件重复\");\n\n\t\t\titem.space = space_id\n\n\t\t\ttestData.push(testObj)\n\n\t\t\t# 获取查找user的条件\n\t\t\tselector = []\n\t\t\toperating = \"\"\n\t\t\tif item.username\n\t\t\t\tselector.push {username: item.username}\n\t\t\tif item.email\n\t\t\t\tselector.push {\"emails.address\": item.email}\n\t\t\tif item.phone\n\t\t\t\tphoneNumber = currentUserPhonePrefix + item.phone\n\t\t\t\tselector.push {\"phone.number\": phoneNumber}\n\n\t\t\tuserExist = db.users.find({$or: selector})\n\n\n\t\t\t# 先判断是否能匹配到唯一的user，然后判断该用户是insert到space_users还是update\n\t\t\tif userExist.count() > 1\n\t\t\t\tthrow new Meteor.Error(500, \"第#{i + 1}行：用户名、手机号、邮箱信息有误，无法匹配到同一账号\")\n\t\t\telse if userExist.count() == 1\n\t\t\t\tuser = userExist.fetch()[0]._id\n\t\t\t\tspaceUserExist = db.space_users.find({space: space_id, user: user})\n\t\t\t\tif spaceUserExist.count() == 1\n\t\t\t\t\toperating = \"update\"\n\t\t\t\telse if spaceUserExist.count() == 0\n\t\t\t\t\toperating = \"insert\"\n\t\t\telse if userExist.count() == 0\n\t\t\t\t# 新增space_users的数据校验\n\t\t\t\toperating = \"insert\"\n\n\t\t\t# 判断是否能修改用户的密码\n\t\t\tif item.password and userExist.count() == 1\n\t\t\t\tif userExist.fetch()[0].services?.password?.bcrypt\n\t\t\t\t\tthrow new Meteor.Error(500, \"第#{i + 1}行：用户已设置密码，不允许修改\");\n\n\t\t\t# 判断部门是否合理\n\t\t\torganization = item.organization\n\n\t\t\tif !organization\n\t\t\t\tthrow new Meteor.Error(500, \"第#{i + 1}行：部门不能为空\");\n\n\t\t\torganization_depts = organization.split(\"/\");\n\n\t\t\tif organization_depts.length < 1 || organization_depts[0] != root_org.name\n\t\t\t\tthrow new Meteor.Error(500, \"第#{i + 1}行：无效的根部门\");\n\n\t\t\tif item.password && user?.services?.password?.bcrypt\n\t\t\t\tthrow new Meteor.Error(500, \"第#{i + 1}行：用户已设置密码，不允许修改\");\n\n\t\t\torganization_depts.forEach (dept_name, j) ->\n\t\t\t\tif !dept_name\n\t\t\t\t\tthrow new Meteor.Error(500, \"第#{i + 1}行：无效的部门\");\n\n\n\t\tif onlyCheck\n\t\t\treturn ;\n\n\t\t# 数据导入\n\t\tdata.forEach (item, i)->\n\t\t\terror = {}\n\t\t\ttry\n\t\t\t\tselector = []\n\t\t\t\toperating = \"\"\n\t\t\t\t# if item.username\n\t\t\t\t# \tselector.push {username: item.username}\n\t\t\t\tif item.email\n\t\t\t\t\tselector.push {\"emails.address\": item.email}\n\t\t\t\tif item.phone\n\t\t\t\t\tphoneNumber = currentUserPhonePrefix + item.phone\n\t\t\t\t\tselector.push {\"phone.number\": phoneNumber}\n\t\t\t\tuserExist = db.users.find({$or: selector})\n\t\t\t\tif userExist.count() > 1\n\t\t\t\t\tthrow new Meteor.Error(400, \"用户名、手机号、邮箱信息有误，无法匹配到同一账号\")\n\t\t\t\telse if userExist.count() == 1\n\t\t\t\t\tuser = userExist.fetch()[0]\n\n\t\t\t\tnow = new Date()\n\n\t\t\t\torganization = item.organization\n\t\t\t\tmultiOrgs = organization.split(\",\")\n\t\t\t\tbelongOrgids = []\n\t\t\t\tmultiOrgs.forEach (orgFullname) ->\n\t\t\t\t\torganization_depts = orgFullname.trim().split(\"/\")\n\t\t\t\t\tfullname = \"\"\n\t\t\t\t\tparent_org_id = root_org._id\n\t\t\t\t\torganization_depts.forEach (dept_name, j) ->\n\t\t\t\t\t\tif j > 0\n\t\t\t\t\t\t\tif j == 1\n\t\t\t\t\t\t\t\tfullname = dept_name\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\tfullname = fullname + \"/\" + dept_name\n\n\t\t\t\t\t\t\torg = db.organizations.findOne({space: space_id, fullname: fullname})\n\n\t\t\t\t\t\t\tif org\n\t\t\t\t\t\t\t\tparent_org_id = org._id\n\t\t\t\t\t\t\t\tbelongOrgids.push org._id\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\torg_doc = {}\n\t\t\t\t\t\t\t\torg_doc._id = db.organizations._makeNewID()\n\t\t\t\t\t\t\t\torg_doc.space = space_id\n\t\t\t\t\t\t\t\torg_doc.name = dept_name\n\t\t\t\t\t\t\t\torg_doc.parent = parent_org_id\n\t\t\t\t\t\t\t\torg_doc.created = now\n\t\t\t\t\t\t\t\torg_doc.created_by = owner_id\n\t\t\t\t\t\t\t\torg_doc.modified = now\n\t\t\t\t\t\t\t\torg_doc.modified_by = owner_id\n\t\t\t\t\t\t\t\torg_id = db.organizations.direct.insert(org_doc)\n\n\t\t\t\t\t\t\t\tif org_id\n\t\t\t\t\t\t\t\t\torg = db.organizations.findOne(org_id)\n\t\t\t\t\t\t\t\t\tupdateFields = {}\n\t\t\t\t\t\t\t\t\tupdateFields.parents = org.calculateParents()\n\t\t\t\t\t\t\t\t\tupdateFields.fullname = org.calculateFullname()\n\n\t\t\t\t\t\t\t\t\tif !_.isEmpty(updateFields)\n\t\t\t\t\t\t\t\t\t\tdb.organizations.direct.update(org._id, {$set: updateFields})\n\n\t\t\t\t\t\t\t\t\tif org.parent\n\t\t\t\t\t\t\t\t\t\tparent = db.organizations.findOne(org.parent)\n\t\t\t\t\t\t\t\t\t\tdb.organizations.direct.update(parent._id, {$set: {children: parent.calculateChildren()}})\n\n\t\t\t\t\t\t\t\t\tparent_org_id = org_id\n\t\t\t\t\t\t\t\t\tbelongOrgids.push org._id\n\n\n\t\t\t\tuser_id = null\n\t\t\t\tif user\n\t\t\t\t\tuser_id = user._id\n\t\t\t\telse\n\t\t\t\t\tudoc = {}\n\t\t\t\t\tudoc._id = db.users._makeNewID()\n\t\t\t\t\tudoc.steedos_id = item.email || udoc._id\n\t\t\t\t\tudoc.locale = currentUserLocale\n\t\t\t\t\tudoc.spaces_invited = [space_id]\n\t\t\t\t\tif item.name\n\t\t\t\t\t\tudoc.name = item.name\n\n\t\t\t\t\tif item.email\n\t\t\t\t\t\tudoc.emails = [{address: item.email, verified: false}]\n\n\t\t\t\t\tif item.username\n\t\t\t\t\t\tudoc.username = item.username\n\n\t\t\t\t\tif item.phone\n\t\t\t\t\t\tudoc.phone = {\n\t\t\t\t\t\t\tnumber: currentUserPhonePrefix + item.phone\n\t\t\t\t\t\t\tmobile: item.phone\n\t\t\t\t\t\t\tverified: false\n\t\t\t\t\t\t\tmodified: now\n\t\t\t\t\t\t}\n\t\t\t\t\tuser_id = db.users.insert(udoc)\n\n\t\t\t\t\tif item.password\n\t\t\t\t\t\tAccounts.setPassword(user_id, item.password, {logout: false})\n\n\t\t\t\tspace_user = db.space_users.findOne({space: space_id, user: user_id})\n\n\t\t\t\tif space_user\n\t\t\t\t\tif belongOrgids.length > 0\n\t\t\t\t\t\tif !space_user.organizations\n\t\t\t\t\t\t\tspace_user.organizations = []\n\n\t\t\t\t\t\tspace_user_update_doc = {}\n\n\t\t\t\t\t\tspace_user_update_doc.organizations = _.uniq(space_user.organizations.concat(belongOrgids))\n\n\t\t\t\t\t\tif item.email\n\t\t\t\t\t\t\tspace_user_update_doc.email = item.email\n\n\t\t\t\t\t\tif item.name\n\t\t\t\t\t\t\tspace_user_update_doc.name = item.name\n\n\t\t\t\t\t\tif item.company\n\t\t\t\t\t\t\tspace_user_update_doc.company = item.company\n\n\t\t\t\t\t\tif item.position\n\t\t\t\t\t\t\tspace_user_update_doc.position = item.position\n\n\t\t\t\t\t\tif item.work_phone\n\t\t\t\t\t\t\tspace_user_update_doc.work_phone = item.work_phone\n\n\t\t\t\t\t\tif item.phone\n\t\t\t\t\t\t\tspace_user_update_doc.mobile = item.phone\n\n\t\t\t\t\t\tif item.sort_no\n\t\t\t\t\t\t\tspace_user_update_doc.sort_no = item.sort_no\n\n\t\t\t\t\t\tif _.keys(space_user_update_doc).length > 0\n\t\t\t\t\t\t\tdb.space_users.update({space: space_id, user: user_id}, {$set: space_user_update_doc})\n\n\t\t\t\t\t\tif space_user.invite_state == \"refused\" or space_user.invite_state == \"pending\"\n\t\t\t\t\t\t\tthrow new Meteor.Error(400, \"该用户还未接受加入工作区，不能修改他的个人信息\")\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tif item.username\n\t\t\t\t\t\t\t\tdb.users.update({_id: user_id},{$set:{username: item.username}})\n\t\t\t\t\t\t\tif item.password\n\t\t\t\t\t\t\t\tAccounts.setPassword(user_id, item.password, {logout: false})\n\n\t\t\t\telse\n\t\t\t\t\tif belongOrgids.length > 0\n\t\t\t\t\t\tsu_doc = {}\n\t\t\t\t\t\tsu_doc._id = db.space_users._makeNewID()\n\t\t\t\t\t\tsu_doc.space = space_id\n\n\t\t\t\t\t\tsu_doc.user_accepted =  true\n\t\t\t\t\t\tsu_doc.invite_state = \"accepted\"\n\n\t\t\t\t\t\tif user\n\t\t\t\t\t\t\tsu_doc.user_accepted = false\n\t\t\t\t\t\t\tsu_doc.invite_state = \"pending\"\n\n\t\t\t\t\t\tsu_doc.name = item.name\n\t\t\t\t\t\tif item.email\n\t\t\t\t\t\t\tsu_doc.email = item.email\n\t\t\t\t\t\tsu_doc.organization = belongOrgids[0]\n\t\t\t\t\t\tsu_doc.organizations = belongOrgids\n\n\t\t\t\t\t\tif item.position\n\t\t\t\t\t\t\tsu_doc.position = item.position\n\n\t\t\t\t\t\tif item.work_phone\n\t\t\t\t\t\t\tsu_doc.work_phone = item.work_phone\n\n\t\t\t\t\t\tif item.phone\n\t\t\t\t\t\t\tsu_doc.mobile = item.phone\n\n\t\t\t\t\t\tif item.sort_no\n\t\t\t\t\t\t\tsu_doc.sort_no = item.sort_no\n\n\t\t\t\t\t\tif item.company\n\t\t\t\t\t\t\tsu_doc.company = item.company\n\n\t\t\t\t\t\tdb.space_users.insert(su_doc)\n\t\t\tcatch e\n\t\t\t\terror.line = i+1\n\t\t\t\terror.message = e.reason\n\t\t\t\terrorList.push(error)\n\n\t\treturn errorList\n","Meteor.methods({\n\n  /*\n  \t\t1、校验用户是否存在\n  \t\t2、校验工作区用户是否存在\n  \t\t3、校验部门是否存在\n  \t\t4、校验部门用户是否存在\n  \t\tTODO: 国际化\n   */\n  import_users: function(space_id, user_pk, data, onlyCheck) {\n    var _self, accepted_user_count, currentUser, currentUserLocale, currentUserPhonePrefix, errorList, owner_id, root_org, space, testData;\n    _self = this;\n    if (!this.userId) {\n      throw new Meteor.Error(401, \"请先登录\");\n    }\n    root_org = db.organizations.findOne({\n      space: space_id,\n      is_company: true,\n      parent: null\n    });\n    space = db.spaces.findOne(space_id);\n    if (!space || !(space != null ? space.admins.includes(this.userId) : void 0)) {\n      throw new Meteor.Error(401, \"只有工作区管理员可以导入用户\");\n    }\n    if (!space.is_paid) {\n      throw new Meteor.Error(401, \"标准版不支持此功能\");\n    }\n    accepted_user_count = db.space_users.find({\n      space: space._id,\n      user_accepted: true\n    }).count();\n    if ((accepted_user_count + data.length) > space.user_limit) {\n      throw new Meteor.Error(400, (\"需要提升已购买用户数至\" + (accepted_user_count + data.length) + \"(当前\" + space.user_limit + \")\") + \", 请在企业信息模块中点击升级按钮购买\");\n    }\n    owner_id = space.owner;\n    testData = [];\n    errorList = [];\n    currentUser = db.users.findOne({\n      _id: _self.userId\n    }, {\n      fields: {\n        locale: 1,\n        phone: 1\n      }\n    });\n    currentUserLocale = currentUser.locale;\n    currentUserPhonePrefix = Accounts.getPhonePrefix(currentUser);\n    data.forEach(function(item, i) {\n      var operating, organization, organization_depts, phoneNumber, ref, ref1, ref2, ref3, selector, spaceUserExist, testObj, user, userExist;\n      if (!item.phone && !item.email) {\n        throw new Meteor.Error(500, \"第\" + (i + 1) + \"行: 手机号，邮箱不能都为空\");\n      }\n      testObj = {};\n      if (item.username) {\n        testObj.username = item.username;\n        if (testData.filterProperty(\"username\", item.username).length > 0) {\n          throw new Meteor.Error(500, \"第\" + (i + 1) + \"行：用户名重复\");\n        }\n      }\n      if (item.phone) {\n        testObj.phone = item.phone;\n        if (testData.filterProperty(\"phone\", item.phone).length > 0) {\n          throw new Meteor.Error(500, \"第\" + (i + 1) + \"行：手机号重复\");\n        }\n      }\n      if (item.email) {\n        if (!/^([A-Z0-9\\.\\-\\_\\+])*([A-Z0-9\\+\\-\\_])+\\@[A-Z0-9]+([\\-][A-Z0-9]+)*([\\.][A-Z0-9\\-]+){1,8}$/i.test(item.email)) {\n          throw new Meteor.Error(500, \"第\" + (i + 1) + \"行：邮件格式错误\" + item.email);\n        }\n        testObj.email = item.email;\n        if (testData.filterProperty(\"email\", item.email).length > 0) {\n          throw new Meteor.Error(500, \"第\" + (i + 1) + \"行：邮件重复\");\n        }\n      }\n      item.space = space_id;\n      testData.push(testObj);\n      selector = [];\n      operating = \"\";\n      if (item.username) {\n        selector.push({\n          username: item.username\n        });\n      }\n      if (item.email) {\n        selector.push({\n          \"emails.address\": item.email\n        });\n      }\n      if (item.phone) {\n        phoneNumber = currentUserPhonePrefix + item.phone;\n        selector.push({\n          \"phone.number\": phoneNumber\n        });\n      }\n      userExist = db.users.find({\n        $or: selector\n      });\n      if (userExist.count() > 1) {\n        throw new Meteor.Error(500, \"第\" + (i + 1) + \"行：用户名、手机号、邮箱信息有误，无法匹配到同一账号\");\n      } else if (userExist.count() === 1) {\n        user = userExist.fetch()[0]._id;\n        spaceUserExist = db.space_users.find({\n          space: space_id,\n          user: user\n        });\n        if (spaceUserExist.count() === 1) {\n          operating = \"update\";\n        } else if (spaceUserExist.count() === 0) {\n          operating = \"insert\";\n        }\n      } else if (userExist.count() === 0) {\n        operating = \"insert\";\n      }\n      if (item.password && userExist.count() === 1) {\n        if ((ref = userExist.fetch()[0].services) != null ? (ref1 = ref.password) != null ? ref1.bcrypt : void 0 : void 0) {\n          throw new Meteor.Error(500, \"第\" + (i + 1) + \"行：用户已设置密码，不允许修改\");\n        }\n      }\n      organization = item.organization;\n      if (!organization) {\n        throw new Meteor.Error(500, \"第\" + (i + 1) + \"行：部门不能为空\");\n      }\n      organization_depts = organization.split(\"/\");\n      if (organization_depts.length < 1 || organization_depts[0] !== root_org.name) {\n        throw new Meteor.Error(500, \"第\" + (i + 1) + \"行：无效的根部门\");\n      }\n      if (item.password && (user != null ? (ref2 = user.services) != null ? (ref3 = ref2.password) != null ? ref3.bcrypt : void 0 : void 0 : void 0)) {\n        throw new Meteor.Error(500, \"第\" + (i + 1) + \"行：用户已设置密码，不允许修改\");\n      }\n      return organization_depts.forEach(function(dept_name, j) {\n        if (!dept_name) {\n          throw new Meteor.Error(500, \"第\" + (i + 1) + \"行：无效的部门\");\n        }\n      });\n    });\n    if (onlyCheck) {\n      return;\n    }\n    data.forEach(function(item, i) {\n      var belongOrgids, e, error, multiOrgs, now, operating, organization, phoneNumber, selector, space_user, space_user_update_doc, su_doc, udoc, user, userExist, user_id;\n      error = {};\n      try {\n        selector = [];\n        operating = \"\";\n        if (item.email) {\n          selector.push({\n            \"emails.address\": item.email\n          });\n        }\n        if (item.phone) {\n          phoneNumber = currentUserPhonePrefix + item.phone;\n          selector.push({\n            \"phone.number\": phoneNumber\n          });\n        }\n        userExist = db.users.find({\n          $or: selector\n        });\n        if (userExist.count() > 1) {\n          throw new Meteor.Error(400, \"用户名、手机号、邮箱信息有误，无法匹配到同一账号\");\n        } else if (userExist.count() === 1) {\n          user = userExist.fetch()[0];\n        }\n        now = new Date();\n        organization = item.organization;\n        multiOrgs = organization.split(\",\");\n        belongOrgids = [];\n        multiOrgs.forEach(function(orgFullname) {\n          var fullname, organization_depts, parent_org_id;\n          organization_depts = orgFullname.trim().split(\"/\");\n          fullname = \"\";\n          parent_org_id = root_org._id;\n          return organization_depts.forEach(function(dept_name, j) {\n            var org, org_doc, org_id, parent, updateFields;\n            if (j > 0) {\n              if (j === 1) {\n                fullname = dept_name;\n              } else {\n                fullname = fullname + \"/\" + dept_name;\n              }\n              org = db.organizations.findOne({\n                space: space_id,\n                fullname: fullname\n              });\n              if (org) {\n                parent_org_id = org._id;\n                return belongOrgids.push(org._id);\n              } else {\n                org_doc = {};\n                org_doc._id = db.organizations._makeNewID();\n                org_doc.space = space_id;\n                org_doc.name = dept_name;\n                org_doc.parent = parent_org_id;\n                org_doc.created = now;\n                org_doc.created_by = owner_id;\n                org_doc.modified = now;\n                org_doc.modified_by = owner_id;\n                org_id = db.organizations.direct.insert(org_doc);\n                if (org_id) {\n                  org = db.organizations.findOne(org_id);\n                  updateFields = {};\n                  updateFields.parents = org.calculateParents();\n                  updateFields.fullname = org.calculateFullname();\n                  if (!_.isEmpty(updateFields)) {\n                    db.organizations.direct.update(org._id, {\n                      $set: updateFields\n                    });\n                  }\n                  if (org.parent) {\n                    parent = db.organizations.findOne(org.parent);\n                    db.organizations.direct.update(parent._id, {\n                      $set: {\n                        children: parent.calculateChildren()\n                      }\n                    });\n                  }\n                  parent_org_id = org_id;\n                  return belongOrgids.push(org._id);\n                }\n              }\n            }\n          });\n        });\n        user_id = null;\n        if (user) {\n          user_id = user._id;\n        } else {\n          udoc = {};\n          udoc._id = db.users._makeNewID();\n          udoc.steedos_id = item.email || udoc._id;\n          udoc.locale = currentUserLocale;\n          udoc.spaces_invited = [space_id];\n          if (item.name) {\n            udoc.name = item.name;\n          }\n          if (item.email) {\n            udoc.emails = [\n              {\n                address: item.email,\n                verified: false\n              }\n            ];\n          }\n          if (item.username) {\n            udoc.username = item.username;\n          }\n          if (item.phone) {\n            udoc.phone = {\n              number: currentUserPhonePrefix + item.phone,\n              mobile: item.phone,\n              verified: false,\n              modified: now\n            };\n          }\n          user_id = db.users.insert(udoc);\n          if (item.password) {\n            Accounts.setPassword(user_id, item.password, {\n              logout: false\n            });\n          }\n        }\n        space_user = db.space_users.findOne({\n          space: space_id,\n          user: user_id\n        });\n        if (space_user) {\n          if (belongOrgids.length > 0) {\n            if (!space_user.organizations) {\n              space_user.organizations = [];\n            }\n            space_user_update_doc = {};\n            space_user_update_doc.organizations = _.uniq(space_user.organizations.concat(belongOrgids));\n            if (item.email) {\n              space_user_update_doc.email = item.email;\n            }\n            if (item.name) {\n              space_user_update_doc.name = item.name;\n            }\n            if (item.company) {\n              space_user_update_doc.company = item.company;\n            }\n            if (item.position) {\n              space_user_update_doc.position = item.position;\n            }\n            if (item.work_phone) {\n              space_user_update_doc.work_phone = item.work_phone;\n            }\n            if (item.phone) {\n              space_user_update_doc.mobile = item.phone;\n            }\n            if (item.sort_no) {\n              space_user_update_doc.sort_no = item.sort_no;\n            }\n            if (_.keys(space_user_update_doc).length > 0) {\n              db.space_users.update({\n                space: space_id,\n                user: user_id\n              }, {\n                $set: space_user_update_doc\n              });\n            }\n            if (space_user.invite_state === \"refused\" || space_user.invite_state === \"pending\") {\n              throw new Meteor.Error(400, \"该用户还未接受加入工作区，不能修改他的个人信息\");\n            } else {\n              if (item.username) {\n                db.users.update({\n                  _id: user_id\n                }, {\n                  $set: {\n                    username: item.username\n                  }\n                });\n              }\n              if (item.password) {\n                return Accounts.setPassword(user_id, item.password, {\n                  logout: false\n                });\n              }\n            }\n          }\n        } else {\n          if (belongOrgids.length > 0) {\n            su_doc = {};\n            su_doc._id = db.space_users._makeNewID();\n            su_doc.space = space_id;\n            su_doc.user_accepted = true;\n            su_doc.invite_state = \"accepted\";\n            if (user) {\n              su_doc.user_accepted = false;\n              su_doc.invite_state = \"pending\";\n            }\n            su_doc.name = item.name;\n            if (item.email) {\n              su_doc.email = item.email;\n            }\n            su_doc.organization = belongOrgids[0];\n            su_doc.organizations = belongOrgids;\n            if (item.position) {\n              su_doc.position = item.position;\n            }\n            if (item.work_phone) {\n              su_doc.work_phone = item.work_phone;\n            }\n            if (item.phone) {\n              su_doc.mobile = item.phone;\n            }\n            if (item.sort_no) {\n              su_doc.sort_no = item.sort_no;\n            }\n            if (item.company) {\n              su_doc.company = item.company;\n            }\n            return db.space_users.insert(su_doc);\n          }\n        }\n      } catch (error1) {\n        e = error1;\n        error.line = i + 1;\n        error.message = e.reason;\n        return errorList.push(error);\n      }\n    });\n    return errorList;\n  }\n});\n","Meteor.startup ->\n\tWebApp.connectHandlers.use \"/api/export/space_users\", (req, res, next)->\n\t\ttry\n\t\t\tcurrent_user_info = uuflowManager.check_authorization(req)\n\n\t\t\tquery = req.query\n\t\t\tspace_id = query.space_id\n\t\t\torg_id = query.org_id\n\t\t\tuser_id = query['X-User-Id']\n\t\t\torg = db.organizations.findOne({_id:org_id},{fields:{fullname:1}})\n\t\t\tusers_to_xls = new Array\n\t\t\tnow = new Date \n\t\t\tif Steedos.isSpaceAdmin(space_id,user_id)\n\t\t\t\tusers_to_xls = db.space_users.find({\n\t\t\t\t\tspace: space_id\n\t\t\t\t}, {\n\t\t\t\t\tsort: {name: 1}\n\t\t\t\t}).fetch()\n\t\t\telse\n\t\t\t\torg_ids = []\n\t\t\t\torg_objs = db.organizations.find({_id:org_id,space:space_id},{fields:{_id:1,children:1}}).fetch()\n\t\t\t\torg_ids = _.pluck(org_objs,'_id')\n\t\t\t\t_.each org_objs,(org_obj)->\n\t\t\t\t\torg_ids = _.union(org_ids,org_obj?.children)\n\t\t\t\t_.uniq(org_ids)\n\t\t\t\tusers_to_xls = db.space_users.find({space:space_id,organizations:{$in:org_ids}},{sort: {sort_no: -1,name:1}}).fetch()\n\t\t\tejs = require('ejs')\n\t\t\tstr = Assets.getText('server/ejs/export_space_users.ejs')\n\t\t\t\n\t\t\t# 检测是否有语法错误\n\t\t\tejsLint = require('ejs-lint')\n\t\t\terror_obj = ejsLint.lint(str, {})\n\t\t\tif error_obj\n\t\t\t\tconsole.error \"===/api/contacts/export/space_users:\"\n\t\t\t\tconsole.error error_obj\n\n\t\t\ttemplate = ejs.compile(str)\n\n\t\t\tlang = 'en'\n\t\t\tif current_user_info.locale is 'zh-cn'\n\t\t\t\tlang = 'zh-CN'\n\n\t\t\torgName = if org then org.fullname else org_id\n\t\t\tfields = [{\n\t\t\t\t\ttype: 'String',\n\t\t\t\t\tname:'name',\n\t\t\t\t\twidth: 60,\n\t\t\t\t\ttitle: TAPi18n.__('space_users_name',{},lang)\n\t\t\t\t},{\n\t\t\t\t\ttype: 'String',\n\t\t\t\t\tname:'mobile',\n\t\t\t\t\twidth: 100,\n\t\t\t\t\ttitle: TAPi18n.__('space_users_mobile',{},lang)\n\t\t\t\t},{\n\t\t\t\t\ttype: 'String',\n\t\t\t\t\tname:'work_phone',\n\t\t\t\t\twidth: 100,\n\t\t\t\t\ttitle: TAPi18n.__('space_users_work_phone',{},lang)\n\t\t\t\t},{\n\t\t\t\t\ttype: 'String',\n\t\t\t\t\tname:'email',\n\t\t\t\t\twidth: 100,\n\t\t\t\t\ttitle: TAPi18n.__('space_users_email',{},lang)\n\t\t\t\t},{\n\t\t\t\t\ttype: 'String',\n\t\t\t\t\tname:'company',\n\t\t\t\t\twidth: 100,\n\t\t\t\t\ttitle: TAPi18n.__('space_users_company',{},lang)\n\t\t\t\t},{\n\t\t\t\t\ttype: 'String',\n\t\t\t\t\tname:'position',\n\t\t\t\t\twidth: 100,\n\t\t\t\t\ttitle: TAPi18n.__('space_users_position',{},lang)\n\t\t\t\t},{\n\t\t\t\t\ttype: 'String',\n\t\t\t\t\tname:'organizations',\n\t\t\t\t\twidth: 600,\n\t\t\t\t\ttitle: TAPi18n.__('space_users_organizations',{},lang),\n\t\t\t\t\ttransform: (value)->\n\t\t\t\t\t\torgNames = db.organizations.find({_id: {$in: value}},{fields: {fullname: 1}}).map((item,index)->\n\t\t\t\t\t\t\treturn item.fullname\n\t\t\t\t\t\t)\n\t\t\t\t\t\treturn orgNames.join(\",\")\n\t\t\t\t},{\n\t\t\t\t\ttype: 'String',\n\t\t\t\t\tname:'manager',\n\t\t\t\t\twidth: 60,\n\t\t\t\t\ttitle: TAPi18n.__('space_users_manager',{},lang)\n\t\t\t\t\ttransform: (value)->\n\t\t\t\t\t\tuser = db.users.findOne({_id: value},{fields: {name: 1}})\n\t\t\t\t\t\treturn user?.name\n\t\t\t\t},{\n\t\t\t\t\ttype: 'String',\n\t\t\t\t\tname:'user',\n\t\t\t\t\twidth: 60,\n\t\t\t\t\ttitle: TAPi18n.__('users_username',{},lang)\n\t\t\t\t\ttransform: (value)->\n\t\t\t\t\t\tuser = db.users.findOne({_id: value},{fields: {username: 1}})\n\t\t\t\t\t\treturn user?.username\n\t\t\t\t},{\n\t\t\t\t\ttype: 'Number',\n\t\t\t\t\tname:'sort_no',\n\t\t\t\t\twidth: 35,\n\t\t\t\t\ttitle: TAPi18n.__('space_users_sort_no',{},lang)\n\t\t\t\t},{\n\t\t\t\t\ttype: 'String',\n\t\t\t\t\tname:'user_accepted',\n\t\t\t\t\twidth: 35,\n\t\t\t\t\ttitle: TAPi18n.__('space_users_user_accepted',{},lang)\n\t\t\t\t\ttransform: (value)->\n\t\t\t\t\t\treturn if value then TAPi18n.__('space_users_user_accepted_yes',{},lang) else TAPi18n.__('space_users_user_accepted_no',{},lang)\n\t\t\t\t}]\n\t\t\t\n\t\t\tsheet_name = orgName?.replace(/\\//g,\"-\") #不支持\"/\"符号\n\t\t\tret = template({\n\t\t\t\tlang: lang,\n\t\t\t\tsheet_name: sheet_name,\n\t\t\t\tfields: fields,\n\t\t\t\tusers_to_xls: users_to_xls\n\t\t\t})\n\n\t\t\tfileName = \"SteedOSContacts_\" + moment().format('YYYYMMDDHHmm') + \".xls\"\n\t\t\tres.setHeader(\"Content-type\", \"application/octet-stream\")\n\t\t\tres.setHeader(\"Content-Disposition\", \"attachment;filename=\"+encodeURI(fileName))\n\t\t\tres.end(ret)\n\t\tcatch e\n\t\t\tconsole.error e.stack\n\t\t\tres.end(e.message)","Meteor.startup(function() {\n  return WebApp.connectHandlers.use(\"/api/export/space_users\", function(req, res, next) {\n    var current_user_info, e, ejs, ejsLint, error_obj, fields, fileName, lang, now, org, orgName, org_id, org_ids, org_objs, query, ret, sheet_name, space_id, str, template, user_id, users_to_xls;\n    try {\n      current_user_info = uuflowManager.check_authorization(req);\n      query = req.query;\n      space_id = query.space_id;\n      org_id = query.org_id;\n      user_id = query['X-User-Id'];\n      org = db.organizations.findOne({\n        _id: org_id\n      }, {\n        fields: {\n          fullname: 1\n        }\n      });\n      users_to_xls = new Array;\n      now = new Date;\n      if (Steedos.isSpaceAdmin(space_id, user_id)) {\n        users_to_xls = db.space_users.find({\n          space: space_id\n        }, {\n          sort: {\n            name: 1\n          }\n        }).fetch();\n      } else {\n        org_ids = [];\n        org_objs = db.organizations.find({\n          _id: org_id,\n          space: space_id\n        }, {\n          fields: {\n            _id: 1,\n            children: 1\n          }\n        }).fetch();\n        org_ids = _.pluck(org_objs, '_id');\n        _.each(org_objs, function(org_obj) {\n          return org_ids = _.union(org_ids, org_obj != null ? org_obj.children : void 0);\n        });\n        _.uniq(org_ids);\n        users_to_xls = db.space_users.find({\n          space: space_id,\n          organizations: {\n            $in: org_ids\n          }\n        }, {\n          sort: {\n            sort_no: -1,\n            name: 1\n          }\n        }).fetch();\n      }\n      ejs = require('ejs');\n      str = Assets.getText('server/ejs/export_space_users.ejs');\n      ejsLint = require('ejs-lint');\n      error_obj = ejsLint.lint(str, {});\n      if (error_obj) {\n        console.error(\"===/api/contacts/export/space_users:\");\n        console.error(error_obj);\n      }\n      template = ejs.compile(str);\n      lang = 'en';\n      if (current_user_info.locale === 'zh-cn') {\n        lang = 'zh-CN';\n      }\n      orgName = org ? org.fullname : org_id;\n      fields = [\n        {\n          type: 'String',\n          name: 'name',\n          width: 60,\n          title: TAPi18n.__('space_users_name', {}, lang)\n        }, {\n          type: 'String',\n          name: 'mobile',\n          width: 100,\n          title: TAPi18n.__('space_users_mobile', {}, lang)\n        }, {\n          type: 'String',\n          name: 'work_phone',\n          width: 100,\n          title: TAPi18n.__('space_users_work_phone', {}, lang)\n        }, {\n          type: 'String',\n          name: 'email',\n          width: 100,\n          title: TAPi18n.__('space_users_email', {}, lang)\n        }, {\n          type: 'String',\n          name: 'company',\n          width: 100,\n          title: TAPi18n.__('space_users_company', {}, lang)\n        }, {\n          type: 'String',\n          name: 'position',\n          width: 100,\n          title: TAPi18n.__('space_users_position', {}, lang)\n        }, {\n          type: 'String',\n          name: 'organizations',\n          width: 600,\n          title: TAPi18n.__('space_users_organizations', {}, lang),\n          transform: function(value) {\n            var orgNames;\n            orgNames = db.organizations.find({\n              _id: {\n                $in: value\n              }\n            }, {\n              fields: {\n                fullname: 1\n              }\n            }).map(function(item, index) {\n              return item.fullname;\n            });\n            return orgNames.join(\",\");\n          }\n        }, {\n          type: 'String',\n          name: 'manager',\n          width: 60,\n          title: TAPi18n.__('space_users_manager', {}, lang),\n          transform: function(value) {\n            var user;\n            user = db.users.findOne({\n              _id: value\n            }, {\n              fields: {\n                name: 1\n              }\n            });\n            return user != null ? user.name : void 0;\n          }\n        }, {\n          type: 'String',\n          name: 'user',\n          width: 60,\n          title: TAPi18n.__('users_username', {}, lang),\n          transform: function(value) {\n            var user;\n            user = db.users.findOne({\n              _id: value\n            }, {\n              fields: {\n                username: 1\n              }\n            });\n            return user != null ? user.username : void 0;\n          }\n        }, {\n          type: 'Number',\n          name: 'sort_no',\n          width: 35,\n          title: TAPi18n.__('space_users_sort_no', {}, lang)\n        }, {\n          type: 'String',\n          name: 'user_accepted',\n          width: 35,\n          title: TAPi18n.__('space_users_user_accepted', {}, lang),\n          transform: function(value) {\n            if (value) {\n              return TAPi18n.__('space_users_user_accepted_yes', {}, lang);\n            } else {\n              return TAPi18n.__('space_users_user_accepted_no', {}, lang);\n            }\n          }\n        }\n      ];\n      sheet_name = orgName != null ? orgName.replace(/\\//g, \"-\") : void 0;\n      ret = template({\n        lang: lang,\n        sheet_name: sheet_name,\n        fields: fields,\n        users_to_xls: users_to_xls\n      });\n      fileName = \"SteedOSContacts_\" + moment().format('YYYYMMDDHHmm') + \".xls\";\n      res.setHeader(\"Content-type\", \"application/octet-stream\");\n      res.setHeader(\"Content-Disposition\", \"attachment;filename=\" + encodeURI(fileName));\n      return res.end(ret);\n    } catch (error) {\n      e = error;\n      console.error(e.stack);\n      return res.end(e.message);\n    }\n  });\n});\n"]}