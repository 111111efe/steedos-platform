{"version":3,"sources":["meteor://💻app/packages/steedos:users-import/checkNpm.js","meteor://💻app/packages/steedos_users-import/server/methods/import_users.coffee","meteor://💻app/server/methods/import_users.coffee","meteor://💻app/packages/steedos_users-import/routes/api_space_users_export.coffee","meteor://💻app/routes/api_space_users_export.coffee"],"names":["checkNpmVersions","module","link","v","Meteor","methods","import_users","space_id","user_pk","data","onlyCheck","_self","accepted_user_count","currentUser","currentUserLocale","currentUserPhonePrefix","errorList","owner_id","root_org","space","testData","userId","Error","db","organizations","findOne","parent","spaces","admins","includes","is_paid","space_users","find","_id","user_accepted","count","length","user_limit","owner","users","fields","locale","phone","Accounts","getPhonePrefix","forEach","item","i","multiOrgs","operating","organization","organization_depts","phoneNumber","ref","ref1","ref2","ref3","selector","spaceUserExist","testObj","user","userExist","email","username","filterProperty","test","push","$or","fetch","password","services","bcrypt","split","name","dept_name","j","orgFullname","fullname","trim","orgCount","belongOrgids","e","error","now","space_user","space_user_update_doc","su_doc","udoc","userInfo","user_id","Date","org","_makeNewID","steedos_id","spaces_invited","emails","address","verified","number","mobile","modified","insert","setPassword","logout","_","uniq","concat","company","position","work_phone","sort_no","keys","update","$set","invite_state","error1","line","message","reason","startup","WebApp","connectHandlers","use","req","res","next","current_user_info","ejs","ejsLint","error_obj","fileName","lang","orgName","org_id","org_ids","org_objs","query","ret","sheet_name","str","template","users_to_xls","uuflowManager","check_authorization","Array","Steedos","isSpaceAdmin","sort","children","pluck","each","org_obj","union","$in","require","Assets","getText","lint","console","compile","type","width","title","TAPi18n","__","transform","value","orgNames","map","index","join","replace","moment","format","setHeader","encodeURI","end","stack"],"mappings":"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","file":"/packages/steedos_users-import.js","sourcesContent":["import { checkNpmVersions } from 'meteor/tmeasday:check-npm-versions';\r\ncheckNpmVersions({\r\n\t\"ejs\": \"^2.5.5\",\r\n\t\"ejs-lint\": \"^0.2.0\"\r\n}, 'steedos:users-import');\r\n","Meteor.methods\r\n\t###\r\n\t\t1、校验用户是否存在\r\n\t\t2、校验工作区用户是否存在\r\n\t\t3、校验部门是否存在\r\n\t\t4、校验部门用户是否存在\r\n\t\tTODO: 国际化\r\n\t###\r\n\timport_users: (space_id, user_pk, data, onlyCheck)->\r\n\r\n\t\t_self = this\r\n\r\n\t\tif !this.userId\r\n\t\t\tthrow new Meteor.Error(401, \"请先登录\")\r\n\r\n\t\troot_org = db.organizations.findOne({space: space_id, parent: null})\r\n\r\n\t\tspace = db.spaces.findOne(space_id)\r\n\t\tif !space || !space?.admins.includes(this.userId)\r\n\t\t\tthrow new Meteor.Error(401, \"只有工作区管理员可以导入用户\");\r\n\r\n\t\tif !space.is_paid\r\n\t\t\tthrow new Meteor.Error(401, \"标准版不支持此功能\");\r\n\r\n\t\taccepted_user_count = db.space_users.find({space: space._id, user_accepted: true}).count()\r\n\t\tif (accepted_user_count + data.length) > space.user_limit\r\n\t\t\tthrow new Meteor.Error(400, \"需要提升已购买用户数至#{accepted_user_count + data.length}(当前#{space.user_limit})\" +\", 请在企业信息模块中点击升级按钮购买\")\r\n\r\n\t\towner_id = space.owner\r\n\r\n\t\ttestData = []\r\n\r\n\t\terrorList = []\r\n\r\n\t\tcurrentUser = db.users.findOne({_id: _self.userId},{fields:{locale:1,phone:1}})\r\n\t\tcurrentUserLocale = currentUser.locale\r\n\t\tcurrentUserPhonePrefix = Accounts.getPhonePrefix currentUser\r\n\r\n\t\t# 数据统一校验\r\n\r\n\t\tdata.forEach (item, i)->\r\n\t\t\t# console.log item\r\n\t\t\t# 用户名，手机号，邮箱不能都为空\r\n\t\t\tif !item.phone and !item.email\r\n\t\t\t\tthrow new Meteor.Error(500, \"第#{i + 1}行: 手机号，邮箱不能都为空\")\r\n\r\n\t\t\t# 判断excel中的数据，用户名、手机号等信息是否有误\r\n\t\t\ttestObj = {}\r\n\t\t\tif item.username\r\n\t\t\t\ttestObj.username = item.username\r\n\t\t\t\tif testData.filterProperty(\"username\", item.username).length > 0\r\n\t\t\t\t\tthrow new Meteor.Error(500, \"第#{i + 1}行：用户名重复\");\r\n\r\n\t\t\tif item.phone\r\n\t\t\t\ttestObj.phone = item.phone\r\n\t\t\t\tif testData.filterProperty(\"phone\", item.phone).length > 0\r\n\t\t\t\t\tthrow new Meteor.Error(500, \"第#{i + 1}行：手机号重复\");\r\n\r\n\t\t\tif item.email\r\n\t\t\t\tif not /^([A-Z0-9\\.\\-\\_\\+])*([A-Z0-9\\+\\-\\_])+\\@[A-Z0-9]+([\\-][A-Z0-9]+)*([\\.][A-Z0-9\\-]+){1,8}$/i.test(item.email)\r\n\t\t\t\t\tthrow new Meteor.Error(500, \"第#{i + 1}行：邮件格式错误#{item.email}\");\r\n\r\n\t\t\t\ttestObj.email = item.email\r\n\t\t\t\tif testData.filterProperty(\"email\", item.email).length > 0\r\n\t\t\t\t\tthrow new Meteor.Error(500, \"第#{i + 1}行：邮件重复\");\r\n\r\n\t\t\titem.space = space_id\r\n\r\n\t\t\ttestData.push(testObj)\r\n\r\n\t\t\t# 获取查找user的条件\r\n\t\t\tselector = []\r\n\t\t\toperating = \"\"\r\n\t\t\tif item.username\r\n\t\t\t\tselector.push {username: item.username}\r\n\t\t\tif item.email\r\n\t\t\t\tselector.push {\"emails.address\": item.email}\r\n\t\t\tif item.phone\r\n\t\t\t\tphoneNumber = currentUserPhonePrefix + item.phone\r\n\t\t\t\tselector.push {\"phone.number\": phoneNumber}\r\n\r\n\t\t\tuserExist = db.users.find({$or: selector})\r\n\r\n\r\n\t\t\t# 先判断是否能匹配到唯一的user，然后判断该用户是insert到space_users还是update\r\n\t\t\tif userExist.count() > 1\r\n\t\t\t\tthrow new Meteor.Error(500, \"第#{i + 1}行：用户名、手机号、邮箱信息有误，无法匹配到同一账号\")\r\n\t\t\telse if userExist.count() == 1\r\n\t\t\t\tuser = userExist.fetch()[0]._id\r\n\t\t\t\tspaceUserExist = db.space_users.find({space: space_id, user: user})\r\n\t\t\t\tif spaceUserExist.count() == 1\r\n\t\t\t\t\toperating = \"update\"\r\n\t\t\t\telse if spaceUserExist.count() == 0\r\n\t\t\t\t\toperating = \"insert\"\r\n\t\t\telse if userExist.count() == 0\r\n\t\t\t\t# 新增space_users的数据校验\r\n\t\t\t\toperating = \"insert\"\r\n\r\n\t\t\t# 判断是否能修改用户的密码\r\n\t\t\tif item.password and userExist.count() == 1\r\n\t\t\t\tif userExist.fetch()[0].services?.password?.bcrypt\r\n\t\t\t\t\tthrow new Meteor.Error(500, \"第#{i + 1}行：用户已设置密码，不允许修改\");\r\n\r\n\t\t\t# 判断部门是否合理\r\n\t\t\torganization = item.organization\r\n\r\n\t\t\tif !organization\r\n\t\t\t\tthrow new Meteor.Error(500, \"第#{i + 1}行：部门不能为空\");\r\n\r\n\t\t\torganization_depts = organization.split(\"/\");\r\n\r\n\t\t\tif organization_depts.length < 1 || organization_depts[0] != root_org.name\r\n\t\t\t\tthrow new Meteor.Error(500, \"第#{i + 1}行：无效的根部门\");\r\n\r\n\t\t\tif item.password && user?.services?.password?.bcrypt\r\n\t\t\t\tthrow new Meteor.Error(500, \"第#{i + 1}行：用户已设置密码，不允许修改\");\r\n\r\n\t\t\torganization_depts.forEach (dept_name, j) ->\r\n\t\t\t\tif !dept_name\r\n\t\t\t\t\tthrow new Meteor.Error(500, \"第#{i + 1}行：无效的部门\");\r\n\r\n\t\t\tmultiOrgs = organization.split(\",\")\r\n\t\t\tmultiOrgs.forEach (orgFullname) ->\r\n\t\t\t\torganization_depts = orgFullname.trim().split(\"/\")\r\n\t\t\t\tfullname = \"\"\r\n\t\t\t\torganization_depts.forEach (dept_name, j) ->\r\n\t\t\t\t\tif j > 0\r\n\t\t\t\t\t\tif j == 1\r\n\t\t\t\t\t\t\tfullname = dept_name\r\n\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\tfullname = fullname + \"/\" + dept_name\r\n\r\n\t\t\t\t\t\torgCount = db.organizations.find({space: space_id, fullname: fullname}).count()\r\n\r\n\t\t\t\t\t\tif orgCount == 0\r\n\t\t\t\t\t\t\tthrow new Meteor.Error(500, \"第#{i + 1}行：部门(#{dept_name})不存在，请先创建\");\r\n\r\n\t\tif onlyCheck\r\n\t\t\treturn ;\r\n\r\n\t\t# 数据导入\r\n\t\tdata.forEach (item, i)->\r\n\t\t\terror = {}\r\n\t\t\ttry\r\n\t\t\t\tselector = []\r\n\t\t\t\toperating = \"\"\r\n\t\t\t\t# if item.username\r\n\t\t\t\t# \tselector.push {username: item.username}\r\n\t\t\t\tif item.email\r\n\t\t\t\t\tselector.push {\"emails.address\": item.email}\r\n\t\t\t\tif item.phone\r\n\t\t\t\t\tphoneNumber = currentUserPhonePrefix + item.phone\r\n\t\t\t\t\tselector.push {\"phone.number\": phoneNumber}\r\n\t\t\t\tuserExist = db.users.find({$or: selector})\r\n\t\t\t\tif userExist.count() > 1\r\n\t\t\t\t\tthrow new Meteor.Error(400, \"用户名、手机号、邮箱信息有误，无法匹配到同一账号\")\r\n\t\t\t\telse if userExist.count() == 1\r\n\t\t\t\t\tuser = userExist.fetch()[0]\r\n\r\n\t\t\t\tnow = new Date()\r\n\r\n\t\t\t\torganization = item.organization\r\n\t\t\t\tmultiOrgs = organization.split(\",\")\r\n\t\t\t\tbelongOrgids = []\r\n\t\t\t\tmultiOrgs.forEach (orgFullname) ->\r\n\t\t\t\t\torganization_depts = orgFullname.trim().split(\"/\")\r\n\t\t\t\t\tfullname = \"\"\r\n\t\t\t\t\torganization_depts.forEach (dept_name, j) ->\r\n\t\t\t\t\t\tif j > 0\r\n\t\t\t\t\t\t\tif j == 1\r\n\t\t\t\t\t\t\t\tfullname = dept_name\r\n\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t\tfullname = fullname + \"/\" + dept_name\r\n\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\tfullname = dept_name\r\n\r\n\t\t\t\t\torg = db.organizations.findOne({space: space_id, fullname: fullname})\r\n\r\n\t\t\t\t\tif org\r\n\t\t\t\t\t\tbelongOrgids.push org._id\r\n\r\n\r\n\t\t\t\tuser_id = null\r\n\t\t\t\tif user\r\n\t\t\t\t\tuser_id = user._id\r\n\t\t\t\telse\r\n\t\t\t\t\tudoc = {}\r\n\t\t\t\t\tudoc._id = db.users._makeNewID()\r\n\t\t\t\t\tudoc.steedos_id = item.email || udoc._id\r\n\t\t\t\t\tudoc.locale = currentUserLocale\r\n\t\t\t\t\tudoc.spaces_invited = [space_id]\r\n\t\t\t\t\tif item.name\r\n\t\t\t\t\t\tudoc.name = item.name\r\n\r\n\t\t\t\t\tif item.email\r\n\t\t\t\t\t\tudoc.emails = [{address: item.email, verified: false}]\r\n\r\n\t\t\t\t\tif item.username\r\n\t\t\t\t\t\tudoc.username = item.username\r\n\r\n\t\t\t\t\tif item.phone\r\n\t\t\t\t\t\tudoc.phone = {\r\n\t\t\t\t\t\t\tnumber: currentUserPhonePrefix + item.phone\r\n\t\t\t\t\t\t\tmobile: item.phone\r\n\t\t\t\t\t\t\tverified: false\r\n\t\t\t\t\t\t\tmodified: now\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\tuser_id = db.users.insert(udoc)\r\n\r\n\t\t\t\t\tif item.password\r\n\t\t\t\t\t\tAccounts.setPassword(user_id, item.password, {logout: false})\r\n\r\n\t\t\t\tspace_user = db.space_users.findOne({space: space_id, user: user_id})\r\n\r\n\t\t\t\tif space_user\r\n\t\t\t\t\tif belongOrgids.length > 0\r\n\t\t\t\t\t\tif !space_user.organizations\r\n\t\t\t\t\t\t\tspace_user.organizations = []\r\n\r\n\t\t\t\t\t\tspace_user_update_doc = {}\r\n\r\n\t\t\t\t\t\tspace_user_update_doc.organizations = _.uniq(space_user.organizations.concat(belongOrgids))\r\n\r\n\t\t\t\t\t\tif item.email\r\n\t\t\t\t\t\t\tspace_user_update_doc.email = item.email\r\n\r\n\t\t\t\t\t\tif item.name\r\n\t\t\t\t\t\t\tspace_user_update_doc.name = item.name\r\n\r\n\t\t\t\t\t\tif item.company\r\n\t\t\t\t\t\t\tspace_user_update_doc.company = item.company\r\n\r\n\t\t\t\t\t\tif item.position\r\n\t\t\t\t\t\t\tspace_user_update_doc.position = item.position\r\n\r\n\t\t\t\t\t\tif item.work_phone\r\n\t\t\t\t\t\t\tspace_user_update_doc.work_phone = item.work_phone\r\n\r\n\t\t\t\t\t\tif item.phone\r\n\t\t\t\t\t\t\tspace_user_update_doc.mobile = item.phone\r\n\r\n\t\t\t\t\t\tif item.sort_no\r\n\t\t\t\t\t\t\tspace_user_update_doc.sort_no = item.sort_no\r\n\r\n\t\t\t\t\t\tif _.keys(space_user_update_doc).length > 0\r\n\t\t\t\t\t\t\tdb.space_users.update({space: space_id, user: user_id}, {$set: space_user_update_doc})\r\n\r\n\t\t\t\t\t\tif space_user.invite_state == \"refused\" or space_user.invite_state == \"pending\"\r\n\t\t\t\t\t\t\tthrow new Meteor.Error(400, \"该用户还未接受加入工作区，不能修改他的个人信息\")\r\n\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\tif item.username\r\n\t\t\t\t\t\t\t\tdb.users.update({_id: user_id},{$set:{username: item.username}})\r\n\t\t\t\t\t\t\tif item.password\r\n\t\t\t\t\t\t\t\tAccounts.setPassword(user_id, item.password, {logout: false})\r\n\r\n\t\t\t\telse\r\n\t\t\t\t\tif belongOrgids.length > 0\r\n\t\t\t\t\t\tsu_doc = {}\r\n\t\t\t\t\t\tsu_doc._id = db.space_users._makeNewID()\r\n\t\t\t\t\t\tsu_doc.space = space_id\r\n\r\n\t\t\t\t\t\tsu_doc.user_accepted =  true\r\n\t\t\t\t\t\tsu_doc.invite_state = \"accepted\"\r\n\r\n\t\t\t\t\t\tif user\r\n\t\t\t\t\t\t\tsu_doc.user_accepted = false\r\n\t\t\t\t\t\t\tsu_doc.invite_state = \"pending\"\r\n\r\n\t\t\t\t\t\tsu_doc.name = item.name\r\n\t\t\t\t\t\tif item.email\r\n\t\t\t\t\t\t\tsu_doc.email = item.email\r\n\t\t\t\t\t\tsu_doc.organization = belongOrgids[0]\r\n\t\t\t\t\t\tsu_doc.organizations = belongOrgids\r\n\r\n\t\t\t\t\t\tif item.position\r\n\t\t\t\t\t\t\tsu_doc.position = item.position\r\n\r\n\t\t\t\t\t\tif item.work_phone\r\n\t\t\t\t\t\t\tsu_doc.work_phone = item.work_phone\r\n\r\n\t\t\t\t\t\tif item.phone\r\n\t\t\t\t\t\t\tsu_doc.mobile = item.phone\r\n\r\n\t\t\t\t\t\tif item.sort_no\r\n\t\t\t\t\t\t\tsu_doc.sort_no = item.sort_no\r\n\r\n\t\t\t\t\t\tif item.company\r\n\t\t\t\t\t\t\tsu_doc.company = item.company\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif user_id\r\n\t\t\t\t\t\t\tuserInfo = db.users.findOne(user_id, { fields: { username: 1 } })\r\n\t\t\t\t\t\t\tif userInfo.username\r\n\t\t\t\t\t\t\t\tsu_doc.username = userInfo.username\r\n\r\n\t\t\t\t\t\tdb.space_users.insert(su_doc)\r\n\t\t\tcatch e\r\n\t\t\t\terror.line = i+1\r\n\t\t\t\terror.message = e.reason\r\n\t\t\t\terrorList.push(error)\r\n\r\n\t\treturn errorList\r\n","Meteor.methods({\n\n  /*\n  \t\t1、校验用户是否存在\n  \t\t2、校验工作区用户是否存在\n  \t\t3、校验部门是否存在\n  \t\t4、校验部门用户是否存在\n  \t\tTODO: 国际化\n   */\n  import_users: function(space_id, user_pk, data, onlyCheck) {\n    var _self, accepted_user_count, currentUser, currentUserLocale, currentUserPhonePrefix, errorList, owner_id, root_org, space, testData;\n    _self = this;\n    if (!this.userId) {\n      throw new Meteor.Error(401, \"请先登录\");\n    }\n    root_org = db.organizations.findOne({\n      space: space_id,\n      parent: null\n    });\n    space = db.spaces.findOne(space_id);\n    if (!space || !(space != null ? space.admins.includes(this.userId) : void 0)) {\n      throw new Meteor.Error(401, \"只有工作区管理员可以导入用户\");\n    }\n    if (!space.is_paid) {\n      throw new Meteor.Error(401, \"标准版不支持此功能\");\n    }\n    accepted_user_count = db.space_users.find({\n      space: space._id,\n      user_accepted: true\n    }).count();\n    if ((accepted_user_count + data.length) > space.user_limit) {\n      throw new Meteor.Error(400, (\"需要提升已购买用户数至\" + (accepted_user_count + data.length) + \"(当前\" + space.user_limit + \")\") + \", 请在企业信息模块中点击升级按钮购买\");\n    }\n    owner_id = space.owner;\n    testData = [];\n    errorList = [];\n    currentUser = db.users.findOne({\n      _id: _self.userId\n    }, {\n      fields: {\n        locale: 1,\n        phone: 1\n      }\n    });\n    currentUserLocale = currentUser.locale;\n    currentUserPhonePrefix = Accounts.getPhonePrefix(currentUser);\n    data.forEach(function(item, i) {\n      var multiOrgs, operating, organization, organization_depts, phoneNumber, ref, ref1, ref2, ref3, selector, spaceUserExist, testObj, user, userExist;\n      if (!item.phone && !item.email) {\n        throw new Meteor.Error(500, \"第\" + (i + 1) + \"行: 手机号，邮箱不能都为空\");\n      }\n      testObj = {};\n      if (item.username) {\n        testObj.username = item.username;\n        if (testData.filterProperty(\"username\", item.username).length > 0) {\n          throw new Meteor.Error(500, \"第\" + (i + 1) + \"行：用户名重复\");\n        }\n      }\n      if (item.phone) {\n        testObj.phone = item.phone;\n        if (testData.filterProperty(\"phone\", item.phone).length > 0) {\n          throw new Meteor.Error(500, \"第\" + (i + 1) + \"行：手机号重复\");\n        }\n      }\n      if (item.email) {\n        if (!/^([A-Z0-9\\.\\-\\_\\+])*([A-Z0-9\\+\\-\\_])+\\@[A-Z0-9]+([\\-][A-Z0-9]+)*([\\.][A-Z0-9\\-]+){1,8}$/i.test(item.email)) {\n          throw new Meteor.Error(500, \"第\" + (i + 1) + \"行：邮件格式错误\" + item.email);\n        }\n        testObj.email = item.email;\n        if (testData.filterProperty(\"email\", item.email).length > 0) {\n          throw new Meteor.Error(500, \"第\" + (i + 1) + \"行：邮件重复\");\n        }\n      }\n      item.space = space_id;\n      testData.push(testObj);\n      selector = [];\n      operating = \"\";\n      if (item.username) {\n        selector.push({\n          username: item.username\n        });\n      }\n      if (item.email) {\n        selector.push({\n          \"emails.address\": item.email\n        });\n      }\n      if (item.phone) {\n        phoneNumber = currentUserPhonePrefix + item.phone;\n        selector.push({\n          \"phone.number\": phoneNumber\n        });\n      }\n      userExist = db.users.find({\n        $or: selector\n      });\n      if (userExist.count() > 1) {\n        throw new Meteor.Error(500, \"第\" + (i + 1) + \"行：用户名、手机号、邮箱信息有误，无法匹配到同一账号\");\n      } else if (userExist.count() === 1) {\n        user = userExist.fetch()[0]._id;\n        spaceUserExist = db.space_users.find({\n          space: space_id,\n          user: user\n        });\n        if (spaceUserExist.count() === 1) {\n          operating = \"update\";\n        } else if (spaceUserExist.count() === 0) {\n          operating = \"insert\";\n        }\n      } else if (userExist.count() === 0) {\n        operating = \"insert\";\n      }\n      if (item.password && userExist.count() === 1) {\n        if ((ref = userExist.fetch()[0].services) != null ? (ref1 = ref.password) != null ? ref1.bcrypt : void 0 : void 0) {\n          throw new Meteor.Error(500, \"第\" + (i + 1) + \"行：用户已设置密码，不允许修改\");\n        }\n      }\n      organization = item.organization;\n      if (!organization) {\n        throw new Meteor.Error(500, \"第\" + (i + 1) + \"行：部门不能为空\");\n      }\n      organization_depts = organization.split(\"/\");\n      if (organization_depts.length < 1 || organization_depts[0] !== root_org.name) {\n        throw new Meteor.Error(500, \"第\" + (i + 1) + \"行：无效的根部门\");\n      }\n      if (item.password && (user != null ? (ref2 = user.services) != null ? (ref3 = ref2.password) != null ? ref3.bcrypt : void 0 : void 0 : void 0)) {\n        throw new Meteor.Error(500, \"第\" + (i + 1) + \"行：用户已设置密码，不允许修改\");\n      }\n      organization_depts.forEach(function(dept_name, j) {\n        if (!dept_name) {\n          throw new Meteor.Error(500, \"第\" + (i + 1) + \"行：无效的部门\");\n        }\n      });\n      multiOrgs = organization.split(\",\");\n      return multiOrgs.forEach(function(orgFullname) {\n        var fullname;\n        organization_depts = orgFullname.trim().split(\"/\");\n        fullname = \"\";\n        return organization_depts.forEach(function(dept_name, j) {\n          var orgCount;\n          if (j > 0) {\n            if (j === 1) {\n              fullname = dept_name;\n            } else {\n              fullname = fullname + \"/\" + dept_name;\n            }\n            orgCount = db.organizations.find({\n              space: space_id,\n              fullname: fullname\n            }).count();\n            if (orgCount === 0) {\n              throw new Meteor.Error(500, \"第\" + (i + 1) + \"行：部门(\" + dept_name + \")不存在，请先创建\");\n            }\n          }\n        });\n      });\n    });\n    if (onlyCheck) {\n      return;\n    }\n    data.forEach(function(item, i) {\n      var belongOrgids, e, error, multiOrgs, now, operating, organization, phoneNumber, selector, space_user, space_user_update_doc, su_doc, udoc, user, userExist, userInfo, user_id;\n      error = {};\n      try {\n        selector = [];\n        operating = \"\";\n        if (item.email) {\n          selector.push({\n            \"emails.address\": item.email\n          });\n        }\n        if (item.phone) {\n          phoneNumber = currentUserPhonePrefix + item.phone;\n          selector.push({\n            \"phone.number\": phoneNumber\n          });\n        }\n        userExist = db.users.find({\n          $or: selector\n        });\n        if (userExist.count() > 1) {\n          throw new Meteor.Error(400, \"用户名、手机号、邮箱信息有误，无法匹配到同一账号\");\n        } else if (userExist.count() === 1) {\n          user = userExist.fetch()[0];\n        }\n        now = new Date();\n        organization = item.organization;\n        multiOrgs = organization.split(\",\");\n        belongOrgids = [];\n        multiOrgs.forEach(function(orgFullname) {\n          var fullname, org, organization_depts;\n          organization_depts = orgFullname.trim().split(\"/\");\n          fullname = \"\";\n          organization_depts.forEach(function(dept_name, j) {\n            if (j > 0) {\n              if (j === 1) {\n                return fullname = dept_name;\n              } else {\n                return fullname = fullname + \"/\" + dept_name;\n              }\n            } else {\n              return fullname = dept_name;\n            }\n          });\n          org = db.organizations.findOne({\n            space: space_id,\n            fullname: fullname\n          });\n          if (org) {\n            return belongOrgids.push(org._id);\n          }\n        });\n        user_id = null;\n        if (user) {\n          user_id = user._id;\n        } else {\n          udoc = {};\n          udoc._id = db.users._makeNewID();\n          udoc.steedos_id = item.email || udoc._id;\n          udoc.locale = currentUserLocale;\n          udoc.spaces_invited = [space_id];\n          if (item.name) {\n            udoc.name = item.name;\n          }\n          if (item.email) {\n            udoc.emails = [\n              {\n                address: item.email,\n                verified: false\n              }\n            ];\n          }\n          if (item.username) {\n            udoc.username = item.username;\n          }\n          if (item.phone) {\n            udoc.phone = {\n              number: currentUserPhonePrefix + item.phone,\n              mobile: item.phone,\n              verified: false,\n              modified: now\n            };\n          }\n          user_id = db.users.insert(udoc);\n          if (item.password) {\n            Accounts.setPassword(user_id, item.password, {\n              logout: false\n            });\n          }\n        }\n        space_user = db.space_users.findOne({\n          space: space_id,\n          user: user_id\n        });\n        if (space_user) {\n          if (belongOrgids.length > 0) {\n            if (!space_user.organizations) {\n              space_user.organizations = [];\n            }\n            space_user_update_doc = {};\n            space_user_update_doc.organizations = _.uniq(space_user.organizations.concat(belongOrgids));\n            if (item.email) {\n              space_user_update_doc.email = item.email;\n            }\n            if (item.name) {\n              space_user_update_doc.name = item.name;\n            }\n            if (item.company) {\n              space_user_update_doc.company = item.company;\n            }\n            if (item.position) {\n              space_user_update_doc.position = item.position;\n            }\n            if (item.work_phone) {\n              space_user_update_doc.work_phone = item.work_phone;\n            }\n            if (item.phone) {\n              space_user_update_doc.mobile = item.phone;\n            }\n            if (item.sort_no) {\n              space_user_update_doc.sort_no = item.sort_no;\n            }\n            if (_.keys(space_user_update_doc).length > 0) {\n              db.space_users.update({\n                space: space_id,\n                user: user_id\n              }, {\n                $set: space_user_update_doc\n              });\n            }\n            if (space_user.invite_state === \"refused\" || space_user.invite_state === \"pending\") {\n              throw new Meteor.Error(400, \"该用户还未接受加入工作区，不能修改他的个人信息\");\n            } else {\n              if (item.username) {\n                db.users.update({\n                  _id: user_id\n                }, {\n                  $set: {\n                    username: item.username\n                  }\n                });\n              }\n              if (item.password) {\n                return Accounts.setPassword(user_id, item.password, {\n                  logout: false\n                });\n              }\n            }\n          }\n        } else {\n          if (belongOrgids.length > 0) {\n            su_doc = {};\n            su_doc._id = db.space_users._makeNewID();\n            su_doc.space = space_id;\n            su_doc.user_accepted = true;\n            su_doc.invite_state = \"accepted\";\n            if (user) {\n              su_doc.user_accepted = false;\n              su_doc.invite_state = \"pending\";\n            }\n            su_doc.name = item.name;\n            if (item.email) {\n              su_doc.email = item.email;\n            }\n            su_doc.organization = belongOrgids[0];\n            su_doc.organizations = belongOrgids;\n            if (item.position) {\n              su_doc.position = item.position;\n            }\n            if (item.work_phone) {\n              su_doc.work_phone = item.work_phone;\n            }\n            if (item.phone) {\n              su_doc.mobile = item.phone;\n            }\n            if (item.sort_no) {\n              su_doc.sort_no = item.sort_no;\n            }\n            if (item.company) {\n              su_doc.company = item.company;\n            }\n            if (user_id) {\n              userInfo = db.users.findOne(user_id, {\n                fields: {\n                  username: 1\n                }\n              });\n              if (userInfo.username) {\n                su_doc.username = userInfo.username;\n              }\n            }\n            return db.space_users.insert(su_doc);\n          }\n        }\n      } catch (error1) {\n        e = error1;\n        error.line = i + 1;\n        error.message = e.reason;\n        return errorList.push(error);\n      }\n    });\n    return errorList;\n  }\n});\n","Meteor.startup ->\r\n\tWebApp.connectHandlers.use \"/api/export/space_users\", (req, res, next)->\r\n\t\ttry\r\n\t\t\tcurrent_user_info = uuflowManager.check_authorization(req)\r\n\r\n\t\t\tquery = req.query\r\n\t\t\tspace_id = query.space_id\r\n\t\t\torg_id = query.org_id\r\n\t\t\tuser_id = query['X-User-Id']\r\n\t\t\torg = db.organizations.findOne({_id:org_id},{fields:{fullname:1}})\r\n\t\t\tusers_to_xls = new Array\r\n\t\t\tnow = new Date \r\n\t\t\tif Steedos.isSpaceAdmin(space_id,user_id)\r\n\t\t\t\tusers_to_xls = db.space_users.find({\r\n\t\t\t\t\tspace: space_id\r\n\t\t\t\t}, {\r\n\t\t\t\t\tsort: {name: 1}\r\n\t\t\t\t}).fetch()\r\n\t\t\telse\r\n\t\t\t\torg_ids = []\r\n\t\t\t\torg_objs = db.organizations.find({_id:org_id,space:space_id},{fields:{_id:1,children:1}}).fetch()\r\n\t\t\t\torg_ids = _.pluck(org_objs,'_id')\r\n\t\t\t\t_.each org_objs,(org_obj)->\r\n\t\t\t\t\torg_ids = _.union(org_ids,org_obj?.children)\r\n\t\t\t\t_.uniq(org_ids)\r\n\t\t\t\tusers_to_xls = db.space_users.find({space:space_id,organizations:{$in:org_ids}},{sort: {sort_no: -1,name:1}}).fetch()\r\n\t\t\tejs = require('ejs')\r\n\t\t\tstr = Assets.getText('server/ejs/export_space_users.ejs')\r\n\t\t\t\r\n\t\t\t# 检测是否有语法错误\r\n\t\t\tejsLint = require('ejs-lint')\r\n\t\t\terror_obj = ejsLint.lint(str, {})\r\n\t\t\tif error_obj\r\n\t\t\t\tconsole.error \"===/api/contacts/export/space_users:\"\r\n\t\t\t\tconsole.error error_obj\r\n\r\n\t\t\ttemplate = ejs.compile(str)\r\n\r\n\t\t\tlang = 'en'\r\n\t\t\tif current_user_info.locale is 'zh-cn'\r\n\t\t\t\tlang = 'zh-CN'\r\n\r\n\t\t\torgName = if org then org.fullname else org_id\r\n\t\t\tfields = [{\r\n\t\t\t\t\ttype: 'String',\r\n\t\t\t\t\tname:'name',\r\n\t\t\t\t\twidth: 60,\r\n\t\t\t\t\ttitle: TAPi18n.__('space_users_name',{},lang)\r\n\t\t\t\t},{\r\n\t\t\t\t\ttype: 'String',\r\n\t\t\t\t\tname:'mobile',\r\n\t\t\t\t\twidth: 100,\r\n\t\t\t\t\ttitle: TAPi18n.__('space_users_mobile',{},lang)\r\n\t\t\t\t},{\r\n\t\t\t\t\ttype: 'String',\r\n\t\t\t\t\tname:'work_phone',\r\n\t\t\t\t\twidth: 100,\r\n\t\t\t\t\ttitle: TAPi18n.__('space_users_work_phone',{},lang)\r\n\t\t\t\t},{\r\n\t\t\t\t\ttype: 'String',\r\n\t\t\t\t\tname:'email',\r\n\t\t\t\t\twidth: 100,\r\n\t\t\t\t\ttitle: TAPi18n.__('space_users_email',{},lang)\r\n\t\t\t\t},{\r\n\t\t\t\t\ttype: 'String',\r\n\t\t\t\t\tname:'company',\r\n\t\t\t\t\twidth: 100,\r\n\t\t\t\t\ttitle: TAPi18n.__('space_users_company',{},lang)\r\n\t\t\t\t},{\r\n\t\t\t\t\ttype: 'String',\r\n\t\t\t\t\tname:'position',\r\n\t\t\t\t\twidth: 100,\r\n\t\t\t\t\ttitle: TAPi18n.__('space_users_position',{},lang)\r\n\t\t\t\t},{\r\n\t\t\t\t\ttype: 'String',\r\n\t\t\t\t\tname:'organizations',\r\n\t\t\t\t\twidth: 600,\r\n\t\t\t\t\ttitle: TAPi18n.__('space_users_organizations',{},lang),\r\n\t\t\t\t\ttransform: (value)->\r\n\t\t\t\t\t\torgNames = db.organizations.find({_id: {$in: value}},{fields: {fullname: 1}}).map((item,index)->\r\n\t\t\t\t\t\t\treturn item.fullname\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t\treturn orgNames.join(\",\")\r\n\t\t\t\t},{\r\n\t\t\t\t\ttype: 'String',\r\n\t\t\t\t\tname:'manager',\r\n\t\t\t\t\twidth: 60,\r\n\t\t\t\t\ttitle: TAPi18n.__('space_users_manager',{},lang)\r\n\t\t\t\t\ttransform: (value)->\r\n\t\t\t\t\t\tuser = db.users.findOne({_id: value},{fields: {name: 1}})\r\n\t\t\t\t\t\treturn user?.name\r\n\t\t\t\t},{\r\n\t\t\t\t\ttype: 'String',\r\n\t\t\t\t\tname:'user',\r\n\t\t\t\t\twidth: 60,\r\n\t\t\t\t\ttitle: TAPi18n.__('users_username',{},lang)\r\n\t\t\t\t\ttransform: (value)->\r\n\t\t\t\t\t\tuser = db.users.findOne({_id: value},{fields: {username: 1}})\r\n\t\t\t\t\t\treturn user?.username\r\n\t\t\t\t},{\r\n\t\t\t\t\ttype: 'Number',\r\n\t\t\t\t\tname:'sort_no',\r\n\t\t\t\t\twidth: 35,\r\n\t\t\t\t\ttitle: TAPi18n.__('space_users_sort_no',{},lang)\r\n\t\t\t\t},{\r\n\t\t\t\t\ttype: 'String',\r\n\t\t\t\t\tname:'user_accepted',\r\n\t\t\t\t\twidth: 35,\r\n\t\t\t\t\ttitle: TAPi18n.__('space_users_user_accepted',{},lang)\r\n\t\t\t\t\ttransform: (value)->\r\n\t\t\t\t\t\treturn if value then TAPi18n.__('space_users_user_accepted_yes',{},lang) else TAPi18n.__('space_users_user_accepted_no',{},lang)\r\n\t\t\t\t}]\r\n\t\t\t\r\n\t\t\tsheet_name = orgName?.replace(/\\//g,\"-\") #不支持\"/\"符号\r\n\t\t\tret = template({\r\n\t\t\t\tlang: lang,\r\n\t\t\t\tsheet_name: sheet_name,\r\n\t\t\t\tfields: fields,\r\n\t\t\t\tusers_to_xls: users_to_xls\r\n\t\t\t})\r\n\r\n\t\t\tfileName = \"SteedOSContacts_\" + moment().format('YYYYMMDDHHmm') + \".xls\"\r\n\t\t\tres.setHeader(\"Content-type\", \"application/octet-stream\")\r\n\t\t\tres.setHeader(\"Content-Disposition\", \"attachment;filename=\"+encodeURI(fileName))\r\n\t\t\tres.end(ret)\r\n\t\tcatch e\r\n\t\t\tconsole.error e.stack\r\n\t\t\tres.end(e.message)","Meteor.startup(function() {\n  return WebApp.connectHandlers.use(\"/api/export/space_users\", function(req, res, next) {\n    var current_user_info, e, ejs, ejsLint, error_obj, fields, fileName, lang, now, org, orgName, org_id, org_ids, org_objs, query, ret, sheet_name, space_id, str, template, user_id, users_to_xls;\n    try {\n      current_user_info = uuflowManager.check_authorization(req);\n      query = req.query;\n      space_id = query.space_id;\n      org_id = query.org_id;\n      user_id = query['X-User-Id'];\n      org = db.organizations.findOne({\n        _id: org_id\n      }, {\n        fields: {\n          fullname: 1\n        }\n      });\n      users_to_xls = new Array;\n      now = new Date;\n      if (Steedos.isSpaceAdmin(space_id, user_id)) {\n        users_to_xls = db.space_users.find({\n          space: space_id\n        }, {\n          sort: {\n            name: 1\n          }\n        }).fetch();\n      } else {\n        org_ids = [];\n        org_objs = db.organizations.find({\n          _id: org_id,\n          space: space_id\n        }, {\n          fields: {\n            _id: 1,\n            children: 1\n          }\n        }).fetch();\n        org_ids = _.pluck(org_objs, '_id');\n        _.each(org_objs, function(org_obj) {\n          return org_ids = _.union(org_ids, org_obj != null ? org_obj.children : void 0);\n        });\n        _.uniq(org_ids);\n        users_to_xls = db.space_users.find({\n          space: space_id,\n          organizations: {\n            $in: org_ids\n          }\n        }, {\n          sort: {\n            sort_no: -1,\n            name: 1\n          }\n        }).fetch();\n      }\n      ejs = require('ejs');\n      str = Assets.getText('server/ejs/export_space_users.ejs');\n      ejsLint = require('ejs-lint');\n      error_obj = ejsLint.lint(str, {});\n      if (error_obj) {\n        console.error(\"===/api/contacts/export/space_users:\");\n        console.error(error_obj);\n      }\n      template = ejs.compile(str);\n      lang = 'en';\n      if (current_user_info.locale === 'zh-cn') {\n        lang = 'zh-CN';\n      }\n      orgName = org ? org.fullname : org_id;\n      fields = [\n        {\n          type: 'String',\n          name: 'name',\n          width: 60,\n          title: TAPi18n.__('space_users_name', {}, lang)\n        }, {\n          type: 'String',\n          name: 'mobile',\n          width: 100,\n          title: TAPi18n.__('space_users_mobile', {}, lang)\n        }, {\n          type: 'String',\n          name: 'work_phone',\n          width: 100,\n          title: TAPi18n.__('space_users_work_phone', {}, lang)\n        }, {\n          type: 'String',\n          name: 'email',\n          width: 100,\n          title: TAPi18n.__('space_users_email', {}, lang)\n        }, {\n          type: 'String',\n          name: 'company',\n          width: 100,\n          title: TAPi18n.__('space_users_company', {}, lang)\n        }, {\n          type: 'String',\n          name: 'position',\n          width: 100,\n          title: TAPi18n.__('space_users_position', {}, lang)\n        }, {\n          type: 'String',\n          name: 'organizations',\n          width: 600,\n          title: TAPi18n.__('space_users_organizations', {}, lang),\n          transform: function(value) {\n            var orgNames;\n            orgNames = db.organizations.find({\n              _id: {\n                $in: value\n              }\n            }, {\n              fields: {\n                fullname: 1\n              }\n            }).map(function(item, index) {\n              return item.fullname;\n            });\n            return orgNames.join(\",\");\n          }\n        }, {\n          type: 'String',\n          name: 'manager',\n          width: 60,\n          title: TAPi18n.__('space_users_manager', {}, lang),\n          transform: function(value) {\n            var user;\n            user = db.users.findOne({\n              _id: value\n            }, {\n              fields: {\n                name: 1\n              }\n            });\n            return user != null ? user.name : void 0;\n          }\n        }, {\n          type: 'String',\n          name: 'user',\n          width: 60,\n          title: TAPi18n.__('users_username', {}, lang),\n          transform: function(value) {\n            var user;\n            user = db.users.findOne({\n              _id: value\n            }, {\n              fields: {\n                username: 1\n              }\n            });\n            return user != null ? user.username : void 0;\n          }\n        }, {\n          type: 'Number',\n          name: 'sort_no',\n          width: 35,\n          title: TAPi18n.__('space_users_sort_no', {}, lang)\n        }, {\n          type: 'String',\n          name: 'user_accepted',\n          width: 35,\n          title: TAPi18n.__('space_users_user_accepted', {}, lang),\n          transform: function(value) {\n            if (value) {\n              return TAPi18n.__('space_users_user_accepted_yes', {}, lang);\n            } else {\n              return TAPi18n.__('space_users_user_accepted_no', {}, lang);\n            }\n          }\n        }\n      ];\n      sheet_name = orgName != null ? orgName.replace(/\\//g, \"-\") : void 0;\n      ret = template({\n        lang: lang,\n        sheet_name: sheet_name,\n        fields: fields,\n        users_to_xls: users_to_xls\n      });\n      fileName = \"SteedOSContacts_\" + moment().format('YYYYMMDDHHmm') + \".xls\";\n      res.setHeader(\"Content-type\", \"application/octet-stream\");\n      res.setHeader(\"Content-Disposition\", \"attachment;filename=\" + encodeURI(fileName));\n      return res.end(ret);\n    } catch (error) {\n      e = error;\n      console.error(e.stack);\n      return res.end(e.message);\n    }\n  });\n});\n"]}