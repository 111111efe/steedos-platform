{"version":3,"sources":["meteor://💻app/packages/steedos_qhd-archive-xml/server/router.coffee","meteor://💻app/server/router.coffee","meteor://💻app/packages/steedos_qhd-archive-xml/server/lib/export_to_xml.coffee","meteor://💻app/server/lib/export_to_xml.coffee","meteor://💻app/packages/steedos_qhd-archive-xml/server/lib/records_xml_sync.coffee","meteor://💻app/server/lib/records_xml_sync.coffee","meteor://💻app/packages/steedos_qhd-archive-xml/server/methods/start_exportxml.coffee","meteor://💻app/server/methods/start_exportxml.coffee"],"names":["express","fs","path","router","Npm","require","Router","WebApp","connectHandlers","use","req","res","next","fileAddress","fileName","ref","ref1","ref2","stats","xml_file_path","query","filename","Meteor","settings","records_xml","join","statSync","isFile","setHeader","encodeURI","createReadStream","pipe","end","NodeRSA","async_converterBase64","converterBase64","encapsulation","logger","mkdirp","readFileInfo","xml2js","Logger","ExportToXML","spaces","record_ids","file_obj","callback","bmsj","chunks","e","stream","on","chunk","push","file_data","Buffer","concat","toString","error1","console","log","wrapAsync","cms_file","WDSJ","file_objs","Creator","Collections","find","_id","$in","versions","sort","created","forEach","BM","DZSX","SZHSX","bmms","fbmms","str_file","original","type","name","size","getExtension","JSON","stringify","record_obj","BQMDX","CCWZ","DH","FZNR","JGRYST","JGRYSTK","LY","NRMS","QXGL","WJSJ","WJST","WJSTGX","WJSTK","XSTZ","YWST","YWSTK","audit_list","category_obj","cms_files","fonds_obj","fzbcjdw","fzbcjsj","fzblx","fzblxms","ref3","ref4","retention_obj","space_user_list","user_ids","findOne","fonds_name","retention_peroid","category_code","fetch","archives_name","archives_identifier","fonds_constituting_unit_name","code","year","organizational_structure","page_number","file_number","classification_number","item_number","title","parallel_title","other_title_information","annex_title","descriptor","keyword","personal_name","abstract","document_number","author","document_date","toISOString","start_date","closing_date","destroy_date","precedence","prinpipal_receiver","other_receivers","report","security_classification","applicant_name","applicant_organization_name","secrecy_period","document_aggregation","total_number_of_items","total_number_of_pages","document_type","document_status","language","orignal_document_creation_way","produce_flag","archive_date","archive_dept","current_location","offline_medium_identifier","offline_medium_storage_location","intelligent_property_statement","authorized_agent","permission_assignment","control_identifier","index","WD","wdzcsm","main","aggregation_level","electronic_record_code","related_archives","length","audit_obj","ref5","ywobj","action_user","business_status","business_activity","action_time","action_mandate","action_description","space_user_obj","jgryobj","user","company","position","Date","export2xml","DZWJFZB","bqmdx_json","bqmdx_xml","buffer_bqmdx","builder","day","dzqm_json","filePath","key","month","now","private_key_file","public_key_file","qmbsf","qmgz","qmr","qmsfbs","qmsj","readStream","ref10","ref6","ref7","ref8","ref9","signature","xml","zs","zs_obj","zsk","zsyz","error","Builder","buildObject","archive","readFileSync","encoding","sign","signaturer","direct","update","$set","signature_rules","signature_time","signer","certificate","certificate_reference","signature_algorithmidentifier","getFullYear","getMonth","getDate","existsSync","sync","writeFile","bindEnvironment","err","success","has_xml","failed","prototype","getNonExportedRecords","space","$or","$exists","fields","DoExport","records","that","time","record","timeEnd","schedule","XMLSync","settings_records_xml","scheduleJobMaps","run","startExport","exportToXML","startScheduleJob","recurrenceRule","fun","_","isString","isFunction","info","scheduleJob","methods","start_exportxml","result"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAAA,OAAA,EAAAC,EAAA,EAAAC,IAAA,EAAAC,MAAA;AAAAH,UAAUI,IAAIC,OAAJ,CAAY,SAAZ,CAAV;AACAF,SAASH,QAAQM,MAAR,EAAT;AACAJ,OAAOE,IAAIC,OAAJ,CAAY,MAAZ,CAAP;AACAJ,KAAKG,IAAIC,OAAJ,CAAY,IAAZ,CAAL;AAEAE,OAAOC,eAAP,CAAuBC,GAAvB,CAA2B,yBAA3B,EAAsD,UAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX;AAGlD,MAAAC,WAAA,EAAAC,QAAA,EAAAC,GAAA,EAAAC,IAAA,EAAAC,IAAA,EAAAC,KAAA,EAAAC,aAAA;AAAAL,aAAAJ,OAAA,QAAAK,MAAAL,IAAAU,KAAA,YAAAL,IAAuBM,QAAvB,GAAuB,MAAvB,GAAuB,MAAvB;AAEAF,kBAAA,CAAAH,OAAAM,OAAAC,QAAA,aAAAN,OAAAD,KAAAQ,WAAA,YAAAP,KAA8CE,aAA9C,GAA8C,MAA9C,GAA8C,MAA9C;;AAEA,MAAGA,aAAH;AAEIN,kBAAcX,KAAKuB,IAAL,CAAUN,aAAV,EAAyBL,QAAzB,CAAd;AAEAI,YAAQjB,GAAGyB,QAAH,CAAYb,WAAZ,CAAR;;AAEA,QAAGK,MAAMS,MAAN,EAAH;AACIhB,UAAIiB,SAAJ,CAAc,cAAd,EAA8B,0BAA9B;AACAjB,UAAIiB,SAAJ,CAAc,qBAAd,EAAqC,yBAAyBC,UAAUf,QAAV,CAA9D;ACAN,aDCMb,GAAG6B,gBAAH,CAAoBjB,WAApB,EAAiCkB,IAAjC,CAAsCpB,GAAtC,CCDN;ADFE;ACIF,aDCMA,IAAIqB,GAAJ,CAAQ,GAAR,CCDN;ADVF;AAAA;ACaA,WDAIrB,IAAIqB,GAAJ,CAAQ,GAAR,CCAJ;AACD;ADrBH,G;;;;;;;;;;;;;;;;;;;AELA,IAAAC,OAAA,EAAAC,qBAAA,EAAAC,eAAA,EAAAC,aAAA,EAAAnC,EAAA,EAAAoC,MAAA,EAAAC,MAAA,EAAApC,IAAA,EAAAqC,YAAA,EAAAC,MAAA;AAAAA,SAASpC,IAAIC,OAAJ,CAAY,QAAZ,CAAT;AACAJ,KAAKG,IAAIC,OAAJ,CAAY,IAAZ,CAAL;AACAH,OAAOE,IAAIC,OAAJ,CAAY,MAAZ,CAAP;AACAiC,SAASlC,IAAIC,OAAJ,CAAY,QAAZ,CAAT;AACA4B,UAAU7B,IAAIC,OAAJ,CAAY,UAAZ,CAAV;AAEAgC,SAAS,IAAII,MAAJ,CAAW,mBAAX,CAAT;;AAKAC,cAAc,UAACC,MAAD,EAASC,UAAT;AACb,OAACD,MAAD,GAAUA,MAAV;AACA,OAACC,UAAD,GAAcA,UAAd;AAFa,CAAd;;AAMAT,kBAAkB,UAACU,QAAD,EAAWC,QAAX;AACjB,MAAAC,IAAA,EAAAC,MAAA,EAAAC,CAAA,EAAAC,MAAA;;AAAA;AACCH,WAAO,EAAP;AACAG,aAASL,SAASf,gBAAT,CAA0B,OAA1B,CAAT;AAEAkB,aAAS,EAAT;AACAE,WAAOC,EAAP,CAAU,MAAV,EAAkB,UAACC,KAAD;ACGd,aDFHJ,OAAOK,IAAP,CAAYD,KAAZ,CCEG;ADHJ;ACKE,WDHFF,OAAOC,EAAP,CAAU,KAAV,EAAiB;AAChB,UAAAG,SAAA;AAAAA,kBAAYC,OAAOC,MAAP,CAAcR,MAAd,CAAZ;AACAD,aAAOO,UAAUG,QAAV,CAAmB,QAAnB,CAAP;AACAX,eAAS,EAAT,EAAaC,IAAb;AAHD,MCGE;ADVH,WAAAW,MAAA;AAYMT,QAAAS,MAAA;ACMH,WDLFC,QAAQC,GAAR,CAAY,GAAZ,EAAgBX,CAAhB,CCKE;AACD;ADpBe,CAAlB;;AAgBAf,wBAAwBZ,OAAOuC,SAAP,CAAiB1B,eAAjB,CAAxB;;AAGAI,eAAe,UAACuB,QAAD;AACd,MAAAC,IAAA,EAAAC,SAAA;AAAAA,cAAYC,QAAQC,WAAR,CAAoB,sBAApB,EAA4CC,IAA5C,CAAiD;AAACC,SAAI;AAACC,WAAIP,SAASQ;AAAd;AAAL,GAAjD,EAA+E;AAACC,UAAM;AAACC,eAAS,CAAC;AAAX;AAAP,GAA/E,CAAZ;AACAT,SAAO,EAAP;AACAC,YAAUS,OAAV,CAAkB,UAAC5B,QAAD;AACjB,QAAA6B,EAAA,EAAAC,IAAA,EAAAC,KAAA,EAAAC,IAAA,EAAA9B,IAAA,EAAA+B,KAAA,EAAA/D,GAAA,EAAAC,IAAA,EAAAC,IAAA,EAAA8D,QAAA;AAAAJ,WAAO;AACN,cAAA9B,YAAA,QAAA9B,MAAA8B,SAAAmC,QAAA,YAAAjE,IAA4BkE,IAA5B,GAA4B,MAA5B,GAA4B,MADtB;AAEN,gBAAApC,YAAA,QAAA7B,OAAA6B,SAAAmC,QAAA,YAAAhE,KAA8BkE,IAA9B,GAA8B,MAA9B,GAA8B,MAFxB;AAGN,iBAAArC,YAAA,QAAA5B,OAAA4B,SAAAmC,QAAA,YAAA/D,KAA+BkE,IAA/B,GAA+B,MAA/B,GAA+B,MAHzB;AAIN,gBAAU;AAJJ,KAAP;AAMAP,YAAQ;AACP,iBAAU,EADH;AAEP,eAAQ,EAFD;AAGP,gBAAS,EAHF;AAIP,gBAAS;AAJF,KAAR;AAOAC,WAAO,qKAAP;AAEAC,YAAQ,aAAAjC,YAAA,OAAYA,SAAUuC,YAAV,EAAZ,GAAY,MAAZ,CAAR;AAKAL,eAAWM,KAAKC,SAAL,CAAezC,QAAf,CAAX;AACAE,WAAO,IAAIQ,MAAJ,CAAWwB,QAAX,EAAqBtB,QAArB,CAA8B,QAA9B,CAAP;AAEAiB,SAAK;AACJ,cAAA7B,YAAA,OAAQA,SAAUuB,GAAlB,GAAkB,MADd;AAEJ,cAAQO,IAFJ;AAGJ,eAASC,KAHL;AAIJ,cAAQC,IAJJ;AAKJ,gBAAUC,KALN;AAMJ,cAAQ/B;AANJ,KAAL;ACiBE,WDTFgB,KAAKV,IAAL,CAAUqB,EAAV,CCSE;ADzCH;AAiCA,SAAOX,IAAP;AApCc,CAAf;;AAuCA3B,gBAAgB,UAACmD,UAAD;AAEf,MAAAC,KAAA,EAAAC,IAAA,EAAAC,EAAA,EAAAC,IAAA,EAAAC,MAAA,EAAAC,OAAA,EAAAC,EAAA,EAAAC,IAAA,EAAAC,IAAA,EAAAC,IAAA,EAAAC,IAAA,EAAAC,MAAA,EAAAC,KAAA,EAAAC,IAAA,EAAAC,IAAA,EAAAC,KAAA,EAAAC,UAAA,EAAAC,YAAA,EAAAC,SAAA,EAAAC,SAAA,EAAAC,OAAA,EAAAC,OAAA,EAAAC,KAAA,EAAAC,OAAA,EAAAhG,GAAA,EAAAC,IAAA,EAAAC,IAAA,EAAA+F,IAAA,EAAAC,IAAA,EAAAC,aAAA,EAAAC,eAAA,EAAAC,QAAA;AAAAT,cAAY1C,QAAQC,WAAR,CAAoB,eAApB,EAAqCmD,OAArC,CAA6C;AAAC,WAAA9B,cAAA,OAAMA,WAAY+B,UAAlB,GAAkB;AAAnB,GAA7C,CAAZ;AAEAJ,kBAAgBjD,QAAQC,WAAR,CAAoB,mBAApB,EAAyCmD,OAAzC,CAAiD;AAAC,WAAA9B,cAAA,OAAMA,WAAYgC,gBAAlB,GAAkB;AAAnB,GAAjD,CAAhB;AAEAd,iBAAexC,QAAQC,WAAR,CAAoB,wBAApB,EAA8CmD,OAA9C,CAAsD;AAAC,WAAA9B,cAAA,OAAMA,WAAYiC,aAAlB,GAAkB;AAAnB,GAAtD,CAAf;AAEAd,cAAYzC,QAAQC,WAAR,CAAoB,WAApB,EAAiCC,IAAjC,CAAsC;AAAC,kBAAAoB,cAAA,OAAaA,WAAYnB,GAAzB,GAAyB;AAA1B,GAAtC,EAAqE;AAACG,UAAM;AAACC,eAAS,CAAC;AAAX;AAAP,GAArE,CAAZ;AAEAgC,eAAavC,QAAQC,WAAR,CAAoB,eAApB,EAAqCC,IAArC,CAA0C;AAAC,wCAAAoB,cAAA,OAAmCA,WAAYnB,GAA/C,GAA+C;AAAhD,GAA1C,EAAgGqD,KAAhG,EAAb;AAIA3B,OAAK;AACJ,cAAAP,cAAA,OAASA,WAAYmC,aAArB,GAAqB,MAArB,KAAsC,EADlC;AAEJ,cAAAnC,cAAA,OAASA,WAAYoC,mBAArB,GAAqB,MAArB,KAA4C,EAFxC;AAGJ,aAAAhB,aAAA,OAAQA,UAAWzB,IAAnB,GAAmB,MAAnB,KAA2B,EAHvB;AAIJ,eAAAK,cAAA,OAAUA,WAAYqC,4BAAtB,GAAsB,MAAtB,KAAsD;AAJlD,GAAL;AAOAlC,OAAK;AACJ,YAAAiB,aAAA,OAAOA,UAAWkB,IAAlB,GAAkB,MAAlB,KAA0B,EADtB;AAEJ,WAAAtC,cAAA,OAAMA,WAAYuC,IAAlB,GAAkB,MAAlB,KAA0B,EAFtB;AAGJ,aAAAZ,iBAAA,OAAQA,cAAehC,IAAvB,GAAuB,MAAvB,KAA+B,EAH3B;AAIJ,WAAAK,cAAA,OAAMA,WAAYwC,wBAAlB,GAAkB,MAAlB,KAA8C,EAJ1C;AAKJ,YAAAtB,gBAAA,OAAOA,aAAcvB,IAArB,GAAqB,MAArB,KAA6B,EALzB;AAMJ,WAAAK,cAAA,OAAMA,WAAYyC,WAAlB,GAAkB,MAAlB,KAAiC,EAN7B;AAOJ,aAAAzC,cAAA,OAAQA,WAAY0C,WAApB,GAAoB,MAApB,KAAmC,EAP/B;AAQJ,aAAA1C,cAAA,OAAQA,WAAY2C,qBAApB,GAAoB,MAApB,KAA6C,EARzC;AASJ,WAAA3C,cAAA,OAAMA,WAAY4C,WAAlB,GAAkB,MAAlB,KAAiC;AAT7B,GAAL;AAYApC,SAAO;AACN,WAAAR,cAAA,OAAMA,WAAY6C,KAAlB,GAAkB,MAAlB,KAA2B,EADrB;AAEN,aAAA7C,cAAA,OAAQA,WAAY8C,cAApB,GAAoB,MAApB,KAAsC,EAFhC;AAGN,eAAA9C,cAAA,OAAUA,WAAY+C,uBAAtB,GAAsB,MAAtB,KAAiD,EAH3C;AAIN,aAAA/C,cAAA,OAAQA,WAAYgD,WAApB,GAAoB,MAApB,KAAmC,EAJ7B;AAKN,YAAAhD,cAAA,OAAOA,WAAYiD,UAAnB,GAAmB,MAAnB,KAAiC,EAL3B;AAMN,YAAAjD,cAAA,OAAOA,WAAYkD,OAAnB,GAAmB,MAAnB,KAA8B,EANxB;AAON,WAAAlD,cAAA,OAAMA,WAAYmD,aAAlB,GAAkB,MAAlB,KAAmC,EAP7B;AAQN,WAAAnD,cAAA,OAAMA,WAAYoD,QAAlB,GAAkB,MAAlB,KAA8B,EARxB;AASN,aAAApD,cAAA,OAAQA,WAAYqD,eAApB,GAAoB,MAApB,KAAuC,EATjC;AAUN,YAAArD,cAAA,OAAOA,WAAYsD,MAAnB,GAAmB,MAAnB,KAA6B,EAVvB;AAWN,aAAAtD,cAAA,QAAAxE,MAAAwE,WAAAuD,aAAA,YAAA/H,IAAmCgI,WAAnC,KAAQ,MAAR,GAAQ,MAAR,KAAoD,EAX9C;AAYN,aAAAxD,cAAA,QAAAvE,OAAAuE,WAAAyD,UAAA,YAAAhI,KAAgC+H,WAAhC,KAAQ,MAAR,GAAQ,MAAR,KAAiD,EAZ3C;AAaN,aAAAxD,cAAA,QAAAtE,OAAAsE,WAAA0D,YAAA,YAAAhI,KAAkC8H,WAAlC,KAAQ,MAAR,GAAQ,MAAR,KAAmD,EAb7C;AAcN,aAAAxD,cAAA,QAAAyB,OAAAzB,WAAA2D,YAAA,YAAAlC,KAAkC+B,WAAlC,KAAQ,MAAR,GAAQ,MAAR,KAAmD,EAd7C;AAeN,aAAAxD,cAAA,OAAQA,WAAY4D,UAApB,GAAoB,MAApB,KAAkC,EAf5B;AAgBN,WAAA5D,cAAA,OAAMA,WAAY6D,kBAAlB,GAAkB,MAAlB,KAAwC,EAhBlC;AAiBN,WAAA7D,cAAA,OAAMA,WAAY8D,eAAlB,GAAkB,MAAlB,KAAqC,EAjB/B;AAkBN,WAAA9D,cAAA,OAAMA,WAAY+D,MAAlB,GAAkB,MAAlB,KAA4B,EAlBtB;AAmBN,WAAA/D,cAAA,OAAMA,WAAYgE,uBAAlB,GAAkB,MAAlB,KAA6C,EAnBvC;AAoBN,YAAAhE,cAAA,OAAOA,WAAYiE,cAAnB,GAAmB,MAAnB,KAAqC,EApB/B;AAqBN,aAAAjE,cAAA,OAAQA,WAAYkE,2BAApB,GAAoB,MAApB,KAAmD,EArB7C;AAsBN,aAAAlE,cAAA,OAAQA,WAAYmE,cAApB,GAAoB,MAApB,KAAsC;AAtBhC,GAAP;AAyBArD,SAAO;AACN,eAAAd,cAAA,OAAUA,WAAYoE,oBAAtB,GAAsB,MAAtB,KAA8C,EADxC;AAEN,cAAApE,cAAA,OAASA,WAAYqE,qBAArB,GAAqB,MAArB,KAA8C,EAFxC;AAGN,WAAArE,cAAA,OAAMA,WAAYsE,qBAAlB,GAAkB,MAAlB,KAA2C,EAHrC;AAIN,aAAAtE,cAAA,OAAQA,WAAYuE,aAApB,GAAoB,MAApB,KAAqC,EAJ/B;AAKN,aAAAvE,cAAA,OAAQA,WAAYwE,eAApB,GAAoB,MAApB,KAAuC,EALjC;AAMN,WAAAxE,cAAA,OAAMA,WAAYyE,QAAlB,GAAkB,MAAlB,KAA8B,EANxB;AAON,iBAAAzE,cAAA,OAAYA,WAAY0E,6BAAxB,GAAwB,MAAxB,KAAyD,EAPnD;AAQN,aAAA1E,cAAA,OAAQA,WAAY2E,YAApB,GAAoB,MAApB,KAAoC,EAR9B;AASN,aAAA3E,cAAA,QAAA0B,OAAA1B,WAAA4E,YAAA,YAAAlD,KAAkC8B,WAAlC,KAAQ,MAAR,GAAQ,MAAR,KAAmD,EAT7C;AAUN,aAAAxD,cAAA,OAAQA,WAAY6E,YAApB,GAAoB,MAApB,KAAoC;AAV9B,GAAP;AAaA3E,SAAO;AACN,aAAAF,cAAA,OAAQA,WAAY8E,gBAApB,GAAoB,MAApB,KAAwC,EADlC;AAEN,eAAA9E,cAAA,OAAUA,WAAY+E,yBAAtB,GAAsB,MAAtB,KAAmD,EAF7C;AAGN,eAAA/E,cAAA,OAAUA,WAAYgF,+BAAtB,GAAsB,MAAtB,KAAyD;AAHnD,GAAP;AAMAvE,SAAO;AACN,eAAAT,cAAA,OAAUA,WAAYiF,8BAAtB,GAAsB,MAAtB,KAAwD,EADlD;AAEN,aAAAjF,cAAA,OAAQA,WAAYkF,gBAApB,GAAoB,MAApB,KAAwC,EAFlC;AAGN,aAAAlF,cAAA,OAAQA,WAAYmF,qBAApB,GAAoB,MAApB,KAA6C,EAHvC;AAIN,aAAAnF,cAAA,OAAQA,WAAYoF,kBAApB,GAAoB,MAApB,KAA0C;AAJpC,GAAP;AAQA1E,SAAO,EAAP;AAEAS,YAAUjC,OAAV,CAAkB,UAACX,QAAD,EAAW8G,KAAX;AACjB,QAAAC,EAAA,EAAA9G,IAAA,EAAA+G,MAAA;AAAA/G,WAAOxB,aAAauB,QAAb,CAAP;AACAgH,aAAS,MAAT;;AACA,QAAAhH,YAAA,OAAGA,SAAUiH,IAAb,GAAa,MAAb;AACCD,eAAS,KAAT;ACWE;;ADVHD,SAAK;AACJ,eAAA/G,YAAA,OAASA,SAAUM,GAAnB,GAAmB,MADf;AAEJ,cAAQwG,KAFJ;AAGJ,gBAAUE,MAHN;AAIJ,cAAQ/G;AAJJ,KAAL;ACiBE,WDXFkC,KAAK5C,IAAL,CAAUwH,EAAV,CCWE;ADtBH;AAcA3E,SAAO;AACN,aAAAX,cAAA,OAAQA,WAAYyF,iBAApB,GAAoB,MAApB,KAAyC,EADnC;AAEN,UAAMlF,EAFA;AAGN,cAAAP,cAAA,OAASA,WAAY0F,sBAArB,GAAqB,MAArB,KAA+C,EAHzC;AAIN,UAAMvF,EAJA;AAKN,YAAQK,IALF;AAMN,YAAQM,IANF;AAON,YAAQZ,IAPF;AAQN,YAAQO,IARF;AASN,YAAQC;AATF,GAAP;AAYAE,WAAS;AACR,cAAAZ,cAAA,OAASA,WAAYnB,GAArB,GAAqB,MAArB,KAA4B,EADpB;AAER,iBAAAmB,cAAA,OAAYA,WAAY2F,gBAAxB,GAAwB,MAAxB,KAA4C;AAFpC,GAAT;AAMA9E,UAAQ;AACP,YAAQF,IADD;AAEP,cAAUC;AAFH,GAAR;AAMAG,SAAO,EAAP;AAGAc,aAAW,EAAX;;AAEA,OAAAZ,cAAA,OAAGA,WAAY2E,MAAf,GAAe,MAAf,IAAwB,CAAxB;AACC3E,eAAW/B,OAAX,CAAmB,UAAC2G,SAAD;AAClB,UAAAC,IAAA,EAAAC,KAAA;AAAAA,cAAQ;AACP,kBAAAF,aAAA,OAASA,UAAWhH,GAApB,GAAoB,MAApB,KAA2B,EADpB;AAEP,oBAAAgH,aAAA,OAAWA,UAAWG,WAAtB,GAAsB,MAAtB,KAAqC,EAF9B;AAGP,iBAAAH,aAAA,OAAQA,UAAWI,eAAnB,GAAmB,MAAnB,KAAsC,EAH/B;AAIP,iBAAAJ,aAAA,OAAQA,UAAWK,iBAAnB,GAAmB,MAAnB,KAAwC,EAJjC;AAKP,iBAAAL,aAAA,QAAAC,OAAAD,UAAAM,WAAA,YAAAL,KAAgCtC,WAAhC,KAAQ,MAAR,GAAQ,MAAR,KAAiD,EAL1C;AAMP,iBAAAqC,aAAA,OAAQA,UAAWO,cAAnB,GAAmB,MAAnB,KAAqC,EAN9B;AAOP,iBAAAP,aAAA,OAAQA,UAAWQ,kBAAnB,GAAmB,MAAnB,KAAyC;AAPlC,OAAR;AASAtF,WAAKjD,IAAL,CAAUiI,KAAV;ACIG,aDHHlE,SAAS/D,IAAT,CAAA+H,aAAA,OAAcA,UAAWG,WAAzB,GAAyB,MAAzB,CCGG;ADdJ;ACgBC;;ADFFhF,UAAQ;AACP,YAAOD;AADA,GAAR;AAKAV,WAAS,EAAT;AACAuB,oBAAkBlD,QAAQC,WAAR,CAAoB,aAApB,EAAmCC,IAAnC,CAAwC;AAAC,YAAO;AAACE,WAAI+C;AAAL;AAAR,GAAxC,EAAiEK,KAAjE,EAAlB;;AACA,OAAAN,mBAAA,OAAGA,gBAAiBgE,MAApB,GAAoB,MAApB,IAA6B,CAA7B;AACChE,oBAAgB1C,OAAhB,CAAwB,UAACoH,cAAD;AACvB,UAAAC,OAAA;AAAAA,gBAAU;AACT,oBAAAD,kBAAA,OAAWA,eAAgBE,IAA3B,GAA2B,MAA3B,KAAmC,EAD1B;AAET,kBAAU,MAFD;AAGT,mBAAAF,kBAAA,OAAUA,eAAgB3G,IAA1B,GAA0B,MAA1B,KAAkC,EAHzB;AAIT,mBAAA2G,kBAAA,OAAUA,eAAgBG,OAA1B,GAA0B,MAA1B,KAAqC,EAJ5B;AAKT,iBAAAH,kBAAA,OAAQA,eAAgBI,QAAxB,GAAwB,MAAxB,KAAoC;AAL3B,OAAV;ACaG,aDNHrG,OAAOvC,IAAP,CAAYyI,OAAZ,CCMG;ADdJ;ACgBC;;ADLFjG,YAAU;AACT,cAASD;AADA,GAAV;AAKAD,SAAO;AACN,aAASS,KADH;AAEN,aAASG,KAFH;AAGN,eAAWV;AAHL,GAAP;AAQAiB,UAAQ,KAAR;AAEAC,YAAU,6BAAV;AAKAF,YAAU,IAAIqF,IAAJ,EAAV;AAEAtF,YAAU,QAAV;AAEApB,UAAQ;AACP,aAASsB,KADF;AAEP,eAAWC,OAFJ;AAGP,eAAWF,QAAQkC,WAAR,EAHJ;AAIP,eAAWnC,OAJJ;AAKP,YAAOjB;AALA,GAAR;AAQA,SAAOH,KAAP;AApMe,CAAhB;;AAuMA9C,YAAYyJ,UAAZ,GAAyB,UAAC5G,UAAD,EAAazC,QAAb;AAExB,MAAAsJ,OAAA,EAAAC,UAAA,EAAAC,SAAA,EAAAC,YAAA,EAAAC,OAAA,EAAAC,GAAA,EAAAC,SAAA,EAAAzJ,CAAA,EAAApC,WAAA,EAAAC,QAAA,EAAA6L,QAAA,EAAAC,GAAA,EAAAC,KAAA,EAAAC,GAAA,EAAAC,gBAAA,EAAAC,eAAA,EAAAC,KAAA,EAAAC,IAAA,EAAAC,GAAA,EAAAC,MAAA,EAAAC,IAAA,EAAAC,UAAA,EAAAvM,GAAA,EAAAC,IAAA,EAAAuM,KAAA,EAAAtM,IAAA,EAAA+F,IAAA,EAAAC,IAAA,EAAAoE,IAAA,EAAAmC,IAAA,EAAAC,IAAA,EAAAC,IAAA,EAAAC,IAAA,EAAAC,SAAA,EAAA1K,MAAA,EAAA2K,GAAA,EAAA1M,aAAA,EAAA2G,IAAA,EAAAgG,EAAA,EAAAC,MAAA,EAAAC,GAAA,EAAAC,IAAA;;AAAA;AACC5B,iBAAajK,cAAcmD,UAAd,CAAb;AADD,WAAA7B,MAAA;AAEMT,QAAAS,MAAA;AACLC,YAAQC,GAAR,CAAY,GAAZ,EAAgBX,CAAhB;AACAZ,WAAO6L,KAAP,CAAgB3I,WAAWnB,GAAX,GAAe,MAA/B,EAAqCnB,CAArC;ACLC;;ADOF,MAAGoJ,UAAH;AAECG,cAAU,IAAIhK,OAAO2L,OAAX,EAAV;AAEA7B,gBAAYE,QAAQ4B,WAAR,CAAoB/B,UAApB,CAAZ;AAEAU,uBAAA,CAAAhM,MAAAO,OAAAC,QAAA,aAAAP,OAAAD,IAAAS,WAAA,aAAAP,OAAAD,KAAAqN,OAAA,YAAApN,KAA0D8L,gBAA1D,GAA0D,MAA1D,GAA0D,MAA1D,GAA0D,MAA1D;;AACA,QAAGA,gBAAH;AACCR,qBAAe,IAAIhJ,MAAJ,CAAW+I,SAAX,CAAf;;AAEA;AACCgB,qBAAarN,GAAGqO,YAAH,CAAgBvB,gBAAhB,EAAiC;AAACwB,oBAAS;AAAV,SAAjC,CAAb;AACA3B,cAAM,IAAI3K,OAAJ,CAAYqL,UAAZ,EAAuB,OAAvB,CAAN;AAFD,eAAA5J,MAAA;AAGMT,YAAAS,MAAA;AACLC,gBAAQC,GAAR,CAAY,SAAZ,EAAsBX,CAAtB;ACNG;;ADYJ;AACC2K,oBAAYhB,IAAI4B,IAAJ,CAASjC,YAAT,EAAuB,QAAvB,EAAiC,MAAjC,CAAZ;AADD,eAAA7I,MAAA;AAEMT,YAAAS,MAAA;AACLC,gBAAQC,GAAR,CAAY,MAAZ,EAAmBX,CAAnB;ACTG;;ADYJgK,cAAQ,SAAR;AACAC,aAAO,QAAP;AACAG,aAAO,IAAInB,IAAJ,EAAP;AACAiB,YAAA,EAAAnG,OAAA1F,OAAAC,QAAA,aAAA0F,OAAAD,KAAAxF,WAAA,aAAA6J,OAAApE,KAAAoH,OAAA,YAAAhD,KAA6CoD,UAA7C,GAA6C,MAA7C,GAA6C,MAA7C,GAA6C,MAA7C,KAA2D,EAA3D;AACArB,eAAS,uBAAT;AACAY,YAAM,EAAN;AACAhB,wBAAA,CAAAQ,OAAAlM,OAAAC,QAAA,aAAAkM,OAAAD,KAAAhM,WAAA,aAAAkM,OAAAD,KAAAY,OAAA,YAAAX,KAAyDV,eAAzD,GAAyD,MAAzD,GAAyD,MAAzD,GAAyD,MAAzD;;AACA,UAAGA,eAAH;AACCc,aAAK7N,GAAGqO,YAAH,CAAgBtB,eAAhB,EAAgC;AAACuB,oBAAS;AAAV,SAAhC,CAAL;AACAN,eAAO,EAAP;AACAF,iBAAS;AACR,gBAAMD,EADE;AAER,kBAAQG;AAFA,SAAT;AAIAD,YAAI3K,IAAJ,CAAS0K,MAAT;ACRG;;ADSJrB,kBAAY;AACX,iBAASO,KADE;AAEX,gBAAQC,IAFG;AAGX,gBAAQG,KAAKtE,WAAL,EAHG;AAIX,eAAOoE,GAJI;AAKX,gBAAQS,SALG;AAMX,eAAOI,GANI;AAOX,kBAAUZ;AAPC,OAAZ;AAWAnJ,cAAQC,WAAR,CAAoB,gBAApB,EAAsCwK,MAAtC,CAA6CC,MAA7C,CAAoDpJ,WAAWnB,GAA/D,EACC;AACCwK,cAAK;AACJC,2BAAgB3B,IADZ;AAEJ4B,0BAAezB,IAFX;AAGJ0B,kBAAO5B,GAHH;AAIJS,qBAAUA,SAJN;AAKJoB,uBAAYlB,EALR;AAMJmB,iCAAsBhB,IANlB;AAOJiB,yCAA8B9B;AAP1B;AADN,OADD;AAaAhB,gBAAU;AACT,mBAAW,gDADF;AAET,cAAM,MAFG;AAGT,iBAASC,UAHA;AAIT,gBAAQK;AAJC,OAAV;AAOAmB,YAAMrB,QAAQ4B,WAAR,CAAoBhC,OAApB,CAAN;AAEAlJ,eAAS,IAAIK,MAAJ,CAAWsK,GAAX,CAAT;AAUAf,YAAM,IAAIZ,IAAJ,EAAN;AACApE,aAAOgF,IAAIqC,WAAJ,EAAP;AACAtC,cAAQC,IAAIsC,QAAJ,KAAiB,CAAzB;AACA3C,YAAMK,IAAIuC,OAAJ,EAAN;AAGAlO,sBAAA,CAAAwM,OAAArM,OAAAC,QAAA,aAAAgM,QAAAI,KAAAnM,WAAA,YAAA+L,MAA8CpM,aAA9C,GAA8C,MAA9C,GAA8C,MAA9C;;AACA,UAAGA,aAAH;AACCwL,mBAAWzM,KAAKuB,IAAL,CAAUN,aAAV,CAAX;AACAL,mBAAA,CAAAyE,cAAA,OAAWA,WAAYnB,GAAvB,GAAuB,MAAvB,IAA6B,MAA7B;AACAvD,sBAAcX,KAAKuB,IAAL,CAAUkL,QAAV,EAAoB7L,QAApB,CAAd;;AAEA,YAAG,CAACb,GAAGqP,UAAH,CAAc3C,QAAd,CAAJ;AACCrK,iBAAOiN,IAAP,CAAY5C,QAAZ;ACzBI;;AACD,eD2BJ1M,GAAGuP,SAAH,CAAa3O,WAAb,EAA0BqC,MAA1B,EAAkC5B,OAAOmO,eAAP,CACjC,UAACC,GAAD;AACC,cAAGA,GAAH;AACC/L,oBAAQC,GAAR,CAAe2B,WAAWnB,GAAX,GAAe,WAA9B,EAAyCsL,GAAzC;AC3BK,mBD4BLrN,OAAO6L,KAAP,CAAgB3I,WAAWnB,GAAX,GAAe,WAA/B,EAA0CsL,GAA1C,CC5BK;AACD;ADuB2B,UAAlC,CC3BI;ADlEN;AAPD;ACiFE;ADzFsB,CAAzB;;AAoHAhN,YAAYiN,OAAZ,GAAsB,UAACpK,UAAD;AACrB5B,UAAQC,GAAR,CAAY,MAAZ;ACvBC,SDwBDK,QAAQC,WAAR,CAAoB,gBAApB,EAAsCwK,MAAtC,CAA6CC,MAA7C,CAAoD;AAACvK,SAAKmB,WAAWnB;AAAjB,GAApD,EAA2E;AAACwK,UAAM;AAACgB,eAAS;AAAV;AAAP,GAA3E,CCxBC;ADsBoB,CAAtB;;AAIAlN,YAAYmN,MAAZ,GAAqB,UAACtK,UAAD,EAAa2I,KAAb;AChBnB,SDiBD7L,OAAO6L,KAAP,CAAa,qBAAmB3I,WAAW6C,KAA9B,GAAoC,UAApC,GAA8C7C,WAAWnB,GAAzD,GAA6D,WAA7D,GAA0E8J,KAAvF,CCjBC;ADgBmB,CAArB;;AAIAxL,YAAWoN,SAAX,CAAaC,qBAAb,GAAqC;AACpC,MAAA3O,KAAA,EAAAL,GAAA;AAAAK,UAAQ,EAAR;;AACA,MAAG,KAACwB,UAAD,MAAA7B,MAAA,KAAA6B,UAAA,YAAA7B,IAA6BoK,MAA7B,GAA6B,MAA7B,IAAoC,CAAvC;AACC/J,YAAQ;AACP4O,aAAO;AAAC3L,aAAK,KAAC1B;AAAP,OADA;AAEPyB,WAAK;AAACC,aAAK,KAACzB;AAAP;AAFE,KAAR;AADD;AAMCxB,YAAQ;AACP4O,aAAO;AAAC3L,aAAK,KAAC1B;AAAP,OADA;AAGPsN,WAAK,CACJ;AAACL,iBAAS;AAAV,OADI,EAEJ;AAACA,iBAAS;AAACM,mBAAS;AAAV;AAAV,OAFI;AAHE,KAAR;ACEC;;ADMF,SAAOjM,QAAQC,WAAR,CAAoB,gBAApB,EAAsCC,IAAtC,CAA2C/C,KAA3C,EAAkD;AAAC+O,YAAQ;AAAC/L,WAAK;AAAN;AAAT,GAAlD,EAAsEqD,KAAtE,EAAP;AAhBoC,CAArC;;AAkBA/E,YAAWoN,SAAX,CAAaM,QAAb,GAAwB;AACvB,MAAAC,OAAA,EAAAC,IAAA;AAAA3M,UAAQ4M,IAAR,CAAa,aAAb;AACAF,YAAU,KAACN,qBAAD,EAAV;AACAO,SAAO,IAAP;AACAD,UAAQ5L,OAAR,CAAgB,UAAC+L,MAAD;AACf,QAAAvN,CAAA,EAAAsC,UAAA;AAAA5B,YAAQC,GAAR,CAAY,aAAZ,EAAA4M,UAAA,OAA0BA,OAAQpM,GAAlC,GAAkC,MAAlC;AAEAmB,iBAAatB,QAAQC,WAAR,CAAoB,gBAApB,EAAsCmD,OAAtC,CAA8C;AAAC,aAAAmJ,UAAA,OAAMA,OAAQpM,GAAd,GAAc;AAAf,KAA9C,CAAb;;AACA,QAAGmB,UAAH;AACC;AACC7C,oBAAYyJ,UAAZ,CAAuB5G,UAAvB;ACII,eDHJ7C,YAAYiN,OAAZ,CAAoBpK,UAApB,CCGI;ADLL,eAAA7B,MAAA;AAGMT,YAAAS,MAAA;AACLhB,oBAAYmN,MAAZ,CAAmBtK,UAAnB,EAA8BtC,CAA9B;AALF;ACWG;ADfJ;ACiBC,SDNDU,QAAQ8M,OAAR,CAAgB,aAAhB,CCMC;ADrBsB,CAAxB,C;;;;;;;;;;;;;;;;;;;AEhaA,IAAApO,MAAA,EAAAtB,GAAA,EAAAC,IAAA,EAAAC,IAAA,EAAAyP,QAAA;AAAAA,WAAWtQ,IAAIC,OAAJ,CAAY,eAAZ,CAAX;AAEAsQ,UAAU,EAAV;AAYAtO,SAAS,IAAII,MAAJ,CAAW,UAAX,CAAT;AAEAkO,QAAQC,oBAAR,IAAA7P,MAAAO,OAAAC,QAAA,YAAAR,IAAgDS,WAAhD,GAAgD,MAAhD;AAEAmP,QAAQE,eAAR,GAA0B,EAA1B;;AAEAF,QAAQG,GAAR,GAAc;AACb,MAAA7N,CAAA;;AAAA;AAECU,YAAQC,GAAR,CAAY,4BAAZ;ACPE,WDQF+M,QAAQI,WAAR,ECRE;ADKH,WAAA7C,KAAA;AAIOjL,QAAAiL,KAAA;ACNJ,WDOF7L,OAAO6L,KAAP,CAAa,wBAAb,EAAuCjL,CAAvC,CCPE;AACD;ADAW,CAAd;;AASA0N,QAAQI,WAAR,GAAsB,UAACnO,UAAD;AAErB,MAAAoO,WAAA,EAAAhQ,IAAA,EAAA2B,MAAA;AAAAA,WAAAgO,WAAA,QAAA3P,OAAA2P,QAAAC,oBAAA,YAAA5P,KAAwC2B,MAAxC,GAAwC,MAAxC,GAAwC,MAAxC;;AAEA,MAAG,CAACA,MAAJ;AACCN,WAAO6L,KAAP,CAAa,kCAAb;AACA;ACNC;;ADQFvK,UAAQC,GAAR,CAAY,6BAAZ;AACAoN,gBAAc,IAAItO,WAAJ,CAAgBC,MAAhB,EAAwBC,UAAxB,CAAd;ACNC,SDQDoO,YAAYZ,QAAZ,ECRC;ADHoB,CAAtB;;AAaAO,QAAQM,gBAAR,GAA2B,UAAC/L,IAAD,EAAOgM,cAAP,EAAuBC,GAAvB;AAE1B,MAAG,CAACD,cAAJ;AACC7O,WAAO6L,KAAP,CAAa,qBAAb;AACA;ACPC;;ADQF,MAAG,CAACkD,EAAEC,QAAF,CAAWH,cAAX,CAAJ;AACC7O,WAAO6L,KAAP,CAAa,8EAAb;AACA;ACNC;;ADQF,MAAG,CAACiD,GAAJ;ACNG,WDOF9O,OAAO6L,KAAP,CAAa,eAAb,CCPE;ADMH,SAEK,IAAG,CAACkD,EAAEE,UAAF,CAAaH,GAAb,CAAJ;ACNF,WDOF9O,OAAO6L,KAAP,CAAgBiD,MAAI,kBAApB,CCPE;ADME;AAGJ9O,WAAOkP,IAAP,CAAY,0BAAwBrM,IAApC;ACNE,WDOFyL,QAAQE,eAAR,CAAwB3L,IAAxB,IAAgCwL,SAASc,WAAT,CAAqBN,cAArB,EAAqCC,GAArC,CCP9B;AACD;ADTwB,CAA3B;;AAiBA,KAAAnQ,OAAA2P,QAAAC,oBAAA,YAAA5P,KAAiCkQ,cAAjC,GAAiC,MAAjC;AACCvN,UAAQC,GAAR,CAAY,oCAAZ;AACA+M,UAAQM,gBAAR,CAAyB,qBAAzB,GAAAhQ,OAAA0P,QAAAC,oBAAA,YAAA3P,KAA8EiQ,cAA9E,GAA8E,MAA9E,EAA8F5P,OAAOmO,eAAP,CAAuBkB,QAAQG,GAA/B,CAA9F;ACJA,C;;;;;;;;;;;;;;;;;;;ACzDDxP,OAAOmQ,OAAP,CACC;AAAAC,mBAAiB,UAAC/O,MAAD,EAASC,UAAT;AAChB,QAAAK,CAAA,EAAAiL,KAAA,EAAA8C,WAAA;;AAAA;AACCrN,cAAQC,GAAR,CAAY,2BAAZ,EAAwCjB,MAAxC,EAAgDC,UAAhD;;AACA,UAAGD,UAAWC,UAAd;AACCoO,sBAAc,IAAItO,WAAJ,CAAgBC,MAAhB,EAAwBC,UAAxB,CAAd;AACAoO,oBAAYZ,QAAZ;AACA,eAAOuB,MAAP;AALF;AAAA,aAAAjO,MAAA;AAMMT,UAAAS,MAAA;AACLwK,cAAQjL,CAAR;AACA,aAAOiL,KAAP;ACIE;ADbJ;AAAA,CADD,E","file":"/packages/steedos_qhd-archive-xml.js","sourcesContent":["express = Npm.require('express');\nrouter = express.Router();\npath = Npm.require('path')\nfs = Npm.require('fs')\n\nWebApp.connectHandlers.use '/view/encapsulation/xml', (req, res, next) ->\n\n    # // 实现文件下载 \n    fileName = req?.query?.filename\n\n    xml_file_path = Meteor.settings?.records_xml?.xml_file_path\n\n    if xml_file_path\n\n        fileAddress = path.join xml_file_path, fileName\n\n        stats = fs.statSync fileAddress\n\n        if stats.isFile()\n            res.setHeader(\"Content-type\", \"application/octet-stream\")\n            res.setHeader(\"Content-Disposition\", \"attachment;filename=\" + encodeURI(fileName))\n            fs.createReadStream(fileAddress).pipe(res);\n        else\n            res.end 404\n    else\n        res.end 404","var express, fs, path, router;\n\nexpress = Npm.require('express');\n\nrouter = express.Router();\n\npath = Npm.require('path');\n\nfs = Npm.require('fs');\n\nWebApp.connectHandlers.use('/view/encapsulation/xml', function(req, res, next) {\n  var fileAddress, fileName, ref, ref1, ref2, stats, xml_file_path;\n  fileName = req != null ? (ref = req.query) != null ? ref.filename : void 0 : void 0;\n  xml_file_path = (ref1 = Meteor.settings) != null ? (ref2 = ref1.records_xml) != null ? ref2.xml_file_path : void 0 : void 0;\n  if (xml_file_path) {\n    fileAddress = path.join(xml_file_path, fileName);\n    stats = fs.statSync(fileAddress);\n    if (stats.isFile()) {\n      res.setHeader(\"Content-type\", \"application/octet-stream\");\n      res.setHeader(\"Content-Disposition\", \"attachment;filename=\" + encodeURI(fileName));\n      return fs.createReadStream(fileAddress).pipe(res);\n    } else {\n      return res.end(404);\n    }\n  } else {\n    return res.end(404);\n  }\n});\n","xml2js = Npm.require 'xml2js'\nfs = Npm.require 'fs'\npath = Npm.require 'path'\nmkdirp = Npm.require 'mkdirp'\nNodeRSA = Npm.require 'node-rsa'\n\nlogger = new Logger 'QHD_Export_TO_XML'\n\n# =============================================\n# spaces: Array 工作区ID\n# contract_flows： Array 合同类流程\nExportToXML = (spaces, record_ids) ->\n\t@spaces = spaces\n\t@record_ids = record_ids\n\treturn\n\n# 存储为编码数据，base64字符串\nconverterBase64 = (file_obj, callback)->\n\ttry \n\t\tbmsj = \"\"\n\t\tstream = file_obj.createReadStream('files')\n\t\t# buffer the read chunks\n\t\tchunks = []\n\t\tstream.on 'data', (chunk) ->\n\t\t\tchunks.push chunk\n\t\tstream.on 'end', () ->\n\t\t\tfile_data = Buffer.concat(chunks)\n\t\t\tbmsj = file_data.toString('base64')\n\t\t\tcallback(\"\", bmsj)\n\t\t\treturn\n\tcatch e\n\t\tconsole.log \"e\",e\n\nasync_converterBase64 = Meteor.wrapAsync(converterBase64)\n\n# 读取文件信息\nreadFileInfo = (cms_file) ->\n\tfile_objs = Creator.Collections['cfs.files.filerecord'].find({_id:{$in:cms_file.versions}},{sort: {created: -1}})\n\tWDSJ = []\n\tfile_objs.forEach (file_obj)->\n\t\tDZSX = {\n\t\t\t\"格式信息\": file_obj?.original?.type,\n\t\t\t\"计算机文件名\": file_obj?.original?.name,\n\t\t\t\"计算机文件大小\": file_obj?.original?.size,\n\t\t\t\"文档创建程序\": \"\"\n\t\t}\n\t\tSZHSX = {\n\t\t\t\"数字化对象形态\":\"\",\n\t\t\t\"扫描分辨率\":\"\",\n\t\t\t\"扫描色彩模式\":\"\",\n\t\t\t\"图像压缩方案\":\"\",\n\t\t}\n\n\t\tbmms = \"本封装包中“编码数据”元素存储的是计算机文件二进制流的Base64编码，有关Base64编码规则参见IETF RFC 2045多用途邮件扩展（MIME）第一部分：互联网信息体格式。当提取和显现封装在编码数据元素中的计算机文件时，应对Base64编码进行反编码，并依据封装包中“反编码关键字”元素中记录的值还原计算机文件的扩展名\"\n\n\t\tfbmms = \"base64-\" + file_obj?.getExtension()\n\t\t\n\t\t# 读取文件内容\n\t\t# bmsj = async_converterBase64(file_obj)\n\t\t# 读取数据库内容-'base64'编码\n\t\tstr_file = JSON.stringify(file_obj)\n\t\tbmsj = new Buffer(str_file).toString('base64')\n\t\t\n\t\tBM = {\n\t\t\t\"编码ID\": file_obj?._id,\n\t\t\t\"电子属性\": DZSX,\n\t\t\t\"数字化属性\": SZHSX,\n\t\t\t\"编码描述\": bmms,\n\t\t\t\"反编码关键字\": fbmms,\n\t\t\t\"编码数据\": bmsj\n\t\t}\n\t\tWDSJ.push BM\n\treturn WDSJ\n\n# 封装被签名对象\nencapsulation = (record_obj) ->\n\t# 全宗\n\tfonds_obj = Creator.Collections[\"archive_fonds\"].findOne({'_id':record_obj?.fonds_name})\n\t# 保管期限\n\tretention_obj = Creator.Collections[\"archive_retention\"].findOne({'_id':record_obj?.retention_peroid})\n\t# 类别\n\tcategory_obj = Creator.Collections[\"archive_classification\"].findOne({'_id':record_obj?.category_code})\n\t# 读取所有的文件\n\tcms_files = Creator.Collections[\"cms_files\"].find({'parent.ids':record_obj?._id},{sort: {created: -1}})\n\t# 审计\n\taudit_list = Creator.Collections[\"archive_audit\"].find({'action_administrative_records_id':record_obj?._id}).fetch()\n\n\t# === 电子文件封装包 - 被签名对象 - 封装内容\n\t# 来源\n\tLY = {\n\t\t\"档案馆名称\": record_obj?.archives_name || \"\",\n\t\t\"档案馆代码\": record_obj?.archives_identifier || \"\",\n\t\t\"全宗名称\": fonds_obj?.name || \"\",\n\t\t\"立档单位名称\": record_obj?.fonds_constituting_unit_name || \"\"\n\t}\n\t# 档号\n\tDH = {\n\t\t\"全宗号\": fonds_obj?.code || \"\",\n\t\t\"年度\": record_obj?.year || \"\",\n\t\t\"保管期限\": retention_obj?.name || \"\",\n\t\t\"机构\": record_obj?.organizational_structure || \"\",\n\t\t\"类别号\": category_obj?.name || \"\",\n\t\t\"页号\": record_obj?.page_number || \"\",\n\t\t\"保管卷号\": record_obj?.file_number || \"\",\n\t\t\"分类卷号\": record_obj?.classification_number || \"\",\n\t\t\"件号\": record_obj?.item_number || \"\"\n\t}\n\t# 内容描述\n\tNRMS = {\n\t\t\"题名\": record_obj?.title || \"\",\n\t\t\"并列题名\": record_obj?.parallel_title || \"\",\n\t\t\"说明题名文字\": record_obj?.other_title_information || \"\",\n\t\t\"附件题名\": record_obj?.annex_title || \"\",\n\t\t\"主题词\": record_obj?.descriptor || \"\",\n\t\t\"关键词\": record_obj?.keyword || \"\",\n\t\t\"人名\": record_obj?.personal_name || \"\",\n\t\t\"摘要\": record_obj?.abstract || \"\",\n\t\t\"文件编号\": record_obj?.document_number || \"\",\n\t\t\"责任者\": record_obj?.author || \"\",\n\t\t\"文件日期\": record_obj?.document_date?.toISOString() || \"\",\n\t\t\"起始日期\": record_obj?.start_date?.toISOString() || \"\",\n\t\t\"截止日期\": record_obj?.closing_date?.toISOString() || \"\",\n\t\t\"销毁日期\": record_obj?.destroy_date?.toISOString() || \"\",\n\t\t\"紧急程度\": record_obj?.precedence || \"\",\n\t\t\"主送\": record_obj?.prinpipal_receiver || \"\",\n\t\t\"抄送\": record_obj?.other_receivers || \"\",\n\t\t\"抄报\": record_obj?.report || \"\",\n\t\t\"密级\": record_obj?.security_classification || \"\",\n\t\t\"拟稿人\": record_obj?.applicant_name || \"\",\n\t\t\"拟稿单位\": record_obj?.applicant_organization_name || \"\",\n\t\t\"保密期限\": record_obj?.secrecy_period || \"\"\n\t}\n\t# 形式特征\n\tXSTZ = {\n\t\t\"文件组合类型\": record_obj?.document_aggregation || \"\",\n\t\t\"卷内文件数\": record_obj?.total_number_of_items || \"\",\n\t\t\"页数\": record_obj?.total_number_of_pages || \"\",\n\t\t\"文件类型\": record_obj?.document_type || \"\",\n\t\t\"文件状态\": record_obj?.document_status || \"\",\n\t\t\"语种\": record_obj?.language || \"\",\n\t\t\"电子档案生成方式\": record_obj?.orignal_document_creation_way || \"\",\n\t\t\"处理标志\": record_obj?.produce_flag || \"\",\n\t\t\"归档日期\": record_obj?.archive_date?.toISOString() || \"\",\n\t\t\"归档部门\": record_obj?.archive_dept || \"\"\n\t}\n\t# 存储位置\n\tCCWZ = {\n\t\t\"当前位置\": record_obj?.current_location || \"\",\n\t\t\"脱机载体编号\": record_obj?.offline_medium_identifier || \"\",\n\t\t\"脱机载体存址\": record_obj?.offline_medium_storage_location || \"\"\n\t}\n\t# 权限管理\n\tQXGL = {\n\t\t\"知识产权说明\": record_obj?.intelligent_property_statement || \"\",\n\t\t\"授权对象\": record_obj?.authorized_agent || \"\",\n\t\t\"授权行为\": record_obj?.permission_assignment || \"\",\n\t\t\"控制标识\": record_obj?.control_identifier || \"\"\n\t}\n\n\t# 文件数据\n\tWJSJ = []\n\t# 读取文档\n\tcms_files.forEach (cms_file, index)->\n\t\tWDSJ = readFileInfo(cms_file)\n\t\twdzcsm = \"附属文档\"\n\t\tif cms_file?.main\n\t\t\twdzcsm = \"主文档\"\n\t\tWD = {\n\t\t\t\"文档标识符\": cms_file?._id,\n\t\t\t\"文档序号\": index,\n\t\t\t\"文档主从声明\": wdzcsm,\n\t\t\t\"文档数据\": WDSJ\n\t\t}\n\t\tWJSJ.push WD\n\n\t# 文件实体\n\tWJST = {\n\t\t\"聚合层次\": record_obj?.aggregation_level || \"\",\n\t\t\"来源\": LY,\n\t\t\"电子文件号\": record_obj?.electronic_record_code || \"\",\n\t\t\"档号\": DH,\n\t\t\"内容描述\": NRMS,\n\t\t\"形式特征\": XSTZ,\n\t\t\"存储位置\": CCWZ,\n\t\t\"权限管理\": QXGL,\n\t\t\"文件数据\": WJSJ\n\t}\n\t# 文件实体关系\n\tWJSTGX = {\n\t\t\"实体标识符\": record_obj?._id || \"\",\n\t\t\"被关联实体标识符\": record_obj?.related_archives || \"\"\n\t}\n\n\t# 文件实体块\n\tWJSTK = {\n\t\t\"文件实体\": WJST,\n\t\t\"文件实体关系\": WJSTGX\n\t}\n\n\t# 业务实体\n\tYWST = []\n\t\n\t# 人员表\n\tuser_ids = []\n\t\n\tif audit_list?.length > 0\n\t\taudit_list.forEach (audit_obj)->\n\t\t\tywobj = {\n\t\t\t\t\"业务标识符\": audit_obj?._id || \"\",\n\t\t\t\t\"机构人员标识符\": audit_obj?.action_user || \"\",\n\t\t\t\t\"业务状态\": audit_obj?.business_status || \"\",\n\t\t\t\t\"业务行为\": audit_obj?.business_activity || \"\",\n\t\t\t\t\"行为时间\": audit_obj?.action_time?.toISOString() || \"\",\n\t\t\t\t\"行为依据\": audit_obj?.action_mandate || \"\",\n\t\t\t\t\"行为描述\": audit_obj?.action_description || \"\"\n\t\t\t}\n\t\t\tYWST.push ywobj\n\t\t\tuser_ids.push audit_obj?.action_user\n\t\n\t# 业务实体块\n\tYWSTK = {\n\t\t\"业务实体\":YWST\n\t}\n\n\t# 机构人员实体\n\tJGRYST = []\n\tspace_user_list = Creator.Collections[\"space_users\"].find({'user':{$in:user_ids}}).fetch()\n\tif space_user_list?.length > 0\n\t\tspace_user_list.forEach (space_user_obj)->\n\t\t\tjgryobj = {\n\t\t\t\t\"机构人员标识符\": space_user_obj?.user || \"\",\n\t\t\t\t\"机构人员类型\": \"内设机构\",\n\t\t\t\t\"机构人员名称\": space_user_obj?.name || \"\",\n\t\t\t\t\"组织机构代码\": space_user_obj?.company || \"\",\n\t\t\t\t\"个人职位\": space_user_obj?.position || \"\"\n\t\t\t}\n\t\t\tJGRYST.push jgryobj\n\n\t# 机构人员实体块\n\tJGRYSTK = {\n\t\t\"机构人员实体\":JGRYST\n\t}\n\n\t# 封装内容\n\tFZNR = {\n\t\t\"文件实体块\": WJSTK,\n\t\t\"业务实体块\": YWSTK,\n\t\t\"机构人员实体块\": JGRYSTK,\n\t}\n\n\t# === 电子文件封装包 - 被签名对象\n\t# 封装包类型\n\tfzblx = \"原始型\"\n\t# 封装包类型描述\n\tfzblxms = \"本封装包包含电子文件数据及其元数据，原始封装，未经修改\"\n\t# if record_obj?.has_xml\n\t# \tfzblx = \"修改型\"\n\t# \tfzblxms = \"本封装包包含电子文件数据及其元数据，系修改封装，在保留原封装包的基础上，添加了修改层\"\n\t# 封装包创建时间\n\tfzbcjsj = new Date\n\t# 封装包创建单位\n\tfzbcjdw = \"河北港口集团\"\n\t# 被签名对象\n\tBQMDX = {\n\t\t\"封装包类型\": fzblx,\n\t\t\"封装包类型描述\": fzblxms,\n\t\t\"封装包创建时间\": fzbcjsj.toISOString(),\n\t\t\"封装包创建单位\": fzbcjdw,\n\t\t\"封装内容\":FZNR\n\t}\n\n\treturn BQMDX\n\n# 导出为xml文件\nExportToXML.export2xml = (record_obj, callback) ->\n\t# 封装被签名对象\n\ttry\n\t\tbqmdx_json = encapsulation(record_obj)\n\tcatch e\n\t\tconsole.log \"e\",e\n\t\tlogger.error \"#{record_obj._id}封装失败\",e\n\n\tif bqmdx_json\n\t\t# 转xml\n\t\tbuilder = new xml2js.Builder()\n\t\t# 被签名对象\n\t\tbqmdx_xml = builder.buildObject bqmdx_json\n\t\t# 生成签名\n\t\tprivate_key_file = Meteor.settings?.records_xml?.archive?.private_key_file\n\t\tif private_key_file\n\t\t\tbuffer_bqmdx = new Buffer bqmdx_xml\n\t\t\t# key\n\t\t\ttry\n\t\t\t\treadStream = fs.readFileSync private_key_file,{encoding:'utf8'}\n\t\t\t\tkey = new NodeRSA(readStream,'pkcs8');\n\t\t\tcatch e\n\t\t\t\tconsole.log \"未获取私钥文件\",e\n\n\t\t\t# 签名\n\t\t\t# 参数1：需要签名的数据\n\t\t\t# 参数2：加密后返回的格式\n\t\t\t# 参数3：签名数据编码\n\t\t\ttry\n\t\t\t\tsignature = key.sign(buffer_bqmdx, 'base64', 'utf8');\n\t\t\tcatch e\n\t\t\t\tconsole.log \"签名错误\",e\n\n\t\t\t# 电子签名\n\t\t\tqmbsf = \"修改0-签名1\"\n\t\t\tqmgz = \"base64\"\n\t\t\tqmsj = new Date\n\t\t\tqmr = Meteor.settings?.records_xml?.archive?.signaturer || \"\"\n\t\t\tqmsfbs = \"sha1WithRSAEncryption\"\n\t\t\tzsk = []\n\t\t\tpublic_key_file = Meteor.settings?.records_xml?.archive?.public_key_file\n\t\t\tif public_key_file\n\t\t\t\tzs = fs.readFileSync public_key_file,{encoding:'utf8'}\n\t\t\t\tzsyz = \"\"\n\t\t\t\tzs_obj = {\n\t\t\t\t\t\"证书\": zs,\n\t\t\t\t\t\"证书引证\": zsyz\n\t\t\t\t}\n\t\t\t\tzsk.push zs_obj\n\t\t\tdzqm_json = {\n\t\t\t\t\"签名标识符\": qmbsf,\n\t\t\t\t\"签名规则\": qmgz,\n\t\t\t\t\"签名时间\": qmsj.toISOString(),\n\t\t\t\t\"签名人\": qmr,\n\t\t\t\t\"签名结果\": signature,\n\t\t\t\t\"证书块\": zsk,\n\t\t\t\t\"签名算法标识\": qmsfbs\n\t\t\t}\n\n\t\t\t# 在数据库中保存\n\t\t\tCreator.Collections[\"archive_wenshu\"].direct.update(record_obj._id,\n\t\t\t\t{\n\t\t\t\t\t$set:{\n\t\t\t\t\t\tsignature_rules:qmgz,\n\t\t\t\t\t\tsignature_time:qmsj,\n\t\t\t\t\t\tsigner:qmr,\n\t\t\t\t\t\tsignature:signature,\n\t\t\t\t\t\tcertificate:zs,\n\t\t\t\t\t\tcertificate_reference:zsyz,\n\t\t\t\t\t\tsignature_algorithmidentifier:qmsfbs,\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\n\t\t\tDZWJFZB = {\n\t\t\t\t\"封装包格式描述\": \"本EEP根据中华人民共和国档案行业标准DA/T HGWS《基于XML的电子文件封装规范》生成\",\n\t\t\t\t\"版本\": \"2018\",\n\t\t\t\t\"被签名对象\": bqmdx_json,\n\t\t\t\t\"电子签名\": dzqm_json\n\t\t\t}\n\n\t\t\txml = builder.buildObject DZWJFZB\n\t\t\t\n\t\t\tstream = new Buffer xml\n\n\t\t\t# # 验证\n\t\t\t# 参数1：被签名的内容\n\t\t\t# 参数2：签名结果\n\t\t\t# 参数3：被签名对象的编码格式\n\t\t\t# 参数4：签名的编码格式\n\t\t\t# result = key.verify(buffer_bqmdx, signature, 'utf8', 'base64')\n\n\t\t\t# 根据当天时间的年月日作为存储路径\n\t\t\tnow = new Date\n\t\t\tyear = now.getFullYear()\n\t\t\tmonth = now.getMonth() + 1\n\t\t\tday = now.getDate()\n\n\t\t\t# 文件路径\n\t\t\txml_file_path = Meteor.settings?.records_xml?.xml_file_path\n\t\t\tif xml_file_path\n\t\t\t\tfilePath = path.join(xml_file_path)\n\t\t\t\tfileName = record_obj?._id + \".xml\"\n\t\t\t\tfileAddress = path.join filePath, fileName\n\n\t\t\t\tif !fs.existsSync filePath\n\t\t\t\t\tmkdirp.sync filePath\n\n\t\t\t\t# 写入文件Meteor.bindEnvironment(InstancesStat.run)\n\t\t\t\tfs.writeFile fileAddress, stream, Meteor.bindEnvironment(\n\t\t\t\t\t(err) ->\n\t\t\t\t\t\tif err\n\t\t\t\t\t\t\tconsole.log \"#{record_obj._id}写入xml文件失败\",err\n\t\t\t\t\t\t\tlogger.error \"#{record_obj._id}写入xml文件失败\",err\n\t\t\t\t\t)\n\n\nExportToXML.success = (record_obj)->\n\tconsole.log \"封装成功\"\n\tCreator.Collections[\"archive_wenshu\"].direct.update({_id: record_obj._id}, {$set: {has_xml: true}})\n\nExportToXML.failed = (record_obj, error)->\n\tlogger.error \"failed, name is #{record_obj.title}, id is #{record_obj._id}. error: \" + error\n\n#获取所有未导出为xml的文书records\nExportToXML::getNonExportedRecords = ()->\n\tquery = {}\n\tif @record_ids and @record_ids?.length>0\n\t\tquery = {\n\t\t\tspace: {$in: @spaces},\n\t\t\t_id: {$in: @record_ids}\n\t\t\t}\n\telse\n\t\tquery = {\n\t\t\tspace: {$in: @spaces},\n\t\t\t# has_xml是否导出为xml\n\t\t\t$or: [\n\t\t\t\t{has_xml: false},\n\t\t\t\t{has_xml: {$exists: false}}\n\t\t\t]\n\t\t}\n\treturn Creator.Collections[\"archive_wenshu\"].find(query, {fields: {_id: 1}}).fetch()\n\nExportToXML::DoExport = () ->\n\tconsole.time(\"syncRecords\")\n\trecords = @getNonExportedRecords()\n\tthat = @\n\trecords.forEach (record)->\n\t\tconsole.log \"DoExport - \",record?._id\n\t\t# 档案记录\n\t\trecord_obj = Creator.Collections[\"archive_wenshu\"].findOne({'_id':record?._id})\n\t\tif record_obj\n\t\t\ttry\n\t\t\t\tExportToXML.export2xml record_obj\n\t\t\t\tExportToXML.success record_obj\n\t\t\tcatch e\n\t\t\t\tExportToXML.failed record_obj,e\n\t\t\t\treturn\n\tconsole.timeEnd(\"syncRecords\")\n","var NodeRSA, async_converterBase64, converterBase64, encapsulation, fs, logger, mkdirp, path, readFileInfo, xml2js;             \n\nxml2js = Npm.require('xml2js');\n\nfs = Npm.require('fs');\n\npath = Npm.require('path');\n\nmkdirp = Npm.require('mkdirp');\n\nNodeRSA = Npm.require('node-rsa');\n\nlogger = new Logger('QHD_Export_TO_XML');\n\nExportToXML = function(spaces, record_ids) {\n  this.spaces = spaces;\n  this.record_ids = record_ids;\n};\n\nconverterBase64 = function(file_obj, callback) {\n  var bmsj, chunks, e, stream;\n  try {\n    bmsj = \"\";\n    stream = file_obj.createReadStream('files');\n    chunks = [];\n    stream.on('data', function(chunk) {\n      return chunks.push(chunk);\n    });\n    return stream.on('end', function() {\n      var file_data;\n      file_data = Buffer.concat(chunks);\n      bmsj = file_data.toString('base64');\n      callback(\"\", bmsj);\n    });\n  } catch (error1) {\n    e = error1;\n    return console.log(\"e\", e);\n  }\n};\n\nasync_converterBase64 = Meteor.wrapAsync(converterBase64);\n\nreadFileInfo = function(cms_file) {\n  var WDSJ, file_objs;\n  file_objs = Creator.Collections['cfs.files.filerecord'].find({\n    _id: {\n      $in: cms_file.versions\n    }\n  }, {\n    sort: {\n      created: -1\n    }\n  });\n  WDSJ = [];\n  file_objs.forEach(function(file_obj) {\n    var BM, DZSX, SZHSX, bmms, bmsj, fbmms, ref, ref1, ref2, str_file;\n    DZSX = {\n      \"格式信息\": file_obj != null ? (ref = file_obj.original) != null ? ref.type : void 0 : void 0,\n      \"计算机文件名\": file_obj != null ? (ref1 = file_obj.original) != null ? ref1.name : void 0 : void 0,\n      \"计算机文件大小\": file_obj != null ? (ref2 = file_obj.original) != null ? ref2.size : void 0 : void 0,\n      \"文档创建程序\": \"\"\n    };\n    SZHSX = {\n      \"数字化对象形态\": \"\",\n      \"扫描分辨率\": \"\",\n      \"扫描色彩模式\": \"\",\n      \"图像压缩方案\": \"\"\n    };\n    bmms = \"本封装包中“编码数据”元素存储的是计算机文件二进制流的Base64编码，有关Base64编码规则参见IETF RFC 2045多用途邮件扩展（MIME）第一部分：互联网信息体格式。当提取和显现封装在编码数据元素中的计算机文件时，应对Base64编码进行反编码，并依据封装包中“反编码关键字”元素中记录的值还原计算机文件的扩展名\";\n    fbmms = \"base64-\" + (file_obj != null ? file_obj.getExtension() : void 0);\n    str_file = JSON.stringify(file_obj);\n    bmsj = new Buffer(str_file).toString('base64');\n    BM = {\n      \"编码ID\": file_obj != null ? file_obj._id : void 0,\n      \"电子属性\": DZSX,\n      \"数字化属性\": SZHSX,\n      \"编码描述\": bmms,\n      \"反编码关键字\": fbmms,\n      \"编码数据\": bmsj\n    };\n    return WDSJ.push(BM);\n  });\n  return WDSJ;\n};\n\nencapsulation = function(record_obj) {\n  var BQMDX, CCWZ, DH, FZNR, JGRYST, JGRYSTK, LY, NRMS, QXGL, WJSJ, WJST, WJSTGX, WJSTK, XSTZ, YWST, YWSTK, audit_list, category_obj, cms_files, fonds_obj, fzbcjdw, fzbcjsj, fzblx, fzblxms, ref, ref1, ref2, ref3, ref4, retention_obj, space_user_list, user_ids;\n  fonds_obj = Creator.Collections[\"archive_fonds\"].findOne({\n    '_id': record_obj != null ? record_obj.fonds_name : void 0\n  });\n  retention_obj = Creator.Collections[\"archive_retention\"].findOne({\n    '_id': record_obj != null ? record_obj.retention_peroid : void 0\n  });\n  category_obj = Creator.Collections[\"archive_classification\"].findOne({\n    '_id': record_obj != null ? record_obj.category_code : void 0\n  });\n  cms_files = Creator.Collections[\"cms_files\"].find({\n    'parent.ids': record_obj != null ? record_obj._id : void 0\n  }, {\n    sort: {\n      created: -1\n    }\n  });\n  audit_list = Creator.Collections[\"archive_audit\"].find({\n    'action_administrative_records_id': record_obj != null ? record_obj._id : void 0\n  }).fetch();\n  LY = {\n    \"档案馆名称\": (record_obj != null ? record_obj.archives_name : void 0) || \"\",\n    \"档案馆代码\": (record_obj != null ? record_obj.archives_identifier : void 0) || \"\",\n    \"全宗名称\": (fonds_obj != null ? fonds_obj.name : void 0) || \"\",\n    \"立档单位名称\": (record_obj != null ? record_obj.fonds_constituting_unit_name : void 0) || \"\"\n  };\n  DH = {\n    \"全宗号\": (fonds_obj != null ? fonds_obj.code : void 0) || \"\",\n    \"年度\": (record_obj != null ? record_obj.year : void 0) || \"\",\n    \"保管期限\": (retention_obj != null ? retention_obj.name : void 0) || \"\",\n    \"机构\": (record_obj != null ? record_obj.organizational_structure : void 0) || \"\",\n    \"类别号\": (category_obj != null ? category_obj.name : void 0) || \"\",\n    \"页号\": (record_obj != null ? record_obj.page_number : void 0) || \"\",\n    \"保管卷号\": (record_obj != null ? record_obj.file_number : void 0) || \"\",\n    \"分类卷号\": (record_obj != null ? record_obj.classification_number : void 0) || \"\",\n    \"件号\": (record_obj != null ? record_obj.item_number : void 0) || \"\"\n  };\n  NRMS = {\n    \"题名\": (record_obj != null ? record_obj.title : void 0) || \"\",\n    \"并列题名\": (record_obj != null ? record_obj.parallel_title : void 0) || \"\",\n    \"说明题名文字\": (record_obj != null ? record_obj.other_title_information : void 0) || \"\",\n    \"附件题名\": (record_obj != null ? record_obj.annex_title : void 0) || \"\",\n    \"主题词\": (record_obj != null ? record_obj.descriptor : void 0) || \"\",\n    \"关键词\": (record_obj != null ? record_obj.keyword : void 0) || \"\",\n    \"人名\": (record_obj != null ? record_obj.personal_name : void 0) || \"\",\n    \"摘要\": (record_obj != null ? record_obj.abstract : void 0) || \"\",\n    \"文件编号\": (record_obj != null ? record_obj.document_number : void 0) || \"\",\n    \"责任者\": (record_obj != null ? record_obj.author : void 0) || \"\",\n    \"文件日期\": (record_obj != null ? (ref = record_obj.document_date) != null ? ref.toISOString() : void 0 : void 0) || \"\",\n    \"起始日期\": (record_obj != null ? (ref1 = record_obj.start_date) != null ? ref1.toISOString() : void 0 : void 0) || \"\",\n    \"截止日期\": (record_obj != null ? (ref2 = record_obj.closing_date) != null ? ref2.toISOString() : void 0 : void 0) || \"\",\n    \"销毁日期\": (record_obj != null ? (ref3 = record_obj.destroy_date) != null ? ref3.toISOString() : void 0 : void 0) || \"\",\n    \"紧急程度\": (record_obj != null ? record_obj.precedence : void 0) || \"\",\n    \"主送\": (record_obj != null ? record_obj.prinpipal_receiver : void 0) || \"\",\n    \"抄送\": (record_obj != null ? record_obj.other_receivers : void 0) || \"\",\n    \"抄报\": (record_obj != null ? record_obj.report : void 0) || \"\",\n    \"密级\": (record_obj != null ? record_obj.security_classification : void 0) || \"\",\n    \"拟稿人\": (record_obj != null ? record_obj.applicant_name : void 0) || \"\",\n    \"拟稿单位\": (record_obj != null ? record_obj.applicant_organization_name : void 0) || \"\",\n    \"保密期限\": (record_obj != null ? record_obj.secrecy_period : void 0) || \"\"\n  };\n  XSTZ = {\n    \"文件组合类型\": (record_obj != null ? record_obj.document_aggregation : void 0) || \"\",\n    \"卷内文件数\": (record_obj != null ? record_obj.total_number_of_items : void 0) || \"\",\n    \"页数\": (record_obj != null ? record_obj.total_number_of_pages : void 0) || \"\",\n    \"文件类型\": (record_obj != null ? record_obj.document_type : void 0) || \"\",\n    \"文件状态\": (record_obj != null ? record_obj.document_status : void 0) || \"\",\n    \"语种\": (record_obj != null ? record_obj.language : void 0) || \"\",\n    \"电子档案生成方式\": (record_obj != null ? record_obj.orignal_document_creation_way : void 0) || \"\",\n    \"处理标志\": (record_obj != null ? record_obj.produce_flag : void 0) || \"\",\n    \"归档日期\": (record_obj != null ? (ref4 = record_obj.archive_date) != null ? ref4.toISOString() : void 0 : void 0) || \"\",\n    \"归档部门\": (record_obj != null ? record_obj.archive_dept : void 0) || \"\"\n  };\n  CCWZ = {\n    \"当前位置\": (record_obj != null ? record_obj.current_location : void 0) || \"\",\n    \"脱机载体编号\": (record_obj != null ? record_obj.offline_medium_identifier : void 0) || \"\",\n    \"脱机载体存址\": (record_obj != null ? record_obj.offline_medium_storage_location : void 0) || \"\"\n  };\n  QXGL = {\n    \"知识产权说明\": (record_obj != null ? record_obj.intelligent_property_statement : void 0) || \"\",\n    \"授权对象\": (record_obj != null ? record_obj.authorized_agent : void 0) || \"\",\n    \"授权行为\": (record_obj != null ? record_obj.permission_assignment : void 0) || \"\",\n    \"控制标识\": (record_obj != null ? record_obj.control_identifier : void 0) || \"\"\n  };\n  WJSJ = [];\n  cms_files.forEach(function(cms_file, index) {\n    var WD, WDSJ, wdzcsm;\n    WDSJ = readFileInfo(cms_file);\n    wdzcsm = \"附属文档\";\n    if (cms_file != null ? cms_file.main : void 0) {\n      wdzcsm = \"主文档\";\n    }\n    WD = {\n      \"文档标识符\": cms_file != null ? cms_file._id : void 0,\n      \"文档序号\": index,\n      \"文档主从声明\": wdzcsm,\n      \"文档数据\": WDSJ\n    };\n    return WJSJ.push(WD);\n  });\n  WJST = {\n    \"聚合层次\": (record_obj != null ? record_obj.aggregation_level : void 0) || \"\",\n    \"来源\": LY,\n    \"电子文件号\": (record_obj != null ? record_obj.electronic_record_code : void 0) || \"\",\n    \"档号\": DH,\n    \"内容描述\": NRMS,\n    \"形式特征\": XSTZ,\n    \"存储位置\": CCWZ,\n    \"权限管理\": QXGL,\n    \"文件数据\": WJSJ\n  };\n  WJSTGX = {\n    \"实体标识符\": (record_obj != null ? record_obj._id : void 0) || \"\",\n    \"被关联实体标识符\": (record_obj != null ? record_obj.related_archives : void 0) || \"\"\n  };\n  WJSTK = {\n    \"文件实体\": WJST,\n    \"文件实体关系\": WJSTGX\n  };\n  YWST = [];\n  user_ids = [];\n  if ((audit_list != null ? audit_list.length : void 0) > 0) {\n    audit_list.forEach(function(audit_obj) {\n      var ref5, ywobj;\n      ywobj = {\n        \"业务标识符\": (audit_obj != null ? audit_obj._id : void 0) || \"\",\n        \"机构人员标识符\": (audit_obj != null ? audit_obj.action_user : void 0) || \"\",\n        \"业务状态\": (audit_obj != null ? audit_obj.business_status : void 0) || \"\",\n        \"业务行为\": (audit_obj != null ? audit_obj.business_activity : void 0) || \"\",\n        \"行为时间\": (audit_obj != null ? (ref5 = audit_obj.action_time) != null ? ref5.toISOString() : void 0 : void 0) || \"\",\n        \"行为依据\": (audit_obj != null ? audit_obj.action_mandate : void 0) || \"\",\n        \"行为描述\": (audit_obj != null ? audit_obj.action_description : void 0) || \"\"\n      };\n      YWST.push(ywobj);\n      return user_ids.push(audit_obj != null ? audit_obj.action_user : void 0);\n    });\n  }\n  YWSTK = {\n    \"业务实体\": YWST\n  };\n  JGRYST = [];\n  space_user_list = Creator.Collections[\"space_users\"].find({\n    'user': {\n      $in: user_ids\n    }\n  }).fetch();\n  if ((space_user_list != null ? space_user_list.length : void 0) > 0) {\n    space_user_list.forEach(function(space_user_obj) {\n      var jgryobj;\n      jgryobj = {\n        \"机构人员标识符\": (space_user_obj != null ? space_user_obj.user : void 0) || \"\",\n        \"机构人员类型\": \"内设机构\",\n        \"机构人员名称\": (space_user_obj != null ? space_user_obj.name : void 0) || \"\",\n        \"组织机构代码\": (space_user_obj != null ? space_user_obj.company : void 0) || \"\",\n        \"个人职位\": (space_user_obj != null ? space_user_obj.position : void 0) || \"\"\n      };\n      return JGRYST.push(jgryobj);\n    });\n  }\n  JGRYSTK = {\n    \"机构人员实体\": JGRYST\n  };\n  FZNR = {\n    \"文件实体块\": WJSTK,\n    \"业务实体块\": YWSTK,\n    \"机构人员实体块\": JGRYSTK\n  };\n  fzblx = \"原始型\";\n  fzblxms = \"本封装包包含电子文件数据及其元数据，原始封装，未经修改\";\n  fzbcjsj = new Date;\n  fzbcjdw = \"河北港口集团\";\n  BQMDX = {\n    \"封装包类型\": fzblx,\n    \"封装包类型描述\": fzblxms,\n    \"封装包创建时间\": fzbcjsj.toISOString(),\n    \"封装包创建单位\": fzbcjdw,\n    \"封装内容\": FZNR\n  };\n  return BQMDX;\n};\n\nExportToXML.export2xml = function(record_obj, callback) {\n  var DZWJFZB, bqmdx_json, bqmdx_xml, buffer_bqmdx, builder, day, dzqm_json, e, fileAddress, fileName, filePath, key, month, now, private_key_file, public_key_file, qmbsf, qmgz, qmr, qmsfbs, qmsj, readStream, ref, ref1, ref10, ref2, ref3, ref4, ref5, ref6, ref7, ref8, ref9, signature, stream, xml, xml_file_path, year, zs, zs_obj, zsk, zsyz;\n  try {\n    bqmdx_json = encapsulation(record_obj);\n  } catch (error1) {\n    e = error1;\n    console.log(\"e\", e);\n    logger.error(record_obj._id + \"封装失败\", e);\n  }\n  if (bqmdx_json) {\n    builder = new xml2js.Builder();\n    bqmdx_xml = builder.buildObject(bqmdx_json);\n    private_key_file = (ref = Meteor.settings) != null ? (ref1 = ref.records_xml) != null ? (ref2 = ref1.archive) != null ? ref2.private_key_file : void 0 : void 0 : void 0;\n    if (private_key_file) {\n      buffer_bqmdx = new Buffer(bqmdx_xml);\n      try {\n        readStream = fs.readFileSync(private_key_file, {\n          encoding: 'utf8'\n        });\n        key = new NodeRSA(readStream, 'pkcs8');\n      } catch (error1) {\n        e = error1;\n        console.log(\"未获取私钥文件\", e);\n      }\n      try {\n        signature = key.sign(buffer_bqmdx, 'base64', 'utf8');\n      } catch (error1) {\n        e = error1;\n        console.log(\"签名错误\", e);\n      }\n      qmbsf = \"修改0-签名1\";\n      qmgz = \"base64\";\n      qmsj = new Date;\n      qmr = ((ref3 = Meteor.settings) != null ? (ref4 = ref3.records_xml) != null ? (ref5 = ref4.archive) != null ? ref5.signaturer : void 0 : void 0 : void 0) || \"\";\n      qmsfbs = \"sha1WithRSAEncryption\";\n      zsk = [];\n      public_key_file = (ref6 = Meteor.settings) != null ? (ref7 = ref6.records_xml) != null ? (ref8 = ref7.archive) != null ? ref8.public_key_file : void 0 : void 0 : void 0;\n      if (public_key_file) {\n        zs = fs.readFileSync(public_key_file, {\n          encoding: 'utf8'\n        });\n        zsyz = \"\";\n        zs_obj = {\n          \"证书\": zs,\n          \"证书引证\": zsyz\n        };\n        zsk.push(zs_obj);\n      }\n      dzqm_json = {\n        \"签名标识符\": qmbsf,\n        \"签名规则\": qmgz,\n        \"签名时间\": qmsj.toISOString(),\n        \"签名人\": qmr,\n        \"签名结果\": signature,\n        \"证书块\": zsk,\n        \"签名算法标识\": qmsfbs\n      };\n      Creator.Collections[\"archive_wenshu\"].direct.update(record_obj._id, {\n        $set: {\n          signature_rules: qmgz,\n          signature_time: qmsj,\n          signer: qmr,\n          signature: signature,\n          certificate: zs,\n          certificate_reference: zsyz,\n          signature_algorithmidentifier: qmsfbs\n        }\n      });\n      DZWJFZB = {\n        \"封装包格式描述\": \"本EEP根据中华人民共和国档案行业标准DA/T HGWS《基于XML的电子文件封装规范》生成\",\n        \"版本\": \"2018\",\n        \"被签名对象\": bqmdx_json,\n        \"电子签名\": dzqm_json\n      };\n      xml = builder.buildObject(DZWJFZB);\n      stream = new Buffer(xml);\n      now = new Date;\n      year = now.getFullYear();\n      month = now.getMonth() + 1;\n      day = now.getDate();\n      xml_file_path = (ref9 = Meteor.settings) != null ? (ref10 = ref9.records_xml) != null ? ref10.xml_file_path : void 0 : void 0;\n      if (xml_file_path) {\n        filePath = path.join(xml_file_path);\n        fileName = (record_obj != null ? record_obj._id : void 0) + \".xml\";\n        fileAddress = path.join(filePath, fileName);\n        if (!fs.existsSync(filePath)) {\n          mkdirp.sync(filePath);\n        }\n        return fs.writeFile(fileAddress, stream, Meteor.bindEnvironment(function(err) {\n          if (err) {\n            console.log(record_obj._id + \"写入xml文件失败\", err);\n            return logger.error(record_obj._id + \"写入xml文件失败\", err);\n          }\n        }));\n      }\n    }\n  }\n};\n\nExportToXML.success = function(record_obj) {\n  console.log(\"封装成功\");\n  return Creator.Collections[\"archive_wenshu\"].direct.update({\n    _id: record_obj._id\n  }, {\n    $set: {\n      has_xml: true\n    }\n  });\n};\n\nExportToXML.failed = function(record_obj, error) {\n  return logger.error((\"failed, name is \" + record_obj.title + \", id is \" + record_obj._id + \". error: \") + error);\n};\n\nExportToXML.prototype.getNonExportedRecords = function() {\n  var query, ref;\n  query = {};\n  if (this.record_ids && ((ref = this.record_ids) != null ? ref.length : void 0) > 0) {\n    query = {\n      space: {\n        $in: this.spaces\n      },\n      _id: {\n        $in: this.record_ids\n      }\n    };\n  } else {\n    query = {\n      space: {\n        $in: this.spaces\n      },\n      $or: [\n        {\n          has_xml: false\n        }, {\n          has_xml: {\n            $exists: false\n          }\n        }\n      ]\n    };\n  }\n  return Creator.Collections[\"archive_wenshu\"].find(query, {\n    fields: {\n      _id: 1\n    }\n  }).fetch();\n};\n\nExportToXML.prototype.DoExport = function() {\n  var records, that;\n  console.time(\"syncRecords\");\n  records = this.getNonExportedRecords();\n  that = this;\n  records.forEach(function(record) {\n    var e, record_obj;\n    console.log(\"DoExport - \", record != null ? record._id : void 0);\n    record_obj = Creator.Collections[\"archive_wenshu\"].findOne({\n      '_id': record != null ? record._id : void 0\n    });\n    if (record_obj) {\n      try {\n        ExportToXML.export2xml(record_obj);\n        return ExportToXML.success(record_obj);\n      } catch (error1) {\n        e = error1;\n        ExportToXML.failed(record_obj, e);\n      }\n    }\n  });\n  return console.timeEnd(\"syncRecords\");\n};\n","schedule = Npm.require('node-schedule')\n\nXMLSync = {}\n\n#\t*    *    *    *    *    *\n#\t┬    ┬    ┬    ┬    ┬    ┬\n#\t│    │    │    │    │    |\n#\t│    │    │    │    │    └ day of week (0 - 7) (0 or 7 is Sun)\n#\t│    │    │    │    └───── month (1 - 12)\n#\t│    │    │    └────────── day of month (1 - 31)\n#\t│    │    └─────────────── hour (0 - 23)\n#\t│    └──────────────────── minute (0 - 59)\n#\t└───────────────────────── second (0 - 59, OPTIONAL)\n\nlogger = new Logger 'XML_Sync'\n\nXMLSync.settings_records_xml = Meteor.settings?.records_xml\n\nXMLSync.scheduleJobMaps = {}\n\nXMLSync.run = ()->\n\ttry\n        # 执行同步\n\t\tconsole.log \"2-XMLSync.startExport：开始导出\"\n\t\tXMLSync.startExport()\n\tcatch  e\n\t\tlogger.error \"XML_Sync.records2Xml()\", e\n\n# XMLSync.startExport([\"WoZpCZ3HHyZpxnodG\"])\nXMLSync.startExport = (record_ids)->\n\n\tspaces = XMLSync?.settings_records_xml?.spaces\n\n\tif !spaces\n\t\tlogger.error \"缺少settings配置: records-qhd.spaces\"\n\t\treturn\n\n\tconsole.log \"3-exportToXML.DoExport：执行导出\"\n\texportToXML = new ExportToXML(spaces, record_ids)\n\n\texportToXML.DoExport()\n\nXMLSync.startScheduleJob = (name, recurrenceRule, fun) ->\n\n\tif !recurrenceRule\n\t\tlogger.error \"Miss recurrenceRule\"\n\t\treturn\n\tif !_.isString(recurrenceRule)\n\t\tlogger.error \"RecurrenceRule is not String. https://github.com/node-schedule/node-schedule\"\n\t\treturn\n\n\tif !fun\n\t\tlogger.error \"Miss function\"\n\telse if !_.isFunction(fun)\n\t\tlogger.error \"#{fun} is not function\"\n\telse\n\t\tlogger.info \"Add scheduleJobMaps: #{name}\"\n\t\tXMLSync.scheduleJobMaps[name] = schedule.scheduleJob recurrenceRule, fun\n\nif XMLSync.settings_records_xml?.recurrenceRule\n\tconsole.log \"1-XMLSync.startScheduleJob：xml定时任务\"\n\tXMLSync.startScheduleJob \"XMLSync.records2Xml\", XMLSync.settings_records_xml?.recurrenceRule, Meteor.bindEnvironment(XMLSync.run)","var logger, ref, ref1, ref2, schedule;         \n\nschedule = Npm.require('node-schedule');\n\nXMLSync = {};\n\nlogger = new Logger('XML_Sync');\n\nXMLSync.settings_records_xml = (ref = Meteor.settings) != null ? ref.records_xml : void 0;\n\nXMLSync.scheduleJobMaps = {};\n\nXMLSync.run = function() {\n  var e;\n  try {\n    console.log(\"2-XMLSync.startExport：开始导出\");\n    return XMLSync.startExport();\n  } catch (error) {\n    e = error;\n    return logger.error(\"XML_Sync.records2Xml()\", e);\n  }\n};\n\nXMLSync.startExport = function(record_ids) {\n  var exportToXML, ref1, spaces;\n  spaces = XMLSync != null ? (ref1 = XMLSync.settings_records_xml) != null ? ref1.spaces : void 0 : void 0;\n  if (!spaces) {\n    logger.error(\"缺少settings配置: records-qhd.spaces\");\n    return;\n  }\n  console.log(\"3-exportToXML.DoExport：执行导出\");\n  exportToXML = new ExportToXML(spaces, record_ids);\n  return exportToXML.DoExport();\n};\n\nXMLSync.startScheduleJob = function(name, recurrenceRule, fun) {\n  if (!recurrenceRule) {\n    logger.error(\"Miss recurrenceRule\");\n    return;\n  }\n  if (!_.isString(recurrenceRule)) {\n    logger.error(\"RecurrenceRule is not String. https://github.com/node-schedule/node-schedule\");\n    return;\n  }\n  if (!fun) {\n    return logger.error(\"Miss function\");\n  } else if (!_.isFunction(fun)) {\n    return logger.error(fun + \" is not function\");\n  } else {\n    logger.info(\"Add scheduleJobMaps: \" + name);\n    return XMLSync.scheduleJobMaps[name] = schedule.scheduleJob(recurrenceRule, fun);\n  }\n};\n\nif ((ref1 = XMLSync.settings_records_xml) != null ? ref1.recurrenceRule : void 0) {\n  console.log(\"1-XMLSync.startScheduleJob：xml定时任务\");\n  XMLSync.startScheduleJob(\"XMLSync.records2Xml\", (ref2 = XMLSync.settings_records_xml) != null ? ref2.recurrenceRule : void 0, Meteor.bindEnvironment(XMLSync.run));\n}\n","Meteor.methods\n\tstart_exportxml: (spaces, record_ids) ->\n\t\ttry\n\t\t\tconsole.log \"space, record_ids========\",spaces, record_ids\n\t\t\tif spaces and record_ids\n\t\t\t\texportToXML = new ExportToXML(spaces, record_ids)\n\t\t\t\texportToXML.DoExport()\n\t\t\t\treturn result\n\t\tcatch e\n\t\t\terror = e\n\t\t\treturn error\n\t\t","Meteor.methods({\n  start_exportxml: function(spaces, record_ids) {\n    var e, error, exportToXML;\n    try {\n      console.log(\"space, record_ids========\", spaces, record_ids);\n      if (spaces && record_ids) {\n        exportToXML = new ExportToXML(spaces, record_ids);\n        exportToXML.DoExport();\n        return result;\n      }\n    } catch (error1) {\n      e = error1;\n      error = e;\n      return error;\n    }\n  }\n});\n"]}