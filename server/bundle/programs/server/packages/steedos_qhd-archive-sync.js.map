{"version":3,"sources":["meteor://💻app/packages/steedos_qhd-archive-sync/server/lib/instance_manager.coffee","meteor://💻app/server/lib/instance_manager.coffee","meteor://💻app/packages/steedos_qhd-archive-sync/server/lib/instances_to_archive.coffee","meteor://💻app/server/lib/instances_to_archive.coffee","meteor://💻app/packages/steedos_qhd-archive-sync/server/lib/records_qhd.coffee","meteor://💻app/server/lib/records_qhd.coffee","meteor://💻app/packages/steedos_qhd-archive-sync/server/methods/start_instanceToArchive.coffee","meteor://💻app/server/methods/start_instanceToArchive.coffee","meteor://💻app/packages/steedos_qhd-archive-sync/server/methods/sync_zhusong.coffee","meteor://💻app/server/methods/sync_zhusong.coffee"],"names":["_eval","logger","Npm","require","InstanceManager","Logger","handlerInstanceByFieldMap","ins","field_map","context","e","flow","res","script","Creator","Collections","findOne","_id","fields","_","clone","instances","error","_error","_checkParameter","_minxiAttachmentInfo","_minxiInstanceData","_minxiInstanceHtml","_minxiInstanceTraces","_minxiRelatedArchives","fs","path","request","setFileName","record_id","file_prefix","collection","count","count_code","file_name","strcount","find","substr","length","formData","fonds_name","instance","dateFormat","fieldNames","field_values","fondObj","old_page","orgObj","retentionObj","str_page_count","space","owner","submitter","created_by","created","Date","applicant_name","nigaorens","archive_dept","guidangbumen","applicant_organization_name","nigaodanwei","FILE_CODE_fzr","security_classification","miji","document_type","wenjianleixing","wenjianriqi","document_date","document_number","wenjianzihao","author","title","name","prinpipal_receiver","zhusong","year","suoshuniandu","PAGE_COUNT","toString","total_number_of_pages","parseInt","fonds_constituting_unit_name","archival_category_code","aggregation_level","document_aggregation","language","orignal_document_creation_way","document_status","physical_record_characteristics","scanning_resolution","scanning_color_model","image_compression_scheme","current_location","agent_type","FILING_DEPT","organizational_structure","organizational_structure_code","code","FONDSID","company","fonds_code","baocunqixian","retention_peroid","retention_peroid_code","years","produce_flag","archive_date","moment","format","external_id","keys","forEach","key","fieldValue","ref","isDate","isObject","isArray","getProperty","join","mainRelatedObjs","related_archives","related_instances","related_instance","relatedObj","push","update","$set","fetch","mainRelatedObj","currentFiles","object_name","parents","ref1","spaceId","RecordsQHD","settings_records_qhd","to_archive","cfs","cf","index","cmsFileId","historyFiles","instance_file_path","ref2","ref3","ref4","ref5","ref6","ref7","versions","_makeNewID","extension","insert","metadata","size","modified","main","parent","o","ids","modified_by","extention","$ne","sort","uploadedAt","hf","instance_file_key","newFile","ref8","ref9","copies","existsSync","FS","File","attachData","createReadStream","type","original","err","fileObj","ref10","ref11","ref12","Meteor","Error","reason","owner_name","current","files","error1","admin","apps_url","data_buffer","date_now","file_size","ins_id","instance_html_url","password","result_html","space_id","user_id","username","userid","HTTP","call","content","Buffer","instance_html","result","auditList","autoAudit","getApproveStatusText","traces","approveJudge","approveStatusText","locale","trace","approves","approve","auditObj","business_status","business_activity","action_time","start_date","action_user","user","action_description","judge","action_administrative_records_id","instace_id","direct","InstancesToArchive","spaces","contract_flows","ins_ids","success","is_recorded_creator","failed","prototype","getNonContractInstances","query","$in","$nin","$or","$exists","is_deleted","state","syncNonContractInstance","callback","debug","remove","console","log","Test","run","syncNonContractInstances","that","time","mini_ins","timeEnd","schedule","settings","records_qhd","scheduleJobMaps","instanceToArchive","flows","instancesToArchive","to_archive_sett","contract_instances","startScheduleJob","recurrenceRule","fun","isString","isFunction","info","scheduleJob","bindEnvironment","methods","start_instanceToArchive","sDate","fDate","end_date","$gt","$lt","sync_zhusong","record_ids","record_objs","record_obj","yeshu","values","syncEcode","record","electronic_record_code","fonds_name_code","id","syncFond"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAAA,KAAA,EAAAC,MAAA;;AAAAD,QAAQE,IAAIC,OAAJ,CAAY,MAAZ,CAAR;AAEAC,kBAAkB,EAAlB;AAEAH,SAAS,IAAII,MAAJ,CAAW,6BAAX,CAAT;;AAEAD,gBAAgBE,yBAAhB,GAA4C,UAACC,GAAD,EAAMC,SAAN;AAC3C,MAAAC,OAAA,EAAAC,CAAA,EAAAC,IAAA,EAAAC,GAAA,EAAAC,MAAA;AAAAD,QAAML,GAAN;;AACA,MAAGA,GAAH;AACC,QAAG,CAACC,SAAJ;AAECG,aAAOG,QAAQC,WAAR,CAAoB,OAApB,EAA6BC,OAA7B,CAAqC;AAAEC,aAAKV,IAAII;AAAX,OAArC,EAAwD;AAAEO,gBAAQ;AAAEV,qBAAW;AAAb;AAAV,OAAxD,CAAP;;AAEA,UAAAG,QAAA,OAAGA,KAAMH,SAAT,GAAS,MAAT;AACCA,oBAAYG,KAAKH,SAAjB;AALF;ACcG;;ADPH,QAAGA,SAAH;AACCC,gBAAUU,EAAEC,KAAF,CAAQb,GAAR,CAAV;AAEAE,cAAQU,CAAR,GAAYA,CAAZ;AAEAN,eAAS,qBAAmBL,SAAnB,GAA6B,iCAAtC;;AACA;AACCI,cAAMZ,MAAMa,MAAN,EAAc,2BAAd,EAA2CJ,OAA3C,EAAoD,KAApD,EAA2DY,SAAjE;AADD,eAAAC,KAAA;AAEMZ,YAAAY,KAAA;AACLV,cAAM;AAAEW,kBAAQb;AAAV,SAAN;AACAT,eAAOqB,KAAP,CAAaZ,CAAb;AAVF;AARD;AC8BE;;ADXF,SAAOE,GAAP;AArB2C,CAA5C,C;;;;;;;;;;;;;;;;;;;AENA,IAAAY,eAAA,EAAAC,oBAAA,EAAAC,kBAAA,EAAAC,kBAAA,EAAAC,oBAAA,EAAAC,qBAAA,EAAAC,EAAA,EAAA7B,MAAA,EAAA8B,IAAA,EAAAC,OAAA,EAAAC,WAAA;;AAAAD,UAAU9B,IAAIC,OAAJ,CAAY,SAAZ,CAAV;AACA4B,OAAO7B,IAAIC,OAAJ,CAAY,MAAZ,CAAP;AACA2B,KAAK5B,IAAIC,OAAJ,CAAY,IAAZ,CAAL;AAEAF,SAAS,IAAII,MAAJ,CAAW,mCAAX,CAAT;;AAEA4B,cAAc,UAACC,SAAD,EAAYC,WAAZ;AACb,MAAAC,UAAA,EAAAC,KAAA,EAAAC,UAAA,EAAAC,SAAA,EAAAC,QAAA;AAAAD,cAAY,KAAZ;AACAH,eAAatB,QAAQC,WAAR,CAAoB,WAApB,CAAb;AACAsB,UAAQD,WAAWK,IAAX,CAAgB;AAAC,kBAAcP;AAAf,GAAhB,EAA2CG,KAA3C,EAAR;AACAA,UAAQA,QAAQ,CAAhB;AACAG,aAAW,OAAOH,KAAlB;AACAC,eAAaE,SAASE,MAAT,CAAgBF,SAASG,MAAT,GAAgB,CAAhC,CAAb;AACAJ,cAAaJ,cAAc,GAAd,GAAoBG,UAAjC;AACA,SAAOC,SAAP;AARa,CAAd;;AAWAf,kBAAkB,UAACoB,QAAD;AACjB,MAAG,CAACA,SAASC,UAAb;AACC,WAAO,KAAP;ACQC;;ADPF,SAAO,IAAP;AAHiB,CAAlB;;AAOAnB,qBAAqB,UAACkB,QAAD,EAAWE,QAAX;AACpB,MAAAC,UAAA,EAAAC,UAAA,EAAAC,YAAA,EAAAC,OAAA,EAAAC,QAAA,EAAAC,MAAA,EAAAC,YAAA,EAAAC,cAAA;;AAAA,MAAG,CAACR,QAAJ;AACC;ACSC;;ADRFC,eAAa,qBAAb;AAEAH,WAASW,KAAT,GAAiBT,SAASS,KAA1B;AAEAX,WAASY,KAAT,GAAiBV,SAASW,SAA1B;AAEAb,WAASc,UAAT,GAAsBZ,SAASY,UAA/B;AAEAd,WAASe,OAAT,GAAmB,IAAIC,IAAJ,EAAnB;AAGAX,iBAAe7C,gBAAgBE,yBAAhB,CAA0CwC,QAA1C,CAAf;AAEAF,WAASiB,cAAT,GAAAZ,gBAAA,OAA0BA,aAAca,SAAxC,GAAwC,MAAxC;AAEAlB,WAASmB,YAAT,GAAAd,gBAAA,OAAwBA,aAAce,YAAtC,GAAsC,MAAtC;AACApB,WAASqB,2BAAT,IAAAhB,gBAAA,OAAuCA,aAAciB,WAArD,GAAqD,MAArD,MAAuCjB,gBAAA,OAA6BA,aAAckB,aAA3C,GAA2C,MAAlF;AAEAvB,WAASwB,uBAAT,GAAAnB,gBAAA,OAAmCA,aAAcoB,IAAjD,GAAiD,MAAjD;AACAzB,WAAS0B,aAAT,GAAArB,gBAAA,OAAyBA,aAAcsB,cAAvC,GAAuC,MAAvC;;AACA,MAAAtB,gBAAA,OAAGA,aAAcuB,WAAjB,GAAiB,MAAjB;AACC5B,aAAS6B,aAAT,GAAyB,IAAIb,IAAJ,CAAAX,gBAAA,OAASA,aAAcuB,WAAvB,GAAuB,MAAvB,CAAzB;ACCC;;ADAF5B,WAAS8B,eAAT,GAAAzB,gBAAA,OAA2BA,aAAc0B,YAAzC,GAAyC,MAAzC;AACA/B,WAASgC,MAAT,GAAA3B,gBAAA,OAAkBA,aAAckB,aAAhC,GAAgC,MAAhC;AACAvB,WAASiC,KAAT,GAAiB/B,SAASgC,IAA1B;AACAlC,WAASmC,kBAAT,GAAA9B,gBAAA,OAA8BA,aAAc+B,OAA5C,GAA4C,MAA5C;AACApC,WAASqC,IAAT,GAAAhC,gBAAA,OAAgBA,aAAciC,YAA9B,GAA8B,MAA9B;;AAGA,MAAAjC,gBAAA,OAAGA,aAAckC,UAAjB,GAAiB,MAAjB;AACChC,eAAA,CAAAF,gBAAA,OAAWA,aAAckC,UAAd,CAAyBC,QAAzB,EAAX,GAAW,MAAX,KAAkD,IAAlD;AAGA9B,qBAAiBH,SAAST,MAAT,CAAgB,CAAhB,EAAkBS,SAASR,MAAT,GAAgB,CAAlC,CAAjB;;AACA,QAAGW,cAAH;AACCV,eAASyC,qBAAT,GAAiCC,SAAShC,cAAT,IAA2B,CAA5D;AANF;AAAA;AAQCV,aAASyC,qBAAT,GAAiC,GAAjC;ACDC;;ADIFzC,WAAS2C,4BAAT,GAAwC,YAAxC;AACA3C,WAAS4C,sBAAT,GAAkC,IAAlC;AACA5C,WAAS6C,iBAAT,GAA6B,IAA7B;AACA7C,WAAS8C,oBAAT,GAAgC,IAAhC;AACA9C,WAAS+C,QAAT,GAAoB,IAApB;AAEA/C,WAASgD,6BAAT,GAAyC,IAAzC;AACAhD,WAASiD,eAAT,GAA2B,MAA3B;AAIAjD,WAASkD,+BAAT,GAA2C,KAA3C;AACAlD,WAASmD,mBAAT,GAA+B,QAA/B;AACAnD,WAASoD,oBAAT,GAAgC,IAAhC;AACApD,WAASqD,wBAAT,GAAoC,MAApC;AAGArD,WAASsD,gBAAT,GAA4B,uCAA5B;AAGAtD,WAASuD,UAAT,GAAsB,IAAtB;;AAGA,MAAAlD,gBAAA,OAAGA,aAAcmD,WAAjB,GAAiB,MAAjB;AACChD,aAAStC,QAAQC,WAAR,CAAoB,sBAApB,EAA4CC,OAA5C,CAAoD;AAAC,cAAAiC,gBAAA,OAAOA,aAAcmD,WAArB,GAAqB;AAAtB,KAApD,CAAT;ACVC;;ADWF,MAAGhD,MAAH;AACCR,aAASyD,wBAAT,GAAoCjD,OAAOnC,GAA3C;AACA2B,aAAS0D,6BAAT,GAAyClD,OAAOmD,IAAhD;ACTC;;ADYFrD,YAAUpC,QAAQC,WAAR,CAAoB,eAApB,EAAqCC,OAArC,CAA6C;AAAC,YAAAiC,gBAAA,OAAOA,aAAcuD,OAArB,GAAqB;AAAtB,GAA7C,CAAV;;AACA,MAAGtD,OAAH;AACCN,aAASC,UAAT,GAAAK,WAAA,OAAsBA,QAASjC,GAA/B,GAA+B,MAA/B;AACA2B,aAAS6D,OAAT,GAAAvD,WAAA,OAAmBA,QAASuD,OAA5B,GAA4B,MAA5B;AACA7D,aAAS8D,UAAT,GAAAxD,WAAA,OAAsBA,QAASqD,IAA/B,GAA+B,MAA/B;ACRC;;ADWFlD,iBAAevC,QAAQC,WAAR,CAAoB,mBAApB,EAAyCC,OAAzC,CAAiD;AAAC,YAAAiC,gBAAA,OAAOA,aAAc0D,YAArB,GAAqB;AAAtB,GAAjD,CAAf;;AACA,MAAGtD,YAAH;AACCT,aAASgE,gBAAT,GAAAvD,gBAAA,OAA4BA,aAAcpC,GAA1C,GAA0C,MAA1C;AACA2B,aAASiE,qBAAT,GAAAxD,gBAAA,OAAiCA,aAAckD,IAA/C,GAA+C,MAA/C;;AAEA,SAAAlD,gBAAA,OAAGA,aAAcyD,KAAjB,GAAiB,MAAjB,KAA0B,EAA1B;AACClE,eAASmE,YAAT,GAAwB,IAAxB;AADD;AAGCnE,eAASmE,YAAT,GAAwB,IAAxB;AAPF;ACAE;;ADUFnE,WAASoE,YAAT,GAAwBC,OAAO,IAAIrD,IAAJ,EAAP,EAAmBsD,MAAnB,CAA0BnE,UAA1B,CAAxB;AAGAH,WAASuE,WAAT,GAAuBrE,SAAS7B,GAAhC;AAEA+B,eAAa7B,EAAEiG,IAAF,CAAOxE,QAAP,CAAb;AAEAI,aAAWqE,OAAX,CAAmB,UAACC,GAAD;AAClB,QAAAC,UAAA,EAAAC,GAAA;AAAAD,iBAAa3E,SAAS0E,GAAT,CAAb;;AACA,QAAGnG,EAAEsG,MAAF,CAASF,UAAT,CAAH;AACCA,mBAAaN,OAAOM,UAAP,EAAmBL,MAAnB,CAA0BnE,UAA1B,CAAb;ACXE;;ADaH,QAAG5B,EAAEuG,QAAF,CAAWH,UAAX,CAAH;AACCA,iCAAA,OAAaA,WAAYzC,IAAzB,GAAyB,MAAzB;ACXE;;ADaH,QAAG3D,EAAEwG,OAAF,CAAUJ,UAAV,KAAyBA,WAAW5E,MAAX,GAAoB,CAA7C,IAAkDxB,EAAEuG,QAAF,CAAWH,UAAX,CAArD;AACCA,iCAAA,QAAAC,MAAAD,WAAAK,WAAA,oBAAAJ,IAA8CK,IAA9C,CAAmD,GAAnD,IAAa,MAAb,GAAa,MAAb;ACXE;;ADaH,QAAG1G,EAAEwG,OAAF,CAAUJ,UAAV,CAAH;AACCA,iCAAA,OAAaA,WAAYM,IAAZ,CAAiB,GAAjB,CAAb,GAAa,MAAb;ACXE;;ADaH,QAAG,CAACN,UAAJ;ACXI,aDYHA,aAAa,ECZV;AACD;ADJJ;AAiBA,SAAO3E,QAAP;AAnHoB,CAArB;;AAsHAf,wBAAwB,UAACiB,QAAD,EAAWZ,SAAX;AAEvB,MAAA4F,eAAA,EAAAC,gBAAA;;AAAA,MAAAjF,YAAA,OAAGA,SAAUkF,iBAAb,GAAa,MAAb;AACCD,uBAAmB,EAAnB;AACAjF,aAASkF,iBAAT,CAA2BX,OAA3B,CAAmC,UAACY,gBAAD;AAClC,UAAAC,UAAA;AAAAA,mBAAapH,QAAQC,WAAR,CAAoB,gBAApB,EAAsCC,OAAtC,CAA8C;AAAC,uBAAciH;AAAf,OAA9C,EAA+E;AAAC/G,gBAAO;AAACD,eAAI;AAAL;AAAR,OAA/E,CAAb;;AACA,UAAGiH,UAAH;ACHK,eDIJH,iBAAiBI,IAAjB,CAAAD,cAAA,OAAsBA,WAAYjH,GAAlC,GAAkC,MAAlC,CCJI;AACD;ADAL;AAIAH,YAAQC,WAAR,CAAoB,gBAApB,EAAsCqH,MAAtC,CACC;AAACnH,WAAIiB;AAAL,KADD,EAEC;AACCmG,YAAK;AAAEN,0BAAiBA;AAAnB;AADN,KAFD;ACKC;;ADEFD,oBAAkBhH,QAAQC,WAAR,CAAoB,WAApB,EAAiC0B,IAAjC,CACjB;AAAC,yBAAoBK,SAAS7B;AAA9B,GADiB,EAEjB;AAACC,YAAQ;AAACD,WAAK;AAAN;AAAT,GAFiB,EAEGqH,KAFH,EAAlB;;AAIA,MAAGR,gBAAgBnF,MAAhB,GAAyB,CAA5B;ACGG,WDFFmF,gBAAgBT,OAAhB,CAAwB,UAACkB,cAAD;AAEvBA,uBAAiBzH,QAAQC,WAAR,CAAoB,gBAApB,EAAsCC,OAAtC,CAA8C;AAAC,uBAAcuH,eAAetH;AAA9B,OAA9C,CAAjB;;AACA,UAAGsH,cAAH;AACCR,2BAAA,CAAAQ,kBAAA,OAAmBA,eAAgBR,gBAAnC,GAAmC,MAAnC,KAAuD,EAAvD;AACAA,yBAAiBI,IAAjB,CAAsBjG,SAAtB;ACII,eDHJpB,QAAQC,WAAR,CAAoB,gBAApB,EAAsCqH,MAAtC,CACC;AAACnH,eAAIsH,eAAetH;AAApB,SADD,EAEC;AACCoH,gBAAK;AAAEN,8BAAiBA;AAAnB;AADN,SAFD,CCGI;AAOD;ADhBL,MCEE;AAgBD;ADtCqB,CAAxB;;AAiCAtG,uBAAuB,UAACqB,QAAD,EAAWZ,SAAX,EAAsBC,WAAtB;AAEtB,MAAAC,UAAA,EAAAoG,YAAA,EAAAC,WAAA,EAAAC,OAAA,EAAAlB,GAAA,EAAAmB,IAAA,EAAAC,OAAA;AAAAH,gBAAA,OAAAI,UAAA,oBAAAA,eAAA,QAAArB,MAAAqB,WAAAC,oBAAA,aAAAH,OAAAnB,IAAAuB,UAAA,YAAAJ,KAA4DF,WAA5D,GAA4D,MAA5D,GAA4D,MAA5D,GAA4D,MAA5D;AACAC,YAAU,EAAV;AACAE,YAAA9F,YAAA,OAAUA,SAAUS,KAApB,GAAoB,MAApB;AAGAiF,iBAAeQ,IAAI3H,SAAJ,CAAcoB,IAAd,CAAmB;AACjC,yBAAqBK,SAAS7B,GADG;AAEjC,wBAAoB;AAFa,GAAnB,EAGZqH,KAHY,EAAf;AAKAlG,eAAatB,QAAQC,WAAR,CAAoB,WAApB,CAAb;ACMC,SDJDyH,aAAanB,OAAb,CAAqB,UAAC4B,EAAD,EAAKC,KAAL;AACpB,QAAAC,SAAA,EAAAzI,CAAA,EAAA6B,SAAA,EAAA6G,YAAA,EAAAC,kBAAA,EAAAC,IAAA,EAAAC,IAAA,EAAAC,IAAA,EAAAC,IAAA,EAAAC,IAAA,EAAAC,IAAA,EAAAC,QAAA;;AAAA;AACCP,2BAAA,OAAAR,UAAA,oBAAAA,eAAA,QAAAS,OAAAT,WAAAC,oBAAA,YAAAQ,KAAuDD,kBAAvD,GAAuD,MAAvD,GAAuD,MAAvD;AACAO,iBAAW,EAAX;AAEAT,kBAAY/G,WAAWyH,UAAX,EAAZ;AAEAtH,kBAAYN,YAAYC,SAAZ,EAAuBC,WAAvB,IAAsC,GAAtC,GAA4C8G,GAAGa,SAAH,EAAxD;AAEA1H,iBAAW2H,MAAX,CAAkB;AAChB9I,aAAKkI,SADW;AAEhBS,kBAAU,EAFM;AAGhBlG,oBAAYuF,GAAGe,QAAH,CAAYxG,KAHR;AAIhByG,cAAMhB,GAAGgB,IAAH,EAJU;AAKhBzG,eAAAyF,MAAA,QAAAM,OAAAN,GAAAe,QAAA,YAAAT,KAAqB/F,KAArB,GAAqB,MAArB,GAAqB,MALL;AAMhB0G,kBAAAjB,MAAA,QAAAO,OAAAP,GAAAe,QAAA,YAAAR,KAAwBU,QAAxB,GAAwB,MAAxB,GAAwB,MANR;AAOhBC,cAAAlB,MAAA,QAAAQ,OAAAR,GAAAe,QAAA,YAAAP,KAAoBU,IAApB,GAAoB,MAApB,GAAoB,MAPJ;AAQhBC,gBAAQ;AACPC,aAAG5B,WADI;AAEP6B,eAAK,CAACpI,SAAD;AAFE,SARQ;AAYhBqI,qBAAAtB,MAAA,QAAAS,OAAAT,GAAAe,QAAA,YAAAN,KAA2Ba,WAA3B,GAA2B,MAA3B,GAA2B,MAZX;AAahB5G,iBAAAsF,MAAA,QAAAU,OAAAV,GAAAe,QAAA,YAAAL,KAAuBhG,OAAvB,GAAuB,MAAvB,GAAuB,MAbP;AAchBmB,cAAMvC,SAdU;AAehBgB,eAAOqF,OAfS;AAgBhB4B,mBAAWvB,GAAGa,SAAH;AAhBK,OAAlB;AAoBAV,qBAAeJ,IAAI3H,SAAJ,CAAcoB,IAAd,CAAmB;AACjC,6BAAqBwG,GAAGe,QAAH,CAAYlH,QADA;AAEjC,4BAAoB;AAAC2H,eAAK;AAAN,SAFa;AAGjC,2BAAmBxB,GAAGe,QAAH,CAAYI;AAHE,OAAnB,EAIZ;AAACM,cAAM;AAACC,sBAAY,CAAC;AAAd;AAAP,OAJY,EAIcrC,KAJd,EAAf;AAMAc,mBAAajB,IAAb,CAAkBc,EAAlB;AAGAG,mBAAa/B,OAAb,CAAqB,UAACuD,EAAD;AACpB,YAAAC,iBAAA,EAAAC,OAAA,EAAAC,IAAA,EAAAC,IAAA;AAAAH,4BAAoB9I,KAAK8F,IAAL,CAAUwB,kBAAV,EAAAuB,MAAA,QAAAG,OAAAH,GAAAK,MAAA,aAAAD,OAAAD,KAAA1J,SAAA,YAAA2J,KAAqD1D,GAArD,GAAqD,MAArD,GAAqD,MAArD,GAAqD,MAArD,CAApB;;AAEA,YAAGxF,GAAGoJ,UAAH,CAAcL,iBAAd,CAAH;AAECC,oBAAU,IAAIK,GAAGC,IAAP,EAAV;ACGK,iBDFLN,QAAQO,UAAR,CACCvJ,GAAGwJ,gBAAH,CAAoBT,iBAApB,CADD,EAEC;AAACU,kBAAMX,GAAGY,QAAH,CAAYD;AAAnB,WAFD,EAGC,UAACE,GAAD;AACC,gBAAAC,OAAA,EAAA1B,QAAA,EAAA2B,KAAA,EAAAC,KAAA,EAAAC,KAAA;;AAAA,gBAAGJ,GAAH;AACC,oBAAM,IAAIK,OAAOC,KAAX,CAAiBN,IAAInK,KAArB,EAA4BmK,IAAIO,MAAhC,CAAN;ACGK;;ADFNlB,oBAAQhG,IAAR,CAAa8F,GAAG9F,IAAH,EAAb;AACAgG,oBAAQb,IAAR,CAAaW,GAAGX,IAAH,EAAb;AACAD,uBAAW;AACVxG,qBAAOoH,GAAGZ,QAAH,CAAYxG,KADT;AAEVyI,0BAAA,CAAAN,QAAAf,GAAAZ,QAAA,YAAA2B,MAAyBM,UAAzB,GAAyB,MAFf;AAGV1I,qBAAOqF,OAHG;AAIV1G,yBAAWA,SAJD;AAKVuG,2BAAaA,WALH;AAMV2B,sBAAQjB,SANE;AAOV+C,uBAAA,CAAAN,QAAAhB,GAAAZ,QAAA,YAAA4B,MAAsBM,OAAtB,GAAsB,MAPZ;AAQV/B,oBAAA,CAAA0B,QAAAjB,GAAAZ,QAAA,YAAA6B,MAAmB1B,IAAnB,GAAmB;AART,aAAX;AAUAW,oBAAQd,QAAR,GAAmBA,QAAnB;AACA0B,sBAAU1C,IAAImD,KAAJ,CAAUpC,MAAV,CAAiBe,OAAjB,CAAV;;AACA,gBAAGY,OAAH;ACIO,qBDHN9B,SAASzB,IAAT,CAAcuD,QAAQzK,GAAtB,CCGM;AACD;ADzBR,YCEK;AAyBD;ADjCN;ACmCG,aDLHmB,WAAWgG,MAAX,CAAkBe,SAAlB,EAA6B;AAACd,cAAM;AAACuB,oBAAUA;AAAX;AAAP,OAA7B,CCKG;ADxEJ,aAAAwC,MAAA;AAoEM1L,UAAA0L,MAAA;ACWF,aDVHnM,OAAOqB,KAAP,CAAa,cAAY2H,GAAGhI,GAAf,GAAmB,WAAnB,GAAgCP,CAA7C,CCUG;AACD;ADjFJ,ICIC;ADlBqB,CAAvB;;AAwFAiB,qBAAqB,UAACmB,QAAD,EAAWZ,SAAX,EAAsBC,WAAtB;AACpB,MAAAkK,KAAA,EAAAC,QAAA,EAAAnD,SAAA,EAAA/G,UAAA,EAAAmK,WAAA,EAAAC,QAAA,EAAA9L,CAAA,EAAA6B,SAAA,EAAAkK,SAAA,EAAAC,MAAA,EAAAC,iBAAA,EAAA7B,OAAA,EAAArC,WAAA,EAAAmE,QAAA,EAAApF,GAAA,EAAAmB,IAAA,EAAAW,IAAA,EAAAC,IAAA,EAAAC,IAAA,EAAAC,IAAA,EAAAC,IAAA,EAAAmD,WAAA,EAAAC,QAAA,EAAAC,OAAA,EAAAC,QAAA;AAAAX,UAAA,OAAAxD,UAAA,oBAAAA,eAAA,QAAArB,MAAAqB,WAAAC,oBAAA,aAAAH,OAAAnB,IAAAuB,UAAA,YAAAJ,KAAsD0D,KAAtD,GAAsD,MAAtD,GAAsD,MAAtD,GAAsD,MAAtD;AACAC,aAAA,OAAAzD,UAAA,oBAAAA,eAAA,QAAAS,OAAAT,WAAAC,oBAAA,aAAAS,OAAAD,KAAAP,UAAA,YAAAQ,KAAyD+C,QAAzD,GAAyD,MAAzD,GAAyD,MAAzD,GAAyD,MAAzD;AAEAQ,aAAAhK,YAAA,OAAWA,SAAUS,KAArB,GAAqB,MAArB;AACAmJ,WAAA5J,YAAA,OAASA,SAAU7B,GAAnB,GAAmB,MAAnB;AAEA8L,YAAAV,SAAA,OAAUA,MAAOY,MAAjB,GAAiB,MAAjB;AACAD,aAAAX,SAAA,OAAWA,MAAOW,QAAlB,GAAkB,MAAlB;AACAJ,aAAAP,SAAA,OAAWA,MAAOO,QAAlB,GAAkB,MAAlB;AAEAD,sBAAoBL,WAAW,kBAAX,GAAgCQ,QAAhC,GAA2C,iBAA3C,GAA+DJ,MAA/D,GAAwE,YAAxE,GAAuFM,QAAvF,GAAkG,YAAlG,GAAiHJ,QAAjH,GAA4H,gBAAhJ;AAIAC,gBAAA,CAAArD,OAAA0D,KAAAC,IAAA,QAAAR,iBAAA,aAAAnD,KAAkD4D,OAAlD,GAAkD,MAAlD;;AAEA,MAAGP,WAAH;AACC;AACCpE,oBAAA,OAAAI,UAAA,oBAAAA,eAAA,QAAAY,OAAAZ,WAAAC,oBAAA,aAAAY,OAAAD,KAAAV,UAAA,YAAAW,KAA4DjB,WAA5D,GAA4D,MAA5D,GAA4D,MAA5D,GAA4D,MAA5D;AAEArG,mBAAatB,QAAQC,WAAR,CAAoB,WAApB,CAAb;AAEAoI,kBAAY/G,WAAWyH,UAAX,EAAZ;AAEA2C,iBAAW,IAAI5I,IAAJ,EAAX;AAEA2I,oBAAc,IAAIc,MAAJ,CAAWR,YAAYzH,QAAZ,EAAX,CAAd;AAEA7C,kBAAYN,YAAYC,SAAZ,EAAuBC,WAAvB,IAAsC,OAAlD;AAEAsK,kBAAAF,eAAA,OAAYA,YAAa5J,MAAzB,GAAyB,MAAzB;AAEAP,iBAAW2H,MAAX,CAAkB;AAChB9I,aAAKkI,SADW;AAEhBS,kBAAU,EAFM;AAGhBK,cAAMwC,SAHU;AAIhBjJ,eAAOuJ,OAJS;AAKhBO,uBAAe,IALC;AAMhBlD,gBAAQ;AACPC,aAAG5B,WADI;AAEP6B,eAAK,CAACpI,SAAD;AAFE,SANQ;AAUhBgI,kBAAUsC,QAVM;AAWhBjC,qBAAawC,OAXG;AAYhBpJ,iBAAS6I,QAZO;AAahB9I,oBAAYqJ,OAbI;AAchBjI,cAAMvC,SAdU;AAehBgB,eAAOuJ,QAfS;AAgBhBtC,mBAAW;AAhBK,OAAlB,EAkBC,UAAClJ,KAAD,EAAOiM,MAAP;AACC,YAAGjM,KAAH;AACC,gBAAM,IAAIwK,OAAOC,KAAX,CAAiBzK,KAAjB,CAAN;ACFG;ADlBN;AAuBAwJ,gBAAU,IAAIK,GAAGC,IAAP,EAAV;ACFG,aDGHN,QAAQO,UAAR,CACCkB,WADD,EAEC;AAAChB,cAAM;AAAP,OAFD,EAGC,UAACE,GAAD;AACC,YAAAC,OAAA,EAAA1B,QAAA,EAAAJ,QAAA;;AAAA,YAAG6B,GAAH;AACC,gBAAM,IAAIK,OAAOC,KAAX,CAAiBN,IAAInK,KAArB,EAA4BmK,IAAIO,MAAhC,CAAN;ACFG;;ADGJlB,gBAAQhG,IAAR,CAAavC,SAAb;AACAuI,gBAAQb,IAAR,CAAawC,SAAb;AACAzC,mBAAW;AACVxG,iBAAOuJ,OADG;AAEVd,sBAAY,MAFF;AAGV1I,iBAAOuJ,QAHG;AAIV5K,qBAAWA,SAJD;AAKVuG,uBAAaA,WALH;AAMV2B,kBAAQjB,SANE;AAOVmE,yBAAe;AAPL,SAAX;AASAxC,gBAAQd,QAAR,GAAmBA,QAAnB;AACA0B,kBAAU1C,IAAImD,KAAJ,CAAUpC,MAAV,CAAiBe,OAAjB,CAAV;;AACA,YAAGY,OAAH;AACC9B,qBAAW,EAAX;AACAA,mBAASzB,IAAT,CAAAuD,WAAA,OAAcA,QAASzK,GAAvB,GAAuB,MAAvB;ACDI,iBDEJmB,WAAWgG,MAAX,CAAkBe,SAAlB,EAA6B;AAACd,kBAAM;AAACuB,wBAAUA;AAAX;AAAP,WAA7B,CCFI;AAKD;ADzBN,QCHG;ADpCJ,aAAAwC,MAAA;AA+DM1L,UAAA0L,MAAA;ACKF,aDJHnM,OAAOqB,KAAP,CAAa,cAAYoL,MAAZ,GAAmB,WAAnB,GAAgChM,CAA7C,CCIG;ADrEL;AAAA;ACwEG,WDJFT,OAAOqB,KAAP,CAAa,gBAAcoL,MAAd,GAAqB,WAArB,GAAkChM,CAA/C,CCIE;AACD;AD1FkB,CAArB;;AA0FAkB,uBAAuB,UAAC4L,SAAD,EAAY1K,QAAZ,EAAsBZ,SAAtB;AACtB,MAAAuL,SAAA,EAAArL,UAAA,EAAAsL,oBAAA,EAAAC,MAAA;AAAAvL,eAAatB,QAAQC,WAAR,CAAoB,eAApB,CAAb;;AAEA2M,yBAAuB,UAACE,YAAD;AACtB,QAAAC,iBAAA,EAAAC,MAAA;AAAAA,aAAS,OAAT;AAEAD,wBAAoB,MAApB;;AACA,YAAOD,YAAP;AAAA,WACM,UADN;AAGEC,4BAAoB,KAApB;AAFI;;AADN,WAIM,UAJN;AAMEA,4BAAoB,KAApB;AAFI;;AAJN,WAOM,YAPN;AASEA,4BAAoB,KAApB;AAFI;;AAPN,WAUM,YAVN;AAYEA,4BAAoB,KAApB;AAFI;;AAVN,WAaM,WAbN;AAeEA,4BAAoB,KAApB;AAFI;;AAbN,WAgBM,WAhBN;AAkBEA,4BAAoB,KAApB;AAFI;;AAhBN,WAmBM,UAnBN;AAqBEA,4BAAoB,KAApB;AAFI;;AAnBN,WAsBM,QAtBN;AAwBEA,4BAAoB,IAApB;AAFI;;AAtBN;AA0BEA,4BAAoB,EAApB;AACA;AA3BF;;AA4BA,WAAOA,iBAAP;AAhCsB,GAAvB;;AAkCAF,WAAA7K,YAAA,OAASA,SAAU6K,MAAnB,GAAmB,MAAnB;AAEAA,SAAOtG,OAAP,CAAe,UAAC0G,KAAD;AACd,QAAAC,QAAA;AAAAA,eAAA,CAAAD,SAAA,OAAWA,MAAOC,QAAlB,GAAkB,MAAlB,KAA8B,EAA9B;ACKE,WDJFA,SAAS3G,OAAT,CAAiB,UAAC4G,OAAD;AAChB,UAAAC,QAAA;AAAAA,iBAAW,EAAX;AACAA,eAASC,eAAT,GAA2B,MAA3B;AACAD,eAASE,iBAAT,GAAAL,SAAA,OAA6BA,MAAOjJ,IAApC,GAAoC,MAApC;AACAoJ,eAASG,WAAT,GAAAJ,WAAA,OAAuBA,QAASK,UAAhC,GAAgC,MAAhC;AACAJ,eAASK,WAAT,GAAAN,WAAA,OAAuBA,QAASO,IAAhC,GAAgC,MAAhC;AACAN,eAASO,kBAAT,GAA8Bf,qBAAAO,WAAA,OAAqBA,QAASS,KAA9B,GAA8B,MAA9B,CAA9B;AACAR,eAASS,gCAAT,GAA4CzM,SAA5C;AACAgM,eAASU,UAAT,GAAsB9L,SAAS7B,GAA/B;AACAiN,eAAS3K,KAAT,GAAiBT,SAASS,KAA1B;AACA2K,eAAS1K,KAAT,GAAAyK,WAAA,OAAiBA,QAASO,IAA1B,GAA0B,MAA1B;ACMG,aDLHpM,WAAWyM,MAAX,CAAkB9E,MAAlB,CAAyBmE,QAAzB,CCKG;ADhBJ,MCIE;ADNH;AAcAT,cAAY;AACXU,qBAAiB,MADN;AAEXC,uBAAmB,MAFR;AAGXC,iBAAa,IAAIzK,IAAJ,EAHF;AAIX2K,iBAAa,IAJF;AAKXE,wBAAoB,EALT;AAMXE,sCAAkCzM,SANvB;AAOX0M,gBAAY9L,SAAS7B,GAPV;AAQXsC,WAAOT,SAASS,KARL;AASXC,WAAO;AATI,GAAZ;AAWApB,aAAWyM,MAAX,CAAkB9E,MAAlB,CAAyB0D,SAAzB;AAhEsB,CAAvB;;AAuEAqB,qBAAqB,UAACC,MAAD,EAASC,cAAT,EAAyBC,OAAzB;AACpB,OAACF,MAAD,GAAUA,MAAV;AACA,OAACC,cAAD,GAAkBA,cAAlB;AACA,OAACC,OAAD,GAAWA,OAAX;AAHoB,CAArB;;AAMAH,mBAAmBI,OAAnB,GAA6B,UAACpM,QAAD;ACI3B,SDHDhC,QAAQC,WAAR,CAAoB,WAApB,EAAiC8N,MAAjC,CAAwCzG,MAAxC,CAA+C;AAACnH,SAAK6B,SAAS7B;AAAf,GAA/C,EAAoE;AAACoH,UAAM;AAAC8G,2BAAqB;AAAtB;AAAP,GAApE,CCGC;ADJ2B,CAA7B;;AAGAL,mBAAmBM,MAAnB,GAA4B,UAACtM,QAAD,EAAWxB,KAAX;ACW1B,SDVDrB,OAAOqB,KAAP,CAAa,qBAAmBwB,SAASgC,IAA5B,GAAiC,UAAjC,GAA2ChC,SAAS7B,GAApD,GAAwD,WAArE,EAAiFK,KAAjF,CCUC;ADX0B,CAA5B;;AAIAwN,mBAAkBO,SAAlB,CAAoBC,uBAApB,GAA8C;AAC7C,MAAAC,KAAA;AAAAA,UAAQ;AACPhM,WAAO;AAACiM,WAAK,KAACT;AAAP,KADA;AAEPpO,UAAM;AAAC8O,YAAM,KAACT;AAAR,KAFC;AAKPU,SAAK,CACJ;AAACP,2BAAqB;AAAtB,KADI,EAEJ;AAACA,2BAAqB;AAACQ,iBAAS;AAAV;AAAtB,KAFI,CALE;AASPC,gBAAY,KATL;AAUPC,WAAO,WAVA;AAWP,0BAAsB;AAXf,GAAR;;AAmBA,MAAG,KAACZ,OAAJ;AACCM,UAAMtO,GAAN,GAAY;AAACuO,WAAK,KAACP;AAAP,KAAZ;ACeC;;ADdF,SAAOnO,QAAQC,WAAR,CAAoB,WAApB,EAAiC0B,IAAjC,CAAsC8M,KAAtC,EAA6C;AAACrO,YAAQ;AAACD,WAAK;AAAN;AAAT,GAA7C,EAAiEqH,KAAjE,EAAP;AAtB6C,CAA9C;;AAyBAwG,mBAAmBgB,uBAAnB,GAA6C,UAAChN,QAAD,EAAWiN,QAAX;AAE5C,MAAAvC,SAAA,EAAApL,UAAA,EAAA1B,CAAA,EAAAyB,WAAA,EAAAS,QAAA,EAAAV,SAAA;AAAAU,aAAW,EAAX;AAGA4K,cAAY,EAAZ;;AAEA9L,qBAAmBkB,QAAnB,EAA6BE,QAA7B;;AAGA,MAAGtB,gBAAgBoB,QAAhB,CAAH;AACC3C,WAAO+P,KAAP,CAAa,4BAA0BlN,SAAS7B,GAAhD;;AAEA;AACCkB,oBAAA,CAAAS,YAAA,OAAeA,SAAU8D,UAAzB,GAAyB,MAAzB,IAAsC,GAAtC,IAAe9D,YAAA,OACXA,SAAU4C,sBADC,GACD,MADd,IACuC,GADvC,IAAe5C,YAAA,OAEXA,SAAUqC,IAFC,GAED,MAFd,IAEqB,GAFrB,IAAerC,YAAA,OAGXA,SAAUiE,qBAHC,GAGD,MAHd;AAKAzE,mBAAatB,QAAQC,WAAR,CAAoB,gBAApB,CAAb;AAEAqB,iBAAW6N,MAAX,CAAkB;AAAC,uBAAcnN,SAAS7B;AAAxB,OAAlB;AAGAiB,kBAAYE,WAAW2H,MAAX,CAAkBnH,QAAlB,CAAZ;;AAKAjB,yBAAmBmB,QAAnB,EAA6BZ,SAA7B,EAAwCC,WAAxC;;AAIAV,2BAAqBqB,QAArB,EAA+BZ,SAA/B,EAA0CC,WAA1C;;AAGAN,4BAAsBiB,QAAtB,EAAgCZ,SAAhC;;AAGAN,2BAAqB4L,SAArB,EAAgC1K,QAAhC,EAA0CZ,SAA1C;;ACFG,aDIH4M,mBAAmBI,OAAnB,CAA2BpM,QAA3B,CCJG;ADxBJ,aAAAsJ,MAAA;AA6BM1L,UAAA0L,MAAA;AACLnM,aAAOqB,KAAP,CAAaZ,CAAb;ACFG,aDGHwP,QAAQC,GAAR,CAAerN,SAAS7B,GAAT,GAAa,SAA5B,EAAsCP,CAAtC,CCHG;AD/BL;AAAA;ACkCG,WDEFoO,mBAAmBM,MAAnB,CAA0BtM,QAA1B,EAAoC,SAApC,CCFE;AACD;AD7C0C,CAA7C;;AAiDA,KAACsN,IAAD,GAAQ,EAAR;;AAEAA,KAAKC,GAAL,GAAW,UAAC3D,MAAD;AACV,MAAA5J,QAAA;AAAAA,aAAWhC,QAAQC,WAAR,CAAoB,WAApB,EAAiCC,OAAjC,CAAyC;AAACC,SAAKyL;AAAN,GAAzC,CAAX;;AACA,MAAG5J,QAAH;ACGG,WDFFgM,mBAAmBgB,uBAAnB,CAA2ChN,QAA3C,CCEE;AACD;ADNQ,CAAX;;AAKAgM,mBAAkBO,SAAlB,CAAoBiB,wBAApB,GAA+C;AAC9C,MAAAjP,SAAA,EAAAkP,IAAA;AAAAL,UAAQM,IAAR,CAAa,0BAAb;AACAnP,cAAY,KAACiO,uBAAD,EAAZ;AACAiB,SAAO,IAAP;AACAlP,YAAUgG,OAAV,CAAkB,UAACoJ,QAAD;AACjB,QAAA/P,CAAA,EAAAoC,QAAA;AAAAA,eAAWhC,QAAQC,WAAR,CAAoB,WAApB,EAAiCC,OAAjC,CAAyC;AAACC,WAAKwP,SAASxP;AAAf,KAAzC,CAAX;;AACA,QAAG6B,QAAH;AACC;ACSK,eDRJgM,mBAAmBgB,uBAAnB,CAA2ChN,QAA3C,CCQI;ADTL,eAAAsJ,MAAA;AAEM1L,YAAA0L,MAAA;AACLnM,eAAOqB,KAAP,CAAaZ,CAAb;ACUI,eDTJwP,QAAQC,GAAR,CAAYzP,CAAZ,CCSI;ADdN;ACgBG;ADlBJ;ACoBC,SDZDwP,QAAQQ,OAAR,CAAgB,0BAAhB,CCYC;ADxB6C,CAA/C,C;;;;;;;;;;;;;;;;;;;AEtgBA,IAAAzQ,MAAA,EAAAuH,GAAA,EAAAmB,IAAA,EAAAW,IAAA,EAAAqH,QAAA;AAAAA,WAAWzQ,IAAIC,OAAJ,CAAY,eAAZ,CAAX;AAEA0I,aAAa,EAAb;AAYA5I,SAAS,IAAII,MAAJ,CAAW,aAAX,CAAT;AAEAwI,WAAWC,oBAAX,IAAAtB,MAAAsE,OAAA8E,QAAA,YAAApJ,IAAmDqJ,WAAnD,GAAmD,MAAnD;AAEAhI,WAAWiI,eAAX,GAA6B,EAA7B;;AAEAjI,WAAWwH,GAAX,GAAiB;AAChB,MAAA3P,CAAA;;AAAA;ACNG,WDOFmI,WAAWkI,iBAAX,ECPE;ADMH,WAAAzP,KAAA;AAEOZ,QAAAY,KAAA;ACLJ,WDMFrB,OAAOqB,KAAP,CAAa,8BAAb,EAA6CZ,CAA7C,CCNE;AACD;ADCc,CAAjB;;AAQAmI,WAAWkI,iBAAX,GAA+B,UAAC9B,OAAD;AAE9B,MAAA+B,KAAA,EAAAC,kBAAA,EAAAtI,IAAA,EAAAW,IAAA,EAAAC,IAAA,EAAAwF,MAAA,EAAAmC,eAAA;AAAAnC,WAAAlG,cAAA,QAAAF,OAAAE,WAAAC,oBAAA,YAAAH,KAA2CoG,MAA3C,GAA2C,MAA3C,GAA2C,MAA3C;AAEAmC,oBAAArI,cAAA,QAAAS,OAAAT,WAAAC,oBAAA,YAAAQ,KAAoDP,UAApD,GAAoD,MAApD,GAAoD,MAApD;AAGAiI,UAAAE,mBAAA,QAAA3H,OAAA2H,gBAAAC,kBAAA,YAAA5H,KAA6CyH,KAA7C,GAA6C,MAA7C,GAA6C,MAA7C;;AAEA,MAAG,CAACjC,MAAJ;AACC9O,WAAOqB,KAAP,CAAa,kCAAb;AACA;ACTC;;ADWF2P,uBAAqB,IAAInC,kBAAJ,CAAuBC,MAAvB,EAA+BiC,KAA/B,EAAsC/B,OAAtC,CAArB;ACTC,SDWDgC,mBAAmBX,wBAAnB,ECXC;ADJ6B,CAA/B;;AAiBAzH,WAAWuI,gBAAX,GAA8B,UAACtM,IAAD,EAAOuM,cAAP,EAAuBC,GAAvB;AAE7B,MAAG,CAACD,cAAJ;AACCpR,WAAOqB,KAAP,CAAa,qBAAb;AACA;ACVC;;ADWF,MAAG,CAACH,EAAEoQ,QAAF,CAAWF,cAAX,CAAJ;AACCpR,WAAOqB,KAAP,CAAa,8EAAb;AACA;ACTC;;ADWF,MAAG,CAACgQ,GAAJ;ACTG,WDUFrR,OAAOqB,KAAP,CAAa,eAAb,CCVE;ADSH,SAEK,IAAG,CAACH,EAAEqQ,UAAF,CAAaF,GAAb,CAAJ;ACTF,WDUFrR,OAAOqB,KAAP,CAAgBgQ,MAAI,kBAApB,CCVE;ADSE;AAGJrR,WAAOwR,IAAP,CAAY,0BAAwB3M,IAApC;ACTE,WDUF+D,WAAWiI,eAAX,CAA2BhM,IAA3B,IAAmC6L,SAASe,WAAT,CAAqBL,cAArB,EAAqCC,GAArC,CCVjC;AACD;ADN2B,CAA9B;;AAiBA,KAAA3I,OAAAE,WAAAC,oBAAA,YAAAH,KAAoC0I,cAApC,GAAoC,MAApC;AACCxI,aAAWuI,gBAAX,CAA4B,8BAA5B,GAAA9H,OAAAT,WAAAC,oBAAA,YAAAQ,KAA6F+H,cAA7F,GAA6F,MAA7F,EAA6GvF,OAAO6F,eAAP,CAAuB9I,WAAWwH,GAAlC,CAA7G;ACPA,C;;;;;;;;;;;;;;;;;;;ACxDDvE,OAAO8F,OAAP,CACC;AAAAC,2BAAyB,UAACC,KAAD,EAAQC,KAAR;AACxB,QAAArR,CAAA,EAAAsR,QAAA,EAAA1Q,KAAA,EAAA2N,OAAA,EAAA5N,SAAA,EAAAiN,UAAA;;AAAA;AACC,UAAGwD,SAAUC,KAAb;AACC9C,kBAAU,EAAV;AAEAX,qBAAa,IAAI1K,IAAJ,CAASkO,KAAT,CAAb;AACAE,mBAAW,IAAIpO,IAAJ,CAASmO,KAAT,CAAX;AAEA1Q,oBAAYP,QAAQC,WAAR,CAAoB,WAApB,EAAiC0B,IAAjC,CAAsC;AACjD,yBAAc;AAACwP,iBAAI3D,UAAL;AAAiB4D,iBAAIF;AAArB,WADmC;AAEjDtC,eAAK,CACJ;AAACP,iCAAqB;AAAtB,WADI,EAEJ;AAACA,iCAAqB;AAACQ,uBAAS;AAAV;AAAtB,WAFI,CAF4C;AAMjD,gCAAqB,MAN4B;AAOjDC,sBAAY,KAPqC;AAQjDC,iBAAO;AAR0C,SAAtC,EASV;AAAC3O,kBAAQ;AAACD,iBAAI;AAAL;AAAT,SATU,EASSqH,KATT,EAAZ;;AAWA,YAAIjH,SAAJ;AACCA,oBAAUgG,OAAV,CAAkB,UAAC9G,GAAD;ACWX,mBDVN0O,QAAQ9G,IAAR,CAAa5H,IAAIU,GAAjB,CCUM;ADXP;ACaI;;ADVL4H,mBAAWkI,iBAAX,CAA6B9B,OAA7B;AAEA,eAAO1B,MAAP;AAxBF;AAAA,aAAAnB,MAAA;AAyBM1L,UAAA0L,MAAA;AACL9K,cAAQZ,CAAR;AACA,aAAOY,KAAP;ACaE;ADzCJ;AAAA,CADD,E;;;;;;;;;;;;;;;;;;;AEAAwK,OAAO8F,OAAP,CACC;AAAAO,gBAAc,UAACpD,MAAD,EAASqD,UAAT;AACb,QAAA1R,CAAA,EAAAY,KAAA,EAAAiO,KAAA,EAAA8C,WAAA;;AAAA;AACC,UAAGtD,UAAWqD,UAAd;AACC7C,gBAAQ;AACPhM,iBAAO;AAACiM,iBAAKT;AAAN,WADA;AAEP5H,uBAAa;AAACwI,qBAAS;AAAV;AAFN,SAAR;;AAIA,aAAAyC,cAAA,OAAGA,WAAYzP,MAAf,GAAe,MAAf,IAAwB,CAAxB;AACC4M,gBAAMtO,GAAN,GAAY;AAAEuO,iBAAK4C;AAAP,WAAZ;ACQI;;ADNLC,sBAAcvR,QAAQC,WAAR,CAAoB,gBAApB,EAAsC0B,IAAtC,CAA2C8M,KAA3C,EAAkD;AAACrO,kBAAQ;AAACD,iBAAK,CAAN;AAAQkG,yBAAa;AAArB;AAAT,SAAlD,EAAqFmB,KAArF,EAAd;AACA+J,oBAAYhL,OAAZ,CAAoB,UAACiL,UAAD;AACnB,cAAAxP,QAAA,EAAAyP,KAAA,EAAAvN,OAAA;AAAAlC,qBAAWhC,QAAQC,WAAR,CAAoB,WAApB,EAAiCC,OAAjC,CAAyC;AAACC,iBAAKqR,WAAWnL;AAAjB,WAAzC,EAAwE;AAACjG,oBAAQ;AAACsR,sBAAQ;AAAT;AAAT,WAAxE,CAAX;;AACA,cAAG1P,QAAH;AACCkC,sBAAA,CAAAlC,YAAA,OAAUA,SAAU0P,MAAV,CAAiB,IAAjB,CAAV,GAA2B,MAA3B,KAAoC,EAApC;;AACA,gBAAA1P,YAAA,OAAGA,SAAU0P,MAAV,CAAiB,IAAjB,CAAH,GAAoB,MAApB;AACCD,sBAAQjN,SAAAxC,YAAA,OAASA,SAAU0P,MAAV,CAAiB,IAAjB,CAAT,GAA0B,MAA1B,IAAiC,CAAzC;AADD;AAGCD,sBAAQ,CAAR;ACoBM;;AACD,mBDpBNzR,QAAQC,WAAR,CAAoB,gBAApB,EAAsCqH,MAAtC,CACC;AAACnH,mBAAKqR,WAAWrR;AAAjB,aADD,EACwB;AACvBoH,oBAAM;AACLtD,oCAAoBC,OADf;AAELK,uCAAuBkN;AAFlB;AADiB,aADxB,CCoBM;AAQD;ADpCP;AAcA,eAAO,SAAP;AAvBD;AAyBC,eAAO,0BAAP;AA1BF;AAAA,aAAAnG,MAAA;AA2BM1L,UAAA0L,MAAA;AACL9K,cAAQZ,CAAR;AACA,aAAOY,KAAP;AC2BE;ADzDJ;AAgCAmR,aAAW,UAAC1D,MAAD,EAAS9J,IAAT;AACV,QAAAvE,CAAA,EAAAY,KAAA,EAAAiO,KAAA,EAAA8C,WAAA;;AAAA;AACC,UAAGtD,UAAW9J,IAAd;AAECsK,gBAAQ;AACPhM,iBAAO;AAACiM,iBAAKT;AAAN,WADA;AAEP9J,gBAAMA;AAFC,SAAR;AAIAiL,gBAAQC,GAAR,CAAY,OAAZ,EAAoBZ,KAApB;AACA8C,sBAAcvR,QAAQC,WAAR,CAAoB,gBAApB,EAAsC0B,IAAtC,CAA2C8M,KAA3C,EACb;AAACrO,kBAAQ;AAACD,iBAAK,CAAN;AAASgE,kBAAM,CAAf;AAAkBO,oCAAwB,CAA1C;AAA4C3C,wBAAY;AAAxD;AAAT,SADa,EACyDyF,KADzD,EAAd;AAEA4H,gBAAQC,GAAR,CAAY,aAAZ,EAAAkC,eAAA,OAA0BA,YAAa1P,MAAvC,GAAuC,MAAvC;AACA0P,oBAAYhL,OAAZ,CAAoB,UAACqL,MAAD;AAEnB,cAAAC,sBAAA,EAAAC,eAAA,EAAAC,EAAA,EAAArL,GAAA;;AAAA,eAAAkL,UAAA,OAAGA,OAAQ7P,UAAX,GAAW,MAAX,MAAG6P,UAAA,OAAuBA,OAAQlN,sBAA/B,GAA+B,MAAlC,MAAGkN,UAAA,OAA0DA,OAAQzN,IAAlE,GAAkE,MAArE,MAAGyN,UAAA,OAA2EA,OAAQzR,GAAnF,GAAmF,MAAtF;AACC2R,8BAAA,CAAApL,MAAA1G,QAAAC,WAAA,kBAAAC,OAAA,CAAA0R,OAAA7P,UAAA;ACoCQ3B,sBAAQ;AACNqF,sBAAM;AADA;ADpChB,mBCuCa,IDvCb,GCuCoBiB,IDvCiFjB,IAArG,GAAqG,MAArG;AACAtB,mBAAOyN,OAAOzN,IAAd;AACA4N,iBAAKH,OAAOzR,GAAZ;AACA0R,qCAAyBC,kBAAkB,IAAlB,GAAyB3N,IAAzB,GAAgC4N,EAAzD;AACA3C,oBAAQC,GAAR,CAAY,YAAZ,EAAyBuC,OAAOzR,GAAhC;ACwCM,mBDvCNH,QAAQC,WAAR,CAAoB,gBAApB,EAAsC8N,MAAtC,CAA6CzG,MAA7C,CAAoDsK,OAAOzR,GAA3D,EACC;AAACoH,oBAAK;AAACsK,wCAAuBA;AAAxB;AAAN,aADD,CCuCM;AAKD;ADpDP;AAWA,eAAO,SAAP;AArBD;AAuBC,eAAO,0BAAP;AAxBF;AAAA,aAAAvG,MAAA;AAyBM1L,UAAA0L,MAAA;AACL9K,cAAQZ,CAAR;AACA,aAAOY,KAAP;AC8CE;AD1GJ;AA8DAwR,YAAU,UAAC/D,MAAD,EAASqD,UAAT;AACT,QAAA1R,CAAA,EAAAY,KAAA,EAAAiO,KAAA,EAAA8C,WAAA;;AAAA;AACC,UAAGtD,UAAWqD,UAAd;AACC7C,gBAAQ;AACPhM,iBAAO;AAACiM,iBAAKT;AAAN;AADA,SAAR;;AAGA,aAAAqD,cAAA,OAAGA,WAAYzP,MAAf,GAAe,MAAf,IAAwB,CAAxB;AACC4M,gBAAMtO,GAAN,GAAY;AAAEuO,iBAAK4C;AAAP,WAAZ;ACoDI;;ADlDLC,sBAAcvR,QAAQC,WAAR,CAAoB,gBAApB,EAAsC0B,IAAtC,CAA2C8M,KAA3C,EAAkD;AAACrO,kBAAQ;AAACD,iBAAK,CAAN;AAAQkG,yBAAa;AAArB;AAAT,SAAlD,EAAqFmB,KAArF,EAAd;AACA+J,oBAAYhL,OAAZ,CAAoB,UAACiL,UAAD;AACnB,cAAAxP,QAAA;AAAAA,qBAAWhC,QAAQC,WAAR,CAAoB,WAApB,EAAiCC,OAAjC,CAAyC;AAACC,iBAAKqR,WAAWnL;AAAjB,WAAzC,EAAwE;AAACjG,oBAAQ;AAACsR,sBAAQ;AAAT;AAAT,WAAxE,CAAX;;AACA,cAAG1P,QAAH;ACgEO,mBD9DNoN,QAAQC,GAAR,CAAY,UAAZ,CC8DM;AACD;ADnEP;AAWA,eAAO,SAAP;AAnBD;AAqBC,eAAO,0BAAP;AAtBF;AAAA,aAAA/D,MAAA;AAuBM1L,UAAA0L,MAAA;AACL9K,cAAQZ,CAAR;AACA,aAAOY,KAAP;AC6DE;ADrJJ;AAAA,CADD,E","file":"/packages/steedos_qhd-archive-sync.js","sourcesContent":["_eval = Npm.require('eval')\n\nInstanceManager = {}\n\nlogger = new Logger 'Workflow -> InstanceManager'\n\nInstanceManager.handlerInstanceByFieldMap = (ins, field_map) ->\n\tres = ins\n\tif ins\n\t\tif !field_map\n\t\t\t\n\t\t\tflow = Creator.Collections[\"flows\"].findOne({ _id: ins.flow }, { fields: { field_map: 1 } })\n\n\t\t\tif flow?.field_map\n\t\t\t\tfield_map = flow.field_map\n\n\t\tif field_map\n\t\t\tcontext = _.clone(ins)\n\n\t\t\tcontext._ = _\n\n\t\t\tscript = \"var instances = #{field_map}; exports.instances = instances\"\n\t\t\ttry\n\t\t\t\tres = _eval(script, \"handlerInstanceByFieldMap\", context, false).instances\n\t\t\tcatch e\n\t\t\t\tres = { _error: e }\n\t\t\t\tlogger.error e\n\treturn res","var _eval, logger;                 \n\n_eval = Npm.require('eval');\n\nInstanceManager = {};\n\nlogger = new Logger('Workflow -> InstanceManager');\n\nInstanceManager.handlerInstanceByFieldMap = function(ins, field_map) {\n  var context, e, flow, res, script;\n  res = ins;\n  if (ins) {\n    if (!field_map) {\n      flow = Creator.Collections[\"flows\"].findOne({\n        _id: ins.flow\n      }, {\n        fields: {\n          field_map: 1\n        }\n      });\n      if (flow != null ? flow.field_map : void 0) {\n        field_map = flow.field_map;\n      }\n    }\n    if (field_map) {\n      context = _.clone(ins);\n      context._ = _;\n      script = \"var instances = \" + field_map + \"; exports.instances = instances\";\n      try {\n        res = _eval(script, \"handlerInstanceByFieldMap\", context, false).instances;\n      } catch (error) {\n        e = error;\n        res = {\n          _error: e\n        };\n        logger.error(e);\n      }\n    }\n  }\n  return res;\n};\n","request = Npm.require('request')\npath = Npm.require('path')\nfs = Npm.require('fs')\n\nlogger = new Logger 'Records_QHD -> InstancesToArchive'\n\nsetFileName = (record_id, file_prefix) ->\n\tfile_name = \"未命名\"\n\tcollection = Creator.Collections[\"cms_files\"]\n\tcount = collection.find({\"parent.ids\": record_id}).count()\n\tcount = count + 1\n\tstrcount = \"00\" + count\n\tcount_code = strcount.substr(strcount.length-2)\n\tfile_name =  file_prefix + \"-\" + count_code\n\treturn file_name\n\n#\t校验必填\n_checkParameter = (formData) ->\n\tif !formData.fonds_name\n\t\treturn false\n\treturn true\n\n\n# 整理档案表数据\n_minxiInstanceData = (formData, instance) ->\n\tif !instance\n\t\treturn\n\tdateFormat = \"YYYY-MM-DD HH:mm:ss\"\n\n\tformData.space = instance.space\n\n\tformData.owner = instance.submitter\n\n\tformData.created_by = instance.created_by\n\n\tformData.created = new Date()\n\n\t# 字段映射:表单字段对应到formData\n\tfield_values = InstanceManager.handlerInstanceByFieldMap(instance)\n\n\tformData.applicant_name = field_values?.nigaorens\n\t\n\tformData.archive_dept = field_values?.guidangbumen\n\tformData.applicant_organization_name = field_values?.nigaodanwei || field_values?.FILE_CODE_fzr\n\t\n\tformData.security_classification = field_values?.miji\n\tformData.document_type = field_values?.wenjianleixing\n\tif field_values?.wenjianriqi\n\t\tformData.document_date = new Date(field_values?.wenjianriqi)\n\tformData.document_number = field_values?.wenjianzihao\n\tformData.author = field_values?.FILE_CODE_fzr\n\tformData.title = instance.name\n\tformData.prinpipal_receiver = field_values?.zhusong\n\tformData.year = field_values?.suoshuniandu\n\n\t# 设置页数\n\tif field_values?.PAGE_COUNT\n\t\told_page = field_values?.PAGE_COUNT.toString() || \"00\"\n\t\t# console.log \"old_page: \",old_page;\n\t\t# console.log \"instance._id: \",instance._id;\n\t\tstr_page_count = old_page.substr(0,old_page.length-1);\n\t\tif str_page_count\n\t\t\tformData.total_number_of_pages = parseInt(str_page_count) + 1\n\telse\n\t\tformData.total_number_of_pages = \"1\"\n\n\t# 默认值\n\tformData.fonds_constituting_unit_name = \"河北港口集团有限公司\"\n\tformData.archival_category_code = \"WS\"\n\tformData.aggregation_level = \"文件\"\n\tformData.document_aggregation = \"单件\"\n\tformData.language = \"汉语\"\n\n\tformData.orignal_document_creation_way = \"原生\"\n\tformData.document_status = \"电子归档\"\n\n\n\t# 数字化属性\n\tformData.physical_record_characteristics = \"PDF\"\n\tformData.scanning_resolution = \"220dpi\"\n\tformData.scanning_color_model = \"彩色\"\n\tformData.image_compression_scheme = \"无损压缩\"\n\n\t# 存储位置\n\tformData.current_location = \"\\\\\\\\192.168.0.151\\\\beta\\\\data\\\\oafile\"\n\t\n\t# 机构人员类型\n\tformData.agent_type = \"部门\"\n\n\t# 机构：FILING_DEPT字段（发文是拟稿单位，收文是所属部门）\n\tif field_values?.FILING_DEPT\n\t\torgObj = Creator.Collections[\"archive_organization\"].findOne({'name':field_values?.FILING_DEPT})\n\tif orgObj\n\t\tformData.organizational_structure = orgObj._id\n\t\tformData.organizational_structure_code = orgObj.code\n\n\t# 根据FONDSID查找全宗号和全总名称\n\tfondObj = Creator.Collections[\"archive_fonds\"].findOne({'name':field_values?.FONDSID})\n\tif fondObj\n\t\tformData.fonds_name = fondObj?._id\n\t\tformData.company = fondObj?.company\n\t\tformData.fonds_code = fondObj?.code\n\n\t# 保管期限代码查找\n\tretentionObj = Creator.Collections[\"archive_retention\"].findOne({'name':field_values?.baocunqixian})\n\tif retentionObj\n\t\tformData.retention_peroid = retentionObj?._id\n\t\tformData.retention_peroid_code = retentionObj?.code\n\t\t# 根据保管期限,处理标志\n\t\tif retentionObj?.years >= 10\n\t\t\tformData.produce_flag = \"在档\"\n\t\telse\n\t\t\tformData.produce_flag = \"暂存\"\n\t\n\t# 归档日期\n\tformData.archive_date = moment(new Date()).format(dateFormat)\n\n\t# OA表单的ID，作为判断OA归档的标志\n\tformData.external_id = instance._id\n\n\tfieldNames = _.keys(formData)\n\n\tfieldNames.forEach (key)->\n\t\tfieldValue = formData[key]\n\t\tif _.isDate(fieldValue)\n\t\t\tfieldValue = moment(fieldValue).format(dateFormat)\n\n\t\tif _.isObject(fieldValue)\n\t\t\tfieldValue = fieldValue?.name\n\n\t\tif _.isArray(fieldValue) && fieldValue.length > 0 && _.isObject(fieldValue)\n\t\t\tfieldValue = fieldValue?.getProperty(\"name\")?.join(\",\")\n\n\t\tif _.isArray(fieldValue)\n\t\t\tfieldValue = fieldValue?.join(\",\")\n\n\t\tif !fieldValue\n\t\t\tfieldValue = ''\n\n\treturn formData\n\n# 整理关联档案\n_minxiRelatedArchives = (instance, record_id) ->\n\t# 当前归档的文件有关联的文件\n\tif instance?.related_instances\n\t\trelated_archives = []\n\t\tinstance.related_instances.forEach (related_instance) ->\n\t\t\trelatedObj = Creator.Collections[\"archive_wenshu\"].findOne({'external_id':related_instance},{fields:{_id:1}})\n\t\t\tif relatedObj\n\t\t\t\trelated_archives.push relatedObj?._id\n\t\tCreator.Collections[\"archive_wenshu\"].update(\n\t\t\t{_id:record_id},\n\t\t\t{\n\t\t\t\t$set:{ related_archives:related_archives }\n\t\t\t})\n\n\t# 查找当前 instance 是否被其他的 主instance 关联\n\tmainRelatedObjs = Creator.Collections[\"instances\"].find(\n\t\t{'related_instances':instance._id},\n\t\t{fields: {_id: 1}}).fetch()\n\t# 如果被其他的主instance关联该文件，则更新主instance的related_archives字段\n\tif mainRelatedObjs.length > 0\n\t\tmainRelatedObjs.forEach (mainRelatedObj) ->\n\t\t\t# 查找该主 instance对应的主关联档案\n\t\t\tmainRelatedObj = Creator.Collections[\"archive_wenshu\"].findOne({'external_id':mainRelatedObj._id})\n\t\t\tif mainRelatedObj\n\t\t\t\trelated_archives = mainRelatedObj?.related_archives || []\n\t\t\t\trelated_archives.push record_id\n\t\t\t\tCreator.Collections[\"archive_wenshu\"].update(\n\t\t\t\t\t{_id:mainRelatedObj._id},\n\t\t\t\t\t{\n\t\t\t\t\t\t$set:{ related_archives:related_archives }\n\t\t\t\t\t})\n\n# 整理文件数据\n_minxiAttachmentInfo = (instance, record_id, file_prefix) ->\n\t# 对象名\n\tobject_name = RecordsQHD?.settings_records_qhd?.to_archive?.object_name\n\tparents = []\n\tspaceId = instance?.space\n\n\t# 查找最新版本的文件(包括正文附件)\n\tcurrentFiles = cfs.instances.find({\n\t\t'metadata.instance': instance._id,\n\t\t'metadata.current': true\n\t}).fetch()\n\n\tcollection = Creator.Collections[\"cms_files\"]\n\n\tcurrentFiles.forEach (cf, index)->\n\t\ttry\n\t\t\tinstance_file_path = RecordsQHD?.settings_records_qhd?.instance_file_path\n\t\t\tversions = []\n\t\t\t# 根据当前的文件,生成一个cms_files记录\n\t\t\tcmsFileId = collection._makeNewID()\n\n\t\t\tfile_name = setFileName(record_id, file_prefix) + \".\" + cf.extension()\n\t\t\t\n\t\t\tcollection.insert({\n\t\t\t\t\t_id: cmsFileId,\n\t\t\t\t\tversions: [],\n\t\t\t\t\tcreated_by: cf.metadata.owner,\n\t\t\t\t\tsize: cf.size(),\n\t\t\t\t\towner: cf?.metadata?.owner,\n\t\t\t\t\tmodified: cf?.metadata?.modified,\n\t\t\t\t\tmain: cf?.metadata?.main,\n\t\t\t\t\tparent: {\n\t\t\t\t\t\to: object_name,\n\t\t\t\t\t\tids: [record_id]\n\t\t\t\t\t},\n\t\t\t\t\tmodified_by: cf?.metadata?.modified_by,\n\t\t\t\t\tcreated: cf?.metadata?.created,\n\t\t\t\t\tname: file_name,\n\t\t\t\t\tspace: spaceId,\n\t\t\t\t\textention: cf.extension()\n\t\t\t\t})\n\n\t\t\t# 查找每个文件的历史版本\n\t\t\thistoryFiles = cfs.instances.find({\n\t\t\t\t'metadata.instance': cf.metadata.instance,\n\t\t\t\t'metadata.current': {$ne: true},\n\t\t\t\t\"metadata.parent\": cf.metadata.parent\n\t\t\t}, {sort: {uploadedAt: -1}}).fetch()\n\t\t\t# 把当前文件放在历史版本文件的最后\n\t\t\thistoryFiles.push(cf)\n\n\t\t\t# 历史版本文件+当前文件 上传到creator\n\t\t\thistoryFiles.forEach (hf) ->\n\t\t\t\tinstance_file_key = path.join(instance_file_path, hf?.copies?.instances?.key)\n\n\t\t\t\tif fs.existsSync(instance_file_key)\n\t\t\t\t\t# console.log \"createReadStream: \",hf?.copies?.instances?.key\n\t\t\t\t\tnewFile = new FS.File()\n\t\t\t\t\tnewFile.attachData(\n\t\t\t\t\t\tfs.createReadStream(instance_file_key),\n\t\t\t\t\t\t{type: hf.original.type},\n\t\t\t\t\t\t(err)->\n\t\t\t\t\t\t\tif err\n\t\t\t\t\t\t\t\tthrow new Meteor.Error(err.error, err.reason)\n\t\t\t\t\t\t\tnewFile.name hf.name()\n\t\t\t\t\t\t\tnewFile.size hf.size()\n\t\t\t\t\t\t\tmetadata = {\n\t\t\t\t\t\t\t\towner: hf.metadata.owner,\n\t\t\t\t\t\t\t\towner_name: hf.metadata?.owner_name,\n\t\t\t\t\t\t\t\tspace: spaceId,\n\t\t\t\t\t\t\t\trecord_id: record_id,\n\t\t\t\t\t\t\t\tobject_name: object_name,\n\t\t\t\t\t\t\t\tparent: cmsFileId,\n\t\t\t\t\t\t\t\tcurrent: hf.metadata?.current,\n\t\t\t\t\t\t\t\tmain: hf.metadata?.main\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tnewFile.metadata = metadata\n\t\t\t\t\t\t\tfileObj = cfs.files.insert(newFile)\n\t\t\t\t\t\t\tif fileObj\n\t\t\t\t\t\t\t\tversions.push(fileObj._id)\n\t\t\t\t\t\t)\n\t\t\t# 把 cms_files 记录的 versions 更新\n\t\t\tcollection.update(cmsFileId, {$set: {versions: versions}})\n\t\tcatch e\n\t\t\tlogger.error \"正文附件下载失败：#{cf._id}. error: \" + e\n\n\n# 整理表单html\n_minxiInstanceHtml = (instance, record_id, file_prefix) ->\n\tadmin = RecordsQHD?.settings_records_qhd?.to_archive?.admin\n\tapps_url = RecordsQHD?.settings_records_qhd?.to_archive?.apps_url\n\t\n\tspace_id = instance?.space\n\tins_id = instance?._id\n\n\tuser_id = admin?.userid\n\tusername = admin?.username\n\tpassword = admin?.password\n\n\tinstance_html_url = apps_url + '/workflow/space/' + space_id + '/view/readonly/' + ins_id + '?username=' + username + '&password=' + password + '&hide_traces=1'\n\n\t# console.log \"instance_html_url\",instance_html_url\n\t\n\tresult_html = HTTP.call('GET',instance_html_url)?.content\n\n\tif result_html\n\t\ttry\n\t\t\tobject_name = RecordsQHD?.settings_records_qhd?.to_archive?.object_name\n\n\t\t\tcollection = Creator.Collections[\"cms_files\"]\n\n\t\t\tcmsFileId = collection._makeNewID()\n\n\t\t\tdate_now = new Date()\n\n\t\t\tdata_buffer = new Buffer(result_html.toString())\n\n\t\t\tfile_name = setFileName(record_id, file_prefix) + '.html'\n\n\t\t\tfile_size = data_buffer?.length\n\t\t\n\t\t\tcollection.insert({\n\t\t\t\t\t_id: cmsFileId,\n\t\t\t\t\tversions: [],\n\t\t\t\t\tsize: file_size,\n\t\t\t\t\towner: user_id,\n\t\t\t\t\tinstance_html: true,\n\t\t\t\t\tparent: {\n\t\t\t\t\t\to: object_name,\n\t\t\t\t\t\tids: [record_id]\n\t\t\t\t\t},\n\t\t\t\t\tmodified: date_now,\n\t\t\t\t\tmodified_by: user_id,\n\t\t\t\t\tcreated: date_now,\n\t\t\t\t\tcreated_by: user_id,\n\t\t\t\t\tname: file_name,\n\t\t\t\t\tspace: space_id,\n\t\t\t\t\textention: 'html'\n\t\t\t\t},\n\t\t\t\t(error,result)->\n\t\t\t\t\tif error\n\t\t\t\t\t\tthrow new Meteor.Error(error)\n\t\t\t\t)\n\n\t\t\tnewFile = new FS.File()\n\t\t\tnewFile.attachData(\n\t\t\t\tdata_buffer,\n\t\t\t\t{type: 'text/html'},\n\t\t\t\t(err)->\n\t\t\t\t\tif err\n\t\t\t\t\t\tthrow new Meteor.Error(err.error, err.reason)\n\t\t\t\t\tnewFile.name file_name\n\t\t\t\t\tnewFile.size file_size\n\t\t\t\t\tmetadata = {\n\t\t\t\t\t\towner: user_id,\n\t\t\t\t\t\towner_name: \"系统生成\",\n\t\t\t\t\t\tspace: space_id,\n\t\t\t\t\t\trecord_id: record_id,\n\t\t\t\t\t\tobject_name: object_name,\n\t\t\t\t\t\tparent: cmsFileId,\n\t\t\t\t\t\tinstance_html: true\n\t\t\t\t\t}\n\t\t\t\t\tnewFile.metadata = metadata\n\t\t\t\t\tfileObj = cfs.files.insert(newFile)\n\t\t\t\t\tif fileObj\n\t\t\t\t\t\tversions = []\n\t\t\t\t\t\tversions.push fileObj?._id\n\t\t\t\t\t\tcollection.update(cmsFileId, {$set: {versions: versions}})\n\t\t\t\t)\n\t\tcatch e\n\t\t\tlogger.error \"存储HTML失败：#{ins_id}. error: \" + e\n\t\n\telse\n\t\tlogger.error \"表单生成HTML失败：#{ins_id}. error: \" + e\n\n\n\n# 整理档案审计数据\n_minxiInstanceTraces = (auditList, instance, record_id) ->\n\tcollection = Creator.Collections[\"archive_audit\"]\n\t# 获取步骤状态文本\n\tgetApproveStatusText = (approveJudge) ->\n\t\tlocale = \"zh-CN\"\n\t\t#已结束的显示为核准/驳回/取消申请，并显示处理状态图标\n\t\tapproveStatusText = undefined\n\t\tswitch approveJudge\n\t\t\twhen 'approved'\n\t\t\t\t# 已核准\n\t\t\t\tapproveStatusText = \"已核准\"\n\t\t\twhen 'rejected'\n\t\t\t\t# 已驳回\n\t\t\t\tapproveStatusText = \"已驳回\"\n\t\t\twhen 'terminated'\n\t\t\t\t# 已取消\n\t\t\t\tapproveStatusText = \"已取消\"\n\t\t\twhen 'reassigned'\n\t\t\t\t# 转签核\n\t\t\t\tapproveStatusText = \"转签核\"\n\t\t\twhen 'relocated'\n\t\t\t\t# 重定位\n\t\t\t\tapproveStatusText = \"重定位\"\n\t\t\twhen 'retrieved'\n\t\t\t\t# 已取回\n\t\t\t\tapproveStatusText = \"已取回\"\n\t\t\twhen 'returned'\n\t\t\t\t# 已退回\n\t\t\t\tapproveStatusText = \"已退回\"\n\t\t\twhen 'readed'\n\t\t\t\t# 已阅\n\t\t\t\tapproveStatusText = \"已阅\"\n\t\t\telse\n\t\t\t\tapproveStatusText = ''\n\t\t\t\tbreak\n\t\treturn approveStatusText\n\n\ttraces = instance?.traces\n\n\ttraces.forEach (trace)->\n\t\tapproves = trace?.approves || []\n\t\tapproves.forEach (approve)->\n\t\t\tauditObj = {}\n\t\t\tauditObj.business_status = \"计划任务\"\n\t\t\tauditObj.business_activity = trace?.name\n\t\t\tauditObj.action_time = approve?.start_date\n\t\t\tauditObj.action_user = approve?.user\n\t\t\tauditObj.action_description = getApproveStatusText approve?.judge\n\t\t\tauditObj.action_administrative_records_id = record_id\n\t\t\tauditObj.instace_id = instance._id\n\t\t\tauditObj.space = instance.space\n\t\t\tauditObj.owner = approve?.user\n\t\t\tcollection.direct.insert auditObj\n\tautoAudit = {\n\t\tbusiness_status: \"计划任务\",\n\t\tbusiness_activity: \"自动归档\",\n\t\taction_time: new Date,\n\t\taction_user: \"OA\",\n\t\taction_description: \"\",\n\t\taction_administrative_records_id: record_id,\n\t\tinstace_id: instance._id,\n\t\tspace: instance.space,\n\t\towner: \"\"\n\t}\n\tcollection.direct.insert autoAudit\n\treturn\n\n# =============================================\n\n# spaces: Array 工作区ID\n# contract_flows： Array 合同类流程\nInstancesToArchive = (spaces, contract_flows, ins_ids) ->\n\t@spaces = spaces\n\t@contract_flows = contract_flows\n\t@ins_ids = ins_ids\n\treturn\n\nInstancesToArchive.success = (instance)->\n\tCreator.Collections[\"instances\"].direct.update({_id: instance._id}, {$set: {is_recorded_creator: true}})\n\nInstancesToArchive.failed = (instance, error)->\n\tlogger.error \"failed, name is #{instance.name}, id is #{instance._id}. error: \", error\n\n#\t获取非合同类的申请单：正常结束的(不包括取消申请、被驳回的申请单)\nInstancesToArchive::getNonContractInstances = ()->\n\tquery = {\n\t\tspace: {$in: @spaces},\n\t\tflow: {$nin: @contract_flows},\n\t\t# is_archived 字段被老归档接口占用，所以使用 is_recorded_creator 字段判断是否归档\n\t\t# 正常情况下，未归档的表单无 is_recorded_creator 字段\n\t\t$or: [\n\t\t\t{is_recorded_creator: false},\n\t\t\t{is_recorded_creator: {$exists: false}}\n\t\t],\n\t\tis_deleted: false,\n\t\tstate: \"completed\",\n\t\t\"values.record_need\": \"true\"\n\t\t# 重定位到结束的表单该值为 terminated，故取消此判断\n\t\t# $or: [\n\t\t# \t{final_decision: \"approved\"},\n\t\t# \t{final_decision: {$exists: false}},\n\t\t# \t{final_decision: \"\"}\n\t\t# ]\n\t}\n\tif @ins_ids\n\t\tquery._id = {$in: @ins_ids}\n\treturn Creator.Collections[\"instances\"].find(query, {fields: {_id: 1}}).fetch()\n\n\nInstancesToArchive.syncNonContractInstance = (instance, callback) ->\n\t#\t表单数据\n\tformData = {}\n\n\t# 审计记录\n\tauditList = []\n\n\t_minxiInstanceData(formData, instance)\n\t\n\t# console.log \"formData\", formData\n\tif _checkParameter(formData)\n\t\tlogger.debug(\"_sendContractInstance: #{instance._id}\")\n\t\t\n\t\ttry \n\t\t\tfile_prefix = \tformData?.fonds_code + \"-\" + \n\t\t\t\t\t\t\tformData?.archival_category_code + \"·\" + \n\t\t\t\t\t\t\tformData?.year + \"-\" +\n\t\t\t\t\t\t\tformData?.retention_peroid_code\n\t\t\t# 如果原来已经归档，则删除原来归档的记录\n\t\t\tcollection = Creator.Collections[\"archive_wenshu\"]\n\n\t\t\tcollection.remove({'external_id':instance._id})\n\n\t\t\t# console.log \"插入档案\"\n\t\t\trecord_id = collection.insert formData\n\n\t\t\t# 整理表单html\n\t\t\t# console.log \"整理表单html\"\n\t\t\t# console.log \"file_prefix\",file_prefix\n\t\t\t_minxiInstanceHtml(instance, record_id, file_prefix)\n\n\t\t\t# 整理文件\n\t\t\t# console.log \"整理文件\"\n\t\t\t_minxiAttachmentInfo(instance, record_id, file_prefix)\n\n\t\t\t# 整理关联档案\n\t\t\t_minxiRelatedArchives(instance, record_id)\n\n\t\t\t# 处理审计记录\n\t\t\t_minxiInstanceTraces(auditList, instance, record_id)\n\n\t\t\tInstancesToArchive.success instance\n\t\tcatch e\n\t\t\tlogger.error e\n\t\t\tconsole.log \"#{instance._id}表单归档失败，\", e\n\telse\n\t\tInstancesToArchive.failed instance, \"立档单位未找到\"\n\n\n@Test = {}\n# Test.run('iTRRqEfHYGhDeWwaC')\nTest.run = (ins_id)->\n\tinstance = Creator.Collections[\"instances\"].findOne({_id: ins_id})\n\tif instance\n\t\tInstancesToArchive.syncNonContractInstance instance\n\nInstancesToArchive::syncNonContractInstances = () ->\n\tconsole.time(\"syncNonContractInstances\")\n\tinstances = @getNonContractInstances()\n\tthat = @\n\tinstances.forEach (mini_ins)->\n\t\tinstance = Creator.Collections[\"instances\"].findOne({_id: mini_ins._id})\n\t\tif instance\n\t\t\ttry\n\t\t\t\tInstancesToArchive.syncNonContractInstance instance\n\t\t\tcatch e\n\t\t\t\tlogger.error e\n\t\t\t\tconsole.log e\n\tconsole.timeEnd(\"syncNonContractInstances\")","var _checkParameter, _minxiAttachmentInfo, _minxiInstanceData, _minxiInstanceHtml, _minxiInstanceTraces, _minxiRelatedArchives, fs, logger, path, request, setFileName;                    \n\nrequest = Npm.require('request');\n\npath = Npm.require('path');\n\nfs = Npm.require('fs');\n\nlogger = new Logger('Records_QHD -> InstancesToArchive');\n\nsetFileName = function(record_id, file_prefix) {\n  var collection, count, count_code, file_name, strcount;\n  file_name = \"未命名\";\n  collection = Creator.Collections[\"cms_files\"];\n  count = collection.find({\n    \"parent.ids\": record_id\n  }).count();\n  count = count + 1;\n  strcount = \"00\" + count;\n  count_code = strcount.substr(strcount.length - 2);\n  file_name = file_prefix + \"-\" + count_code;\n  return file_name;\n};\n\n_checkParameter = function(formData) {\n  if (!formData.fonds_name) {\n    return false;\n  }\n  return true;\n};\n\n_minxiInstanceData = function(formData, instance) {\n  var dateFormat, fieldNames, field_values, fondObj, old_page, orgObj, retentionObj, str_page_count;\n  if (!instance) {\n    return;\n  }\n  dateFormat = \"YYYY-MM-DD HH:mm:ss\";\n  formData.space = instance.space;\n  formData.owner = instance.submitter;\n  formData.created_by = instance.created_by;\n  formData.created = new Date();\n  field_values = InstanceManager.handlerInstanceByFieldMap(instance);\n  formData.applicant_name = field_values != null ? field_values.nigaorens : void 0;\n  formData.archive_dept = field_values != null ? field_values.guidangbumen : void 0;\n  formData.applicant_organization_name = (field_values != null ? field_values.nigaodanwei : void 0) || (field_values != null ? field_values.FILE_CODE_fzr : void 0);\n  formData.security_classification = field_values != null ? field_values.miji : void 0;\n  formData.document_type = field_values != null ? field_values.wenjianleixing : void 0;\n  if (field_values != null ? field_values.wenjianriqi : void 0) {\n    formData.document_date = new Date(field_values != null ? field_values.wenjianriqi : void 0);\n  }\n  formData.document_number = field_values != null ? field_values.wenjianzihao : void 0;\n  formData.author = field_values != null ? field_values.FILE_CODE_fzr : void 0;\n  formData.title = instance.name;\n  formData.prinpipal_receiver = field_values != null ? field_values.zhusong : void 0;\n  formData.year = field_values != null ? field_values.suoshuniandu : void 0;\n  if (field_values != null ? field_values.PAGE_COUNT : void 0) {\n    old_page = (field_values != null ? field_values.PAGE_COUNT.toString() : void 0) || \"00\";\n    str_page_count = old_page.substr(0, old_page.length - 1);\n    if (str_page_count) {\n      formData.total_number_of_pages = parseInt(str_page_count) + 1;\n    }\n  } else {\n    formData.total_number_of_pages = \"1\";\n  }\n  formData.fonds_constituting_unit_name = \"河北港口集团有限公司\";\n  formData.archival_category_code = \"WS\";\n  formData.aggregation_level = \"文件\";\n  formData.document_aggregation = \"单件\";\n  formData.language = \"汉语\";\n  formData.orignal_document_creation_way = \"原生\";\n  formData.document_status = \"电子归档\";\n  formData.physical_record_characteristics = \"PDF\";\n  formData.scanning_resolution = \"220dpi\";\n  formData.scanning_color_model = \"彩色\";\n  formData.image_compression_scheme = \"无损压缩\";\n  formData.current_location = \"\\\\\\\\192.168.0.151\\\\beta\\\\data\\\\oafile\";\n  formData.agent_type = \"部门\";\n  if (field_values != null ? field_values.FILING_DEPT : void 0) {\n    orgObj = Creator.Collections[\"archive_organization\"].findOne({\n      'name': field_values != null ? field_values.FILING_DEPT : void 0\n    });\n  }\n  if (orgObj) {\n    formData.organizational_structure = orgObj._id;\n    formData.organizational_structure_code = orgObj.code;\n  }\n  fondObj = Creator.Collections[\"archive_fonds\"].findOne({\n    'name': field_values != null ? field_values.FONDSID : void 0\n  });\n  if (fondObj) {\n    formData.fonds_name = fondObj != null ? fondObj._id : void 0;\n    formData.company = fondObj != null ? fondObj.company : void 0;\n    formData.fonds_code = fondObj != null ? fondObj.code : void 0;\n  }\n  retentionObj = Creator.Collections[\"archive_retention\"].findOne({\n    'name': field_values != null ? field_values.baocunqixian : void 0\n  });\n  if (retentionObj) {\n    formData.retention_peroid = retentionObj != null ? retentionObj._id : void 0;\n    formData.retention_peroid_code = retentionObj != null ? retentionObj.code : void 0;\n    if ((retentionObj != null ? retentionObj.years : void 0) >= 10) {\n      formData.produce_flag = \"在档\";\n    } else {\n      formData.produce_flag = \"暂存\";\n    }\n  }\n  formData.archive_date = moment(new Date()).format(dateFormat);\n  formData.external_id = instance._id;\n  fieldNames = _.keys(formData);\n  fieldNames.forEach(function(key) {\n    var fieldValue, ref;\n    fieldValue = formData[key];\n    if (_.isDate(fieldValue)) {\n      fieldValue = moment(fieldValue).format(dateFormat);\n    }\n    if (_.isObject(fieldValue)) {\n      fieldValue = fieldValue != null ? fieldValue.name : void 0;\n    }\n    if (_.isArray(fieldValue) && fieldValue.length > 0 && _.isObject(fieldValue)) {\n      fieldValue = fieldValue != null ? (ref = fieldValue.getProperty(\"name\")) != null ? ref.join(\",\") : void 0 : void 0;\n    }\n    if (_.isArray(fieldValue)) {\n      fieldValue = fieldValue != null ? fieldValue.join(\",\") : void 0;\n    }\n    if (!fieldValue) {\n      return fieldValue = '';\n    }\n  });\n  return formData;\n};\n\n_minxiRelatedArchives = function(instance, record_id) {\n  var mainRelatedObjs, related_archives;\n  if (instance != null ? instance.related_instances : void 0) {\n    related_archives = [];\n    instance.related_instances.forEach(function(related_instance) {\n      var relatedObj;\n      relatedObj = Creator.Collections[\"archive_wenshu\"].findOne({\n        'external_id': related_instance\n      }, {\n        fields: {\n          _id: 1\n        }\n      });\n      if (relatedObj) {\n        return related_archives.push(relatedObj != null ? relatedObj._id : void 0);\n      }\n    });\n    Creator.Collections[\"archive_wenshu\"].update({\n      _id: record_id\n    }, {\n      $set: {\n        related_archives: related_archives\n      }\n    });\n  }\n  mainRelatedObjs = Creator.Collections[\"instances\"].find({\n    'related_instances': instance._id\n  }, {\n    fields: {\n      _id: 1\n    }\n  }).fetch();\n  if (mainRelatedObjs.length > 0) {\n    return mainRelatedObjs.forEach(function(mainRelatedObj) {\n      mainRelatedObj = Creator.Collections[\"archive_wenshu\"].findOne({\n        'external_id': mainRelatedObj._id\n      });\n      if (mainRelatedObj) {\n        related_archives = (mainRelatedObj != null ? mainRelatedObj.related_archives : void 0) || [];\n        related_archives.push(record_id);\n        return Creator.Collections[\"archive_wenshu\"].update({\n          _id: mainRelatedObj._id\n        }, {\n          $set: {\n            related_archives: related_archives\n          }\n        });\n      }\n    });\n  }\n};\n\n_minxiAttachmentInfo = function(instance, record_id, file_prefix) {\n  var collection, currentFiles, object_name, parents, ref, ref1, spaceId;\n  object_name = typeof RecordsQHD !== \"undefined\" && RecordsQHD !== null ? (ref = RecordsQHD.settings_records_qhd) != null ? (ref1 = ref.to_archive) != null ? ref1.object_name : void 0 : void 0 : void 0;\n  parents = [];\n  spaceId = instance != null ? instance.space : void 0;\n  currentFiles = cfs.instances.find({\n    'metadata.instance': instance._id,\n    'metadata.current': true\n  }).fetch();\n  collection = Creator.Collections[\"cms_files\"];\n  return currentFiles.forEach(function(cf, index) {\n    var cmsFileId, e, file_name, historyFiles, instance_file_path, ref2, ref3, ref4, ref5, ref6, ref7, versions;\n    try {\n      instance_file_path = typeof RecordsQHD !== \"undefined\" && RecordsQHD !== null ? (ref2 = RecordsQHD.settings_records_qhd) != null ? ref2.instance_file_path : void 0 : void 0;\n      versions = [];\n      cmsFileId = collection._makeNewID();\n      file_name = setFileName(record_id, file_prefix) + \".\" + cf.extension();\n      collection.insert({\n        _id: cmsFileId,\n        versions: [],\n        created_by: cf.metadata.owner,\n        size: cf.size(),\n        owner: cf != null ? (ref3 = cf.metadata) != null ? ref3.owner : void 0 : void 0,\n        modified: cf != null ? (ref4 = cf.metadata) != null ? ref4.modified : void 0 : void 0,\n        main: cf != null ? (ref5 = cf.metadata) != null ? ref5.main : void 0 : void 0,\n        parent: {\n          o: object_name,\n          ids: [record_id]\n        },\n        modified_by: cf != null ? (ref6 = cf.metadata) != null ? ref6.modified_by : void 0 : void 0,\n        created: cf != null ? (ref7 = cf.metadata) != null ? ref7.created : void 0 : void 0,\n        name: file_name,\n        space: spaceId,\n        extention: cf.extension()\n      });\n      historyFiles = cfs.instances.find({\n        'metadata.instance': cf.metadata.instance,\n        'metadata.current': {\n          $ne: true\n        },\n        \"metadata.parent\": cf.metadata.parent\n      }, {\n        sort: {\n          uploadedAt: -1\n        }\n      }).fetch();\n      historyFiles.push(cf);\n      historyFiles.forEach(function(hf) {\n        var instance_file_key, newFile, ref8, ref9;\n        instance_file_key = path.join(instance_file_path, hf != null ? (ref8 = hf.copies) != null ? (ref9 = ref8.instances) != null ? ref9.key : void 0 : void 0 : void 0);\n        if (fs.existsSync(instance_file_key)) {\n          newFile = new FS.File();\n          return newFile.attachData(fs.createReadStream(instance_file_key), {\n            type: hf.original.type\n          }, function(err) {\n            var fileObj, metadata, ref10, ref11, ref12;\n            if (err) {\n              throw new Meteor.Error(err.error, err.reason);\n            }\n            newFile.name(hf.name());\n            newFile.size(hf.size());\n            metadata = {\n              owner: hf.metadata.owner,\n              owner_name: (ref10 = hf.metadata) != null ? ref10.owner_name : void 0,\n              space: spaceId,\n              record_id: record_id,\n              object_name: object_name,\n              parent: cmsFileId,\n              current: (ref11 = hf.metadata) != null ? ref11.current : void 0,\n              main: (ref12 = hf.metadata) != null ? ref12.main : void 0\n            };\n            newFile.metadata = metadata;\n            fileObj = cfs.files.insert(newFile);\n            if (fileObj) {\n              return versions.push(fileObj._id);\n            }\n          });\n        }\n      });\n      return collection.update(cmsFileId, {\n        $set: {\n          versions: versions\n        }\n      });\n    } catch (error1) {\n      e = error1;\n      return logger.error((\"正文附件下载失败：\" + cf._id + \". error: \") + e);\n    }\n  });\n};\n\n_minxiInstanceHtml = function(instance, record_id, file_prefix) {\n  var admin, apps_url, cmsFileId, collection, data_buffer, date_now, e, file_name, file_size, ins_id, instance_html_url, newFile, object_name, password, ref, ref1, ref2, ref3, ref4, ref5, ref6, result_html, space_id, user_id, username;\n  admin = typeof RecordsQHD !== \"undefined\" && RecordsQHD !== null ? (ref = RecordsQHD.settings_records_qhd) != null ? (ref1 = ref.to_archive) != null ? ref1.admin : void 0 : void 0 : void 0;\n  apps_url = typeof RecordsQHD !== \"undefined\" && RecordsQHD !== null ? (ref2 = RecordsQHD.settings_records_qhd) != null ? (ref3 = ref2.to_archive) != null ? ref3.apps_url : void 0 : void 0 : void 0;\n  space_id = instance != null ? instance.space : void 0;\n  ins_id = instance != null ? instance._id : void 0;\n  user_id = admin != null ? admin.userid : void 0;\n  username = admin != null ? admin.username : void 0;\n  password = admin != null ? admin.password : void 0;\n  instance_html_url = apps_url + '/workflow/space/' + space_id + '/view/readonly/' + ins_id + '?username=' + username + '&password=' + password + '&hide_traces=1';\n  result_html = (ref4 = HTTP.call('GET', instance_html_url)) != null ? ref4.content : void 0;\n  if (result_html) {\n    try {\n      object_name = typeof RecordsQHD !== \"undefined\" && RecordsQHD !== null ? (ref5 = RecordsQHD.settings_records_qhd) != null ? (ref6 = ref5.to_archive) != null ? ref6.object_name : void 0 : void 0 : void 0;\n      collection = Creator.Collections[\"cms_files\"];\n      cmsFileId = collection._makeNewID();\n      date_now = new Date();\n      data_buffer = new Buffer(result_html.toString());\n      file_name = setFileName(record_id, file_prefix) + '.html';\n      file_size = data_buffer != null ? data_buffer.length : void 0;\n      collection.insert({\n        _id: cmsFileId,\n        versions: [],\n        size: file_size,\n        owner: user_id,\n        instance_html: true,\n        parent: {\n          o: object_name,\n          ids: [record_id]\n        },\n        modified: date_now,\n        modified_by: user_id,\n        created: date_now,\n        created_by: user_id,\n        name: file_name,\n        space: space_id,\n        extention: 'html'\n      }, function(error, result) {\n        if (error) {\n          throw new Meteor.Error(error);\n        }\n      });\n      newFile = new FS.File();\n      return newFile.attachData(data_buffer, {\n        type: 'text/html'\n      }, function(err) {\n        var fileObj, metadata, versions;\n        if (err) {\n          throw new Meteor.Error(err.error, err.reason);\n        }\n        newFile.name(file_name);\n        newFile.size(file_size);\n        metadata = {\n          owner: user_id,\n          owner_name: \"系统生成\",\n          space: space_id,\n          record_id: record_id,\n          object_name: object_name,\n          parent: cmsFileId,\n          instance_html: true\n        };\n        newFile.metadata = metadata;\n        fileObj = cfs.files.insert(newFile);\n        if (fileObj) {\n          versions = [];\n          versions.push(fileObj != null ? fileObj._id : void 0);\n          return collection.update(cmsFileId, {\n            $set: {\n              versions: versions\n            }\n          });\n        }\n      });\n    } catch (error1) {\n      e = error1;\n      return logger.error((\"存储HTML失败：\" + ins_id + \". error: \") + e);\n    }\n  } else {\n    return logger.error((\"表单生成HTML失败：\" + ins_id + \". error: \") + e);\n  }\n};\n\n_minxiInstanceTraces = function(auditList, instance, record_id) {\n  var autoAudit, collection, getApproveStatusText, traces;\n  collection = Creator.Collections[\"archive_audit\"];\n  getApproveStatusText = function(approveJudge) {\n    var approveStatusText, locale;\n    locale = \"zh-CN\";\n    approveStatusText = void 0;\n    switch (approveJudge) {\n      case 'approved':\n        approveStatusText = \"已核准\";\n        break;\n      case 'rejected':\n        approveStatusText = \"已驳回\";\n        break;\n      case 'terminated':\n        approveStatusText = \"已取消\";\n        break;\n      case 'reassigned':\n        approveStatusText = \"转签核\";\n        break;\n      case 'relocated':\n        approveStatusText = \"重定位\";\n        break;\n      case 'retrieved':\n        approveStatusText = \"已取回\";\n        break;\n      case 'returned':\n        approveStatusText = \"已退回\";\n        break;\n      case 'readed':\n        approveStatusText = \"已阅\";\n        break;\n      default:\n        approveStatusText = '';\n        break;\n    }\n    return approveStatusText;\n  };\n  traces = instance != null ? instance.traces : void 0;\n  traces.forEach(function(trace) {\n    var approves;\n    approves = (trace != null ? trace.approves : void 0) || [];\n    return approves.forEach(function(approve) {\n      var auditObj;\n      auditObj = {};\n      auditObj.business_status = \"计划任务\";\n      auditObj.business_activity = trace != null ? trace.name : void 0;\n      auditObj.action_time = approve != null ? approve.start_date : void 0;\n      auditObj.action_user = approve != null ? approve.user : void 0;\n      auditObj.action_description = getApproveStatusText(approve != null ? approve.judge : void 0);\n      auditObj.action_administrative_records_id = record_id;\n      auditObj.instace_id = instance._id;\n      auditObj.space = instance.space;\n      auditObj.owner = approve != null ? approve.user : void 0;\n      return collection.direct.insert(auditObj);\n    });\n  });\n  autoAudit = {\n    business_status: \"计划任务\",\n    business_activity: \"自动归档\",\n    action_time: new Date,\n    action_user: \"OA\",\n    action_description: \"\",\n    action_administrative_records_id: record_id,\n    instace_id: instance._id,\n    space: instance.space,\n    owner: \"\"\n  };\n  collection.direct.insert(autoAudit);\n};\n\nInstancesToArchive = function(spaces, contract_flows, ins_ids) {\n  this.spaces = spaces;\n  this.contract_flows = contract_flows;\n  this.ins_ids = ins_ids;\n};\n\nInstancesToArchive.success = function(instance) {\n  return Creator.Collections[\"instances\"].direct.update({\n    _id: instance._id\n  }, {\n    $set: {\n      is_recorded_creator: true\n    }\n  });\n};\n\nInstancesToArchive.failed = function(instance, error) {\n  return logger.error(\"failed, name is \" + instance.name + \", id is \" + instance._id + \". error: \", error);\n};\n\nInstancesToArchive.prototype.getNonContractInstances = function() {\n  var query;\n  query = {\n    space: {\n      $in: this.spaces\n    },\n    flow: {\n      $nin: this.contract_flows\n    },\n    $or: [\n      {\n        is_recorded_creator: false\n      }, {\n        is_recorded_creator: {\n          $exists: false\n        }\n      }\n    ],\n    is_deleted: false,\n    state: \"completed\",\n    \"values.record_need\": \"true\"\n  };\n  if (this.ins_ids) {\n    query._id = {\n      $in: this.ins_ids\n    };\n  }\n  return Creator.Collections[\"instances\"].find(query, {\n    fields: {\n      _id: 1\n    }\n  }).fetch();\n};\n\nInstancesToArchive.syncNonContractInstance = function(instance, callback) {\n  var auditList, collection, e, file_prefix, formData, record_id;\n  formData = {};\n  auditList = [];\n  _minxiInstanceData(formData, instance);\n  if (_checkParameter(formData)) {\n    logger.debug(\"_sendContractInstance: \" + instance._id);\n    try {\n      file_prefix = (formData != null ? formData.fonds_code : void 0) + \"-\" + (formData != null ? formData.archival_category_code : void 0) + \"·\" + (formData != null ? formData.year : void 0) + \"-\" + (formData != null ? formData.retention_peroid_code : void 0);\n      collection = Creator.Collections[\"archive_wenshu\"];\n      collection.remove({\n        'external_id': instance._id\n      });\n      record_id = collection.insert(formData);\n      _minxiInstanceHtml(instance, record_id, file_prefix);\n      _minxiAttachmentInfo(instance, record_id, file_prefix);\n      _minxiRelatedArchives(instance, record_id);\n      _minxiInstanceTraces(auditList, instance, record_id);\n      return InstancesToArchive.success(instance);\n    } catch (error1) {\n      e = error1;\n      logger.error(e);\n      return console.log(instance._id + \"表单归档失败，\", e);\n    }\n  } else {\n    return InstancesToArchive.failed(instance, \"立档单位未找到\");\n  }\n};\n\nthis.Test = {};\n\nTest.run = function(ins_id) {\n  var instance;\n  instance = Creator.Collections[\"instances\"].findOne({\n    _id: ins_id\n  });\n  if (instance) {\n    return InstancesToArchive.syncNonContractInstance(instance);\n  }\n};\n\nInstancesToArchive.prototype.syncNonContractInstances = function() {\n  var instances, that;\n  console.time(\"syncNonContractInstances\");\n  instances = this.getNonContractInstances();\n  that = this;\n  instances.forEach(function(mini_ins) {\n    var e, instance;\n    instance = Creator.Collections[\"instances\"].findOne({\n      _id: mini_ins._id\n    });\n    if (instance) {\n      try {\n        return InstancesToArchive.syncNonContractInstance(instance);\n      } catch (error1) {\n        e = error1;\n        logger.error(e);\n        return console.log(e);\n      }\n    }\n  });\n  return console.timeEnd(\"syncNonContractInstances\");\n};\n","schedule = Npm.require('node-schedule')\n\nRecordsQHD = {}\n\n#\t*    *    *    *    *    *\n#\t┬    ┬    ┬    ┬    ┬    ┬\n#\t│    │    │    │    │    |\n#\t│    │    │    │    │    └ day of week (0 - 7) (0 or 7 is Sun)\n#\t│    │    │    │    └───── month (1 - 12)\n#\t│    │    │    └────────── day of month (1 - 31)\n#\t│    │    └─────────────── hour (0 - 23)\n#\t│    └──────────────────── minute (0 - 59)\n#\t└───────────────────────── second (0 - 59, OPTIONAL)\n\nlogger = new Logger 'Records_QHD'\n\nRecordsQHD.settings_records_qhd = Meteor.settings?.records_qhd\n\nRecordsQHD.scheduleJobMaps = {}\n\nRecordsQHD.run = ()->\n\ttry\n\t\tRecordsQHD.instanceToArchive()\n\tcatch  e\n\t\tlogger.error \"RecordsQHD.instanceToArchive\", e\n\n# RecordsQHD.instanceToArchive()\n# RecordsQHD.instanceToArchive([\"jXib7XrPu6FqWSKXH\"])\nRecordsQHD.instanceToArchive = (ins_ids)->\n\n\tspaces = RecordsQHD?.settings_records_qhd?.spaces\n\n\tto_archive_sett = RecordsQHD?.settings_records_qhd?.to_archive\n\n\t# 获取所有的合同类申请流程\n\tflows = to_archive_sett?.contract_instances?.flows\n\n\tif !spaces\n\t\tlogger.error \"缺少settings配置: records-qhd.spaces\"\n\t\treturn\n\n\tinstancesToArchive = new InstancesToArchive(spaces, flows, ins_ids)\n\n\tinstancesToArchive.syncNonContractInstances()\n\nRecordsQHD.startScheduleJob = (name, recurrenceRule, fun) ->\n\n\tif !recurrenceRule\n\t\tlogger.error \"Miss recurrenceRule\"\n\t\treturn\n\tif !_.isString(recurrenceRule)\n\t\tlogger.error \"RecurrenceRule is not String. https://github.com/node-schedule/node-schedule\"\n\t\treturn\n\n\tif !fun\n\t\tlogger.error \"Miss function\"\n\telse if !_.isFunction(fun)\n\t\tlogger.error \"#{fun} is not function\"\n\telse\n\t\tlogger.info \"Add scheduleJobMaps: #{name}\"\n\t\tRecordsQHD.scheduleJobMaps[name] = schedule.scheduleJob recurrenceRule, fun\n\nif RecordsQHD.settings_records_qhd?.recurrenceRule\n\tRecordsQHD.startScheduleJob \"RecordsQHD.instanceToArchive\", RecordsQHD.settings_records_qhd?.recurrenceRule, Meteor.bindEnvironment(RecordsQHD.run)\n","var logger, ref, ref1, ref2, schedule;            \n\nschedule = Npm.require('node-schedule');\n\nRecordsQHD = {};\n\nlogger = new Logger('Records_QHD');\n\nRecordsQHD.settings_records_qhd = (ref = Meteor.settings) != null ? ref.records_qhd : void 0;\n\nRecordsQHD.scheduleJobMaps = {};\n\nRecordsQHD.run = function() {\n  var e;\n  try {\n    return RecordsQHD.instanceToArchive();\n  } catch (error) {\n    e = error;\n    return logger.error(\"RecordsQHD.instanceToArchive\", e);\n  }\n};\n\nRecordsQHD.instanceToArchive = function(ins_ids) {\n  var flows, instancesToArchive, ref1, ref2, ref3, spaces, to_archive_sett;\n  spaces = RecordsQHD != null ? (ref1 = RecordsQHD.settings_records_qhd) != null ? ref1.spaces : void 0 : void 0;\n  to_archive_sett = RecordsQHD != null ? (ref2 = RecordsQHD.settings_records_qhd) != null ? ref2.to_archive : void 0 : void 0;\n  flows = to_archive_sett != null ? (ref3 = to_archive_sett.contract_instances) != null ? ref3.flows : void 0 : void 0;\n  if (!spaces) {\n    logger.error(\"缺少settings配置: records-qhd.spaces\");\n    return;\n  }\n  instancesToArchive = new InstancesToArchive(spaces, flows, ins_ids);\n  return instancesToArchive.syncNonContractInstances();\n};\n\nRecordsQHD.startScheduleJob = function(name, recurrenceRule, fun) {\n  if (!recurrenceRule) {\n    logger.error(\"Miss recurrenceRule\");\n    return;\n  }\n  if (!_.isString(recurrenceRule)) {\n    logger.error(\"RecurrenceRule is not String. https://github.com/node-schedule/node-schedule\");\n    return;\n  }\n  if (!fun) {\n    return logger.error(\"Miss function\");\n  } else if (!_.isFunction(fun)) {\n    return logger.error(fun + \" is not function\");\n  } else {\n    logger.info(\"Add scheduleJobMaps: \" + name);\n    return RecordsQHD.scheduleJobMaps[name] = schedule.scheduleJob(recurrenceRule, fun);\n  }\n};\n\nif ((ref1 = RecordsQHD.settings_records_qhd) != null ? ref1.recurrenceRule : void 0) {\n  RecordsQHD.startScheduleJob(\"RecordsQHD.instanceToArchive\", (ref2 = RecordsQHD.settings_records_qhd) != null ? ref2.recurrenceRule : void 0, Meteor.bindEnvironment(RecordsQHD.run));\n}\n","Meteor.methods\n\tstart_instanceToArchive: (sDate, fDate) ->\n\t\ttry\n\t\t\tif sDate and fDate\n\t\t\t\tins_ids = []\n\t\t\t\t# 获取某时间段需要同步的申请单\n\t\t\t\tstart_date = new Date(sDate)\n\t\t\t\tend_date = new Date(fDate)\n\n\t\t\t\tinstances = Creator.Collections[\"instances\"].find({\n\t\t\t\t\t\"submit_date\":{$gt:start_date, $lt:end_date},\n\t\t\t\t\t$or: [\n\t\t\t\t\t\t{is_recorded_creator: false},\n\t\t\t\t\t\t{is_recorded_creator: {$exists: false}}\n\t\t\t\t\t],\n\t\t\t\t\t\"values.record_need\":\"true\", \n\t\t\t\t\tis_deleted: false, \n\t\t\t\t\tstate: \"completed\"\n\t\t\t\t},{fields: {_id:1}}).fetch()\n\n\t\t\t\tif (instances)\n\t\t\t\t\tinstances.forEach (ins)->\n\t\t\t\t\t\tins_ids.push(ins._id)\n\t\t\t\t\n\t\t\t\tRecordsQHD.instanceToArchive(ins_ids)\n\t\t\t\t\n\t\t\t\treturn result\n\t\tcatch e\n\t\t\terror = e\n\t\t\treturn error\n\t\t","Meteor.methods({\n  start_instanceToArchive: function(sDate, fDate) {\n    var e, end_date, error, ins_ids, instances, start_date;\n    try {\n      if (sDate && fDate) {\n        ins_ids = [];\n        start_date = new Date(sDate);\n        end_date = new Date(fDate);\n        instances = Creator.Collections[\"instances\"].find({\n          \"submit_date\": {\n            $gt: start_date,\n            $lt: end_date\n          },\n          $or: [\n            {\n              is_recorded_creator: false\n            }, {\n              is_recorded_creator: {\n                $exists: false\n              }\n            }\n          ],\n          \"values.record_need\": \"true\",\n          is_deleted: false,\n          state: \"completed\"\n        }, {\n          fields: {\n            _id: 1\n          }\n        }).fetch();\n        if (instances) {\n          instances.forEach(function(ins) {\n            return ins_ids.push(ins._id);\n          });\n        }\n        RecordsQHD.instanceToArchive(ins_ids);\n        return result;\n      }\n    } catch (error1) {\n      e = error1;\n      error = e;\n      return error;\n    }\n  }\n});\n","Meteor.methods\n\tsync_zhusong: (spaces, record_ids) ->\n\t\ttry\n\t\t\tif spaces and record_ids\n\t\t\t\tquery = {\n\t\t\t\t\tspace: {$in: spaces},\n\t\t\t\t\texternal_id: {$exists: true}\n\t\t\t\t}\n\t\t\t\tif record_ids?.length > 0\n\t\t\t\t\tquery._id = { $in: record_ids }\n\t\t\t\t\n\t\t\t\trecord_objs = Creator.Collections[\"archive_wenshu\"].find(query, {fields: {_id: 1,external_id: 1}}).fetch()\n\t\t\t\trecord_objs.forEach (record_obj)->\n\t\t\t\t\tinstance = Creator.Collections[\"instances\"].findOne({_id: record_obj.external_id}, {fields: {values: 1}})\n\t\t\t\t\tif instance\n\t\t\t\t\t\tzhusong = instance?.values[\"主送\"] || \"\"\n\t\t\t\t\t\tif instance?.values[\"页数\"]\n\t\t\t\t\t\t\tyeshu = parseInt(instance?.values[\"页数\"])+1\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tyeshu = 1\n\t\t\t\t\t\tCreator.Collections[\"archive_wenshu\"].update(\n\t\t\t\t\t\t\t{_id: record_obj._id}, {\n\t\t\t\t\t\t\t$set: {\n\t\t\t\t\t\t\t\tprinpipal_receiver: zhusong,\n\t\t\t\t\t\t\t\ttotal_number_of_pages: yeshu\n\t\t\t\t\t\t\t\t}})\n\t\t\t\treturn 'success'\n\t\t\telse\n\t\t\t\treturn 'No spaces and record_ids'\n\t\tcatch e\n\t\t\terror = e\n\t\t\treturn error\n\t\n\tsyncEcode: (spaces, year) ->\n\t\ttry\n\t\t\tif spaces and year\n\t\t\t\t# 查找当年度不存在电子文件号的文件\n\t\t\t\tquery = {\n\t\t\t\t\tspace: {$in: spaces},\n\t\t\t\t\tyear: year\n\t\t\t\t}\n\t\t\t\tconsole.log \"query\",query\n\t\t\t\trecord_objs = Creator.Collections[\"archive_wenshu\"].find(query,\n\t\t\t\t\t{fields: {_id: 1, year: 1, archival_category_code: 1,fonds_name: 1}}).fetch()\n\t\t\t\tconsole.log \"record_objs\",record_objs?.length\n\t\t\t\trecord_objs.forEach (record)->\n\t\t\t\t\t# 更新电子文件号\n\t\t\t\t\tif record?.fonds_name and record?.archival_category_code and record?.year and record?._id\n\t\t\t\t\t\tfonds_name_code = Creator.Collections[\"archive_fonds\"].findOne(record.fonds_name,{fields:{code:1}})?.code\n\t\t\t\t\t\tyear = record.year\n\t\t\t\t\t\tid = record._id\n\t\t\t\t\t\telectronic_record_code = fonds_name_code + \"WS\" + year + id\n\t\t\t\t\t\tconsole.log \"record._id\",record._id\n\t\t\t\t\t\tCreator.Collections[\"archive_wenshu\"].direct.update(record._id,\n\t\t\t\t\t\t\t{$set:{electronic_record_code:electronic_record_code}})\n\n\t\t\t\treturn 'success'\n\t\t\telse\n\t\t\t\treturn 'No spaces and record_ids'\n\t\tcatch e\n\t\t\terror = e\n\t\t\treturn error\n\t\n\tsyncFond: (spaces, record_ids) ->\n\t\ttry\n\t\t\tif spaces and record_ids\n\t\t\t\tquery = {\n\t\t\t\t\tspace: {$in: spaces}\n\t\t\t\t}\n\t\t\t\tif record_ids?.length > 0\n\t\t\t\t\tquery._id = { $in: record_ids }\n\t\t\t\t\n\t\t\t\trecord_objs = Creator.Collections[\"archive_wenshu\"].find(query, {fields: {_id: 1,external_id: 1}}).fetch()\n\t\t\t\trecord_objs.forEach (record_obj)->\n\t\t\t\t\tinstance = Creator.Collections[\"instances\"].findOne({_id: record_obj.external_id}, {fields: {values: 1}})\n\t\t\t\t\tif instance\n\t\t\t\t\t\t# 查找全宗\n\t\t\t\t\t\tconsole.log \"instance\"\n\t\t\t\t\t\t# Creator.Collections[\"archive_wenshu\"].update(\n\t\t\t\t\t\t# \t{_id: record_obj._id}, {\n\t\t\t\t\t\t# \t$set: {\n\t\t\t\t\t\t# \t\tprinpipal_receiver: zhusong,\n\t\t\t\t\t\t# \t\ttotal_number_of_pages: yeshu\n\t\t\t\t\t\t# \t\t}})\n\t\t\t\treturn 'success'\n\t\t\telse\n\t\t\t\treturn 'No spaces and record_ids'\n\t\tcatch e\n\t\t\terror = e\n\t\t\treturn error\n","Meteor.methods({\n  sync_zhusong: function(spaces, record_ids) {\n    var e, error, query, record_objs;\n    try {\n      if (spaces && record_ids) {\n        query = {\n          space: {\n            $in: spaces\n          },\n          external_id: {\n            $exists: true\n          }\n        };\n        if ((record_ids != null ? record_ids.length : void 0) > 0) {\n          query._id = {\n            $in: record_ids\n          };\n        }\n        record_objs = Creator.Collections[\"archive_wenshu\"].find(query, {\n          fields: {\n            _id: 1,\n            external_id: 1\n          }\n        }).fetch();\n        record_objs.forEach(function(record_obj) {\n          var instance, yeshu, zhusong;\n          instance = Creator.Collections[\"instances\"].findOne({\n            _id: record_obj.external_id\n          }, {\n            fields: {\n              values: 1\n            }\n          });\n          if (instance) {\n            zhusong = (instance != null ? instance.values[\"主送\"] : void 0) || \"\";\n            if (instance != null ? instance.values[\"页数\"] : void 0) {\n              yeshu = parseInt(instance != null ? instance.values[\"页数\"] : void 0) + 1;\n            } else {\n              yeshu = 1;\n            }\n            return Creator.Collections[\"archive_wenshu\"].update({\n              _id: record_obj._id\n            }, {\n              $set: {\n                prinpipal_receiver: zhusong,\n                total_number_of_pages: yeshu\n              }\n            });\n          }\n        });\n        return 'success';\n      } else {\n        return 'No spaces and record_ids';\n      }\n    } catch (error1) {\n      e = error1;\n      error = e;\n      return error;\n    }\n  },\n  syncEcode: function(spaces, year) {\n    var e, error, query, record_objs;\n    try {\n      if (spaces && year) {\n        query = {\n          space: {\n            $in: spaces\n          },\n          year: year\n        };\n        console.log(\"query\", query);\n        record_objs = Creator.Collections[\"archive_wenshu\"].find(query, {\n          fields: {\n            _id: 1,\n            year: 1,\n            archival_category_code: 1,\n            fonds_name: 1\n          }\n        }).fetch();\n        console.log(\"record_objs\", record_objs != null ? record_objs.length : void 0);\n        record_objs.forEach(function(record) {\n          var electronic_record_code, fonds_name_code, id, ref;\n          if ((record != null ? record.fonds_name : void 0) && (record != null ? record.archival_category_code : void 0) && (record != null ? record.year : void 0) && (record != null ? record._id : void 0)) {\n            fonds_name_code = (ref = Creator.Collections[\"archive_fonds\"].findOne(record.fonds_name, {\n              fields: {\n                code: 1\n              }\n            })) != null ? ref.code : void 0;\n            year = record.year;\n            id = record._id;\n            electronic_record_code = fonds_name_code + \"WS\" + year + id;\n            console.log(\"record._id\", record._id);\n            return Creator.Collections[\"archive_wenshu\"].direct.update(record._id, {\n              $set: {\n                electronic_record_code: electronic_record_code\n              }\n            });\n          }\n        });\n        return 'success';\n      } else {\n        return 'No spaces and record_ids';\n      }\n    } catch (error1) {\n      e = error1;\n      error = e;\n      return error;\n    }\n  },\n  syncFond: function(spaces, record_ids) {\n    var e, error, query, record_objs;\n    try {\n      if (spaces && record_ids) {\n        query = {\n          space: {\n            $in: spaces\n          }\n        };\n        if ((record_ids != null ? record_ids.length : void 0) > 0) {\n          query._id = {\n            $in: record_ids\n          };\n        }\n        record_objs = Creator.Collections[\"archive_wenshu\"].find(query, {\n          fields: {\n            _id: 1,\n            external_id: 1\n          }\n        }).fetch();\n        record_objs.forEach(function(record_obj) {\n          var instance;\n          instance = Creator.Collections[\"instances\"].findOne({\n            _id: record_obj.external_id\n          }, {\n            fields: {\n              values: 1\n            }\n          });\n          if (instance) {\n            return console.log(\"instance\");\n          }\n        });\n        return 'success';\n      } else {\n        return 'No spaces and record_ids';\n      }\n    } catch (error1) {\n      e = error1;\n      error = e;\n      return error;\n    }\n  }\n});\n"]}