name: permission_set
label: Permission Set
icon: groups
hidden: true
enable_inline_edit: false
fields:
  name:
    label: Name
    type: text
    searchable: true
    index: true
    required: true
  label:
    label: Label
    type: text
    searchable: true
    index: true
    is_name: true
    required: true
  type:
    label: Type
    type: select
    firstOption: false
    options: Profile:profile,Permission set:permission_set
    defaultValue: permission_set
  license:
    label: License
    type: lookup
    optionsFunction: !!js/function 
      function(){
        return Steedos.getLicenseOptions();
      }
    showIcon: false
  assigned_apps:
    label: Assigned Apps
    type: lookup
    multiple: true
    optionsFunction: !<tag:yaml.org,2002:js/function> |-
      function () {
              var _options;

              _options = [];

              _.forEach(Creator.Apps, function (o, k) {
                return _options.push({
                  label: o.label || o.name,
                  value: k,
                  icon: o.icon_slds
                });
              });

              return _options;
            }
    name: assigned_apps
    filterable: true
  users:
    label: Users
    type: lookup
    reference_to: users
    multiple: true
    is_wide: true
    filterable: true
    depend_on:
      - type
    inlineHelpText: When the type is a profile, no user needs to be selected
  is_system:
    type: boolean
    label: System
    omit: true
    hidden: true
    disabled: true
list_views:
  all:
    label: All
    filter_scope: space
    columns:
      - label
      - name
      - users
      - type
      - license
      - is_system
  permission_set:
    label: Permission Set
    filter_scope: space
    filters:
      - [["type", "=", "permission_set"]]
    columns:
      - label
      - name
      - users
      - type
      - license
      - is_system
  profile:
    label: Profile
    filter_scope: space
    filters:
      - [["type", "=", "profile"]]
    columns:
      - label
      - name
      - type
      - license
      - is_system
actions:
  customize:
    label: Customize
    on: record_only
# relatedList:
#   - objectName: permission_objects
#     filters: !!js/function | 
#       function(parentRecord) {
#         return [["is_system","=",true], ["permission_set_id","=",parentRecord._id]]
#       }
#   - objectName: permission_objects
#     filters: !!js/function | 
#       function(parentRecord) {
#         return [["is_system","<>",true], ["permission_set_id","=",parentRecord._id]]
#       }
permission_set:
  user:
    allowCreate: false
    allowDelete: false
    allowEdit: false
    allowRead: true
    modifyAllRecords: false
    viewAllRecords: false
  admin:
    allowCreate: true
    allowDelete: true
    allowEdit: true
    allowRead: true
    modifyAllRecords: true
    viewAllRecords: true
  customer:
    allowCreate: false
    allowDelete: false
    allowEdit: false
    allowRead: true
    modifyAllRecords: false
    viewAllRecords: false
form:
  initialValues: !!js/function |
    function(){
      var listView = Creator.getListView();
      if(listView && listView.name === 'profile'){
        return {type: 'profile'}
      }
      return {}
    }
  beforeEdit: !!js/function |
    function(){
      Steedos.PermissionSetManager.changeSchema(this.doc, this.schema);
    }
  afterEdit: !!js/function |
    function(){
      Steedos.PermissionSetManager.changeSchema(this.doc, this.schema);
    }
  beforeView: !!js/function |
    function(){
      Steedos.PermissionSetManager.changeSchema(this.doc, this.schema);
    }
  beforeInsert: !!js/function |
    function(){
      if(this.doc && _.isString(this.doc.users)){
        this.doc.users = this.doc.users.split(',');
      }
    }
  beforeUpdate: !!js/function |
    function(){
      if(this.doc && _.isString(this.doc.users)){
        this.doc.users = this.doc.users.split(',');
      }
    }