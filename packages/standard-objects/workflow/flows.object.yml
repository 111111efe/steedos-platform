name: flows
icon: timesheet
label: 流程
enable_files: true
fields:
  name:
    type: text
    label: 流程名
    required: true
    searchable: true
    readonly: true
    name: name
  form:
    label: 流程表单
    type: lookup
    reference_to: forms
    readonly: true
    name: form
    filterable: true
  category:
    label: 分类
    type: lookup
    reference_to: categories
    name: category
    filterable: true
  state:
    label: 流程状态
    type: select
    options:
      - label: 启用
        value: enabled
      - label: 停用
        value: disabled
    readonly: true
    name: state
    filterable: true
  is_valid:
    label: 流程有效
    type: boolean
    readonly: true
    name: is_valid
  current_no:
    label: 当前序号
    type: number
    readonly: true
    name: current_no
  description:
    label: 备注
    type: textarea
    is_wide: true
    name: description
  help_text:
    label: 帮助文本
    type: textarea
    is_wide: true
    name: help_text
  company_id:
    label: 分部
  created_by:
    label: 创建人
  modified_by:
    label: 修改人
  current:
    label: 步骤
    type: object
    is_wide: true
    blackbox: true
    name: current
  current.modified:
    label: 修改时间
    type: datetime
    readonly: true
    omit: true
    hidden: true
    name: current.modified
  current.modified_by:
    label: 修改人
    type: lookup
    reference_to: users
    readonly: true
    omit: true
    hidden: true
    name: current.modified_by
    filterable: true
  current.created:
    label: 创建时间
    type: datetime
    readonly: true
    omit: true
    hidden: true
    name: current.created
  current.created_by:
    label: 创建人
    type: lookup
    reference_to: users
    readonly: true
    omit: true
    hidden: true
    name: current.created_by
    filterable: true
  current.steps:
    label: 步骤
    type: grid
    readonly: true
    is_wide: true
    name: current.steps
  current.steps.$._id:
    type: text
    omit: true
    readonly: true
    hidden: true
    name: current.steps.$._id
  current.steps.$.name:
    label: 名称
    readonly: true
    type: text
    name: current.steps.$.name
  current.steps.$.disableCC:
    label: 禁止传阅
    type: boolean
    readonly: true
    name: current.steps.$.disableCC
  current.steps.$.allowDistribute:
    label: 允许分发
    type: boolean
    readonly: true
    name: current.steps.$.allowDistribute
  current.steps.$.can_edit_main_attach:
    label: 允许修改正文
    type: boolean
    readonly: true
    name: current.steps.$.can_edit_main_attach
  current.steps.$.can_edit_normal_attach:
    label: 允许修改附件
    type: boolean
    readonly: true
    name: current.steps.$.can_edit_normal_attach
  current.steps.$.distribute_optional_flows:
    label: 此步骤分发时可选的流程范围
    type: lookup
    reference_to: flows
    multiple: true
    omit: true
    hidden: true
    name: current.steps.$.distribute_optional_flows
    filterable: true
  current.steps.$.cc_must_finished:
    label: 必须等待传阅完成
    type: boolean
    readonly: true
    name: current.steps.$.cc_must_finished
  current.steps.$.cc_alert:
    label: 弹出传阅提醒
    type: boolean
    readonly: true
    name: current.steps.$.cc_alert
  current.steps.$.allowBatch:
    label: 批量审批
    type: boolean
    readonly: true
    name: current.steps.$.allowBatch
  current.steps.$.oneClickApproval:
    label: 一键核准
    type: boolean
    readonly: true
    name: current.steps.$.oneClickApproval
  current.steps.$.oneClickRejection:
    label: 一键驳回
    type: boolean
    readonly: true
    name: current.steps.$.oneClickRejection
  perms:
    label: 权限
    type: object
    is_wide: true
    blackbox: true
    name: perms
  perms.users_can_add:
    label: '授权用户: 新建申请单'
    type: lookup
    reference_to: users
    multiple: true
    is_wide: true
    name: perms.users_can_add
    filterable: true
  perms.orgs_can_add:
    label: '授权部门: 新建申请单'
    type: lookup
    reference_to: organizations
    multiple: true
    is_wide: true
    name: perms.orgs_can_add
    filterable: true
  perms.users_can_monitor:
    label: '授权用户: 查看所有申请单'
    type: lookup
    reference_to: users
    multiple: true
    is_wide: true
    name: perms.users_can_monitor
    filterable: true
  perms.orgs_can_monitor:
    label: '授权部门: 查看所有申请单'
    type: lookup
    reference_to: organizations
    multiple: true
    is_wide: true
    name: perms.orgs_can_monitor
    filterable: true
  perms.users_can_admin:
    label: '授权用户: 查看所有申请单，并能执行重定位、转签核、删除操作'
    type: lookup
    reference_to: users
    multiple: true
    is_wide: true
    name: perms.users_can_admin
    filterable: true
  perms.orgs_can_admin:
    label: '授权部门: 查看所有申请单，并能执行重定位、转签核、删除操作'
    type: lookup
    reference_to: organizations
    multiple: true
    is_wide: true
    name: perms.orgs_can_admin
    filterable: true
  app:
    label: 所属应用
    type: text
    omit: true
    hidden: true
    name: app
  historys:
    label: 历史版本
    blackbox: true
    omit: true
    hidden: true
    name: historys
  instance_template:
    label: 表单模板
    type: code
    language: handlebars
    is_wide: true
    group: 模板
    name: instance_template
  print_template:
    label: 打印模板
    type: code
    language: handlebars
    is_wide: true
    group: 模板
    name: print_template
  field_map:
    label: 映射关系
    type: textarea
    is_wide: true
    group: 归档
    name: field_map
  events:
    label: 相关事件
    type: textarea
    is_wide: true
    group: 脚本
    name: events
  distribute_optional_users:
    type: lookup
    label: 流程被分发时分发对象选择范围
    reference_to: users
    multiple: true
    is_wide: true
    group: 分发
    blackbox: true
    omit: true
    hidden: true
    name: distribute_optional_users
    filterable: true
  distribute_to_self:
    label: 分发给自己
    type: boolean
    group: 分发
    omit: true
    hidden: true
    name: distribute_to_self
  name_formula:
    label: 标题公式
    type: text
    group: 高级
    name: name_formula
    omit: true
    hidden: true
  code_formula:
    label: 系统公式
    type: text
    group: 高级
    name: code_formula
    omit: true
    hidden: true
  auto_remind:
    label: 自动催办
    type: boolean
    group: 高级
    name: auto_remind
  sort_no:
    type: number
    label: 排序号
    group: 高级
    sortable: true
    name: sort_no
  timeout_auto_submit:
    label: 超时自动流转
    type: boolean
    group: 高级
    name: timeout_auto_submit
  allow_select_step:
    label: 申请人指定步骤、审批人
    inlineHelpText: 允许申请人提交申请单时指定流转步骤及步骤处理人, 需要通过流程设计器修改步骤上的属性.
    type: boolean
    group: 高级
list_views:
  all:
    label: 所有
    filter_scope: space
    columns:
      - name
      - state
      - category
      - sort_no
      - modified
    filter_fields:
      - state
      - category
      - company_id
    sort:
      - - modified
        - desc
actions:
  standard_new:
    label: 新建
    visible: !<tag:yaml.org,2002:js/function> |-
      function () {
              var permissions;
              permissions = Creator.getPermissions();

              if (permissions) {
                return permissions["allowCreate"];
              }
            }
    'on': list
    todo: !<tag:yaml.org,2002:js/function> |-
      function (object_name, record_id, fields) {
              return Modal.show('new_flow_modal');
            }
  standard_new_by_template:
    label: 从模板新建
    visible: !<tag:yaml.org,2002:js/function> |-
      function () {
              var permissions;
              permissions = Creator.getPermissions();
              if (Creator.getTemplateSpaceId() && permissions) {
                return permissions["allowCreate"];
              }
            }
    'on': list
    todo: !<tag:yaml.org,2002:js/function> |-
      function (object_name, record_id, fields) {
        Template.templateFlowsModal.show({onConfirm: function(selection){
          if(selection && selection.length > 0){
            var flow = selection[0];
            var templateFlowId = flow._id;
            if(templateFlowId){
              Meteor.call("flow_copy", Steedos.spaceId(), templateFlowId, {name: flow.name}, function(error, result){
                if(error){
                  toastr.error('error');
                }else{
                  toastr.success(t('workflow_copy_flow_success'));
                  if (result.length > 0) {
                    return FlowRouter.go("/app/admin/flows/view/" + result[0]);
                  }
                }
              })
            }
          }
        }, gridProp: {
          columns: [
            {
                field: 'name',
                label: '流程名',
                width: '30%'
              },{
                  field: 'description',
                  type: 'markdown',
                  label: '描述'
              }
            ]
        }})
      }
  design:
    label: 流程设计器
    visible: !<tag:yaml.org,2002:js/function> |-
      function () {
              return true;
            }
    'on': list
    todo: !<tag:yaml.org,2002:js/function> |-
      function (object_name, record_id, fields) {
              return WorkflowCore.openFlowDesign(Steedos.locale().toLocaleLowerCase(), Steedos.spaceId(), null, Creator.getUserCompanyId());
            }
  standard_edit:
    visible: false
    'on': record
  standard_delete:
    visible: false
    'on': record_more
  designFlow:
    label: 流程设计器
    visible: !<tag:yaml.org,2002:js/function> |-
      function (object_name, record_id, record_permissions) {
              return true;
            }
    'on': record
    todo: !<tag:yaml.org,2002:js/function> |-
      function (object_name, record_id, fields) {
              return WorkflowCore.openFlowDesign(Steedos.locale().toLocaleLowerCase(), Steedos.spaceId(), record_id, Creator.getUserCompanyId());
            }
  designForm:
    label: 表单设计器
    visible: !<tag:yaml.org,2002:js/function> |-
      function (object_name, record_id, record_permissions) {
              return true;
            }
    'on': record
    todo: !<tag:yaml.org,2002:js/function> |-
      function (object_name, record_id, fields) {
              return WorkflowCore.openFormDesign(Steedos.locale(), Steedos.spaceId(), this.record.form, Creator.getUserCompanyId());
            }
  export_default_template:
    label: 导出默认模板
    'on': record_more
    visible: !<tag:yaml.org,2002:js/function> |-
      function () {
              return true;
            }
    todo: !<tag:yaml.org,2002:js/function> |-
      function (object_name, record_id, fields) {
              var url = Meteor.absoluteUrl("/api/workflow/export/talbe_template?flow=" + record_id);
              return window.open(url, '_blank');
            }
  exportFlow:
    label: 导出流程
    visible: true
    'on': record_more
    todo: !<tag:yaml.org,2002:js/function> |-
      function (object_name, record_id, fields) {
              var flow, form_id, ref2, ref3, ref4;
              console.log("exportFlow", object_name, record_id, fields);

              if (_.isString((ref2 = this.record) != null ? ref2.form : void 0)) {
                form_id = this.record.form;
              } else if ((ref3 = this.record) != null ? (ref4 = ref3.form) != null ? ref4._id : void 0 : void 0) {
                form_id = this.record.form._id;
              }

              if (form_id) {
                return window.open(Steedos.absoluteUrl("/api/workflow/export/form?form=" + form_id), '_blank');
              } else {
                flow = Creator.getCollection(object_name).findOne(record_id);

                if (flow) {
                  return window.open(Steedos.absoluteUrl("/api/workflow/export/form?form=" + form_id), '_blank');
                }
              }
            }
  importFlow:
    label: 导入流程
    visible: true
    'on': list
    todo: !<tag:yaml.org,2002:js/function> |-
      function () {
              return Modal.show("admin_import_flow_modal", {
                onSuccess: function (flows) {
                  if (flows.length > 0) {
                    return FlowRouter.go("/app/admin/flows/view/" + flows[0]);
                  }
                }
              });
            }
  exportFlows:
    label: 导出流程
    visible: true
    'on': list
    todo: !<tag:yaml.org,2002:js/function> |-
      function () {
              var ids = Creator.TabularSelectedIds["flows"]
              if(ids && ids.length > 0){
                window.open(Steedos.absoluteUrl("/api/workflow/export/form?flows=" + ids.join(',')), '_blank');
              }else{
                toastr.warning("请选择要导出的流程");
              }
            }
  upgradeFlow:
    label: 导入流程(升级)
    visible: true
    'on': record_more
    todo: !<tag:yaml.org,2002:js/function> |-
      function (object_name, record_id, fields) {
              return Modal.show("admin_import_flow_modal", {
                flowId: record_id,
                onSuccess: function () {
                  toastr.success("流程升级成功")
                }
              });
            }
  copyFlow:
    label: 复制流程
    visible: true
    'on': record_more
    todo: !<tag:yaml.org,2002:js/function> |-
      function (object_name, record_id, fields) {
              return Modal.show("copy_flow_modal", {
                record_id: record_id,
                onSuccess: function (flows) {
                  if (flows.length > 0) {
                    return FlowRouter.go("/app/admin/flows/view/" + flows[0]);
                  }
                }
              });
            }
  distributeAdmin:
    label: 设置分发
    visible: true
    'on': record_more
    todo: !<tag:yaml.org,2002:js/function> |-
      function (object_name, record_id, fields) {
              return Modal.show("distribute_edit_flow_modal", {
                flow: this.record
              });
            }
  removeFlow:
    label: 删除
    visible: true
    'on': record
    todo: !<tag:yaml.org,2002:js/function> |-
      function (object_name, record_id, fields) {
        var record = Creator.getObjectRecord(object_name, record_id, 'name,form');
        var formId = _.isObject(record.form) ? record.form._id : record.form;
        var flowName = record.name;
        swal({
          title: '为了确保安全，请输入您要删除的流程名(同时会删除相关的申请单)',
          inputPlaceholder: '流程名',
          type: "input",
          confirmButtonText: t('OK'),
          cancelButtonText: t('Cancel'),
          showCancelButton: true,
          closeOnConfirm: false
        }, function (inputText) {
          if (inputText == false) {
            return false;
          }

          if (inputText != flowName) {
            swal.showInputError('您输入的名称不正确');
            return false;
          }
          $("body").addClass("loading");
          var userSession = Creator.USER_CONTEXT;
          var authorization = "Bearer " + userSession.spaceId + "," + userSession.user.authToken;
          $.ajax({
            type: "POST",
            url: Steedos.absoluteUrl("/am/forms?methodOverride=DELETE"),
            data: JSON.stringify({ 'Forms': [{ 'id': formId }] }),
            dataType: "json",
            contentType: 'application/json',
            beforeSend: function (XHR) {
              XHR.setRequestHeader('Content-Type', 'application/json');
              XHR.setRequestHeader('Authorization', authorization);
            },
            success: function (data) {
              $("body").removeClass("loading");
              toastr.success("操作已成功！");
              var gridObjectNameClass = object_name.replace(/\./g,"-");
              var gridContainer = $(`.gridContainer.${gridObjectNameClass}`);
              var dxDataGridInstance, isOpenerRemove;
              if (!(gridContainer != null ? gridContainer.length : void 0)) {
                if (window.opener) {
                  isOpenerRemove = true;
                  gridContainer = window.opener.$(`.gridContainer.${gridObjectNameClass}`);
                }
              }
              if (gridContainer != null ? gridContainer.length : void 0) {
                dxDataGridInstance = gridContainer.dxDataGrid().dxDataGrid('instance');
              }
              if (dxDataGridInstance) {
                Template.creator_grid.refresh(dxDataGridInstance);
              }
              if (isOpenerRemove || !dxDataGridInstance) {
                if (isOpenerRemove) {
                  window.close();
                } else if (record_id === Session.get("record_id") && !Steedos.isMobile() && list_view_id !== 'calendar' && object_name !== "cms_posts") {
                  var appid = Session.get("app_id");
                  var list_view_id = Session.get("list_view_id");
                  if (!list_view_id) {
                    list_view_id = "all";
                  }
                  FlowRouter.go(`/app/${appid}/${object_name}/grid/${list_view_id}`);
                }
              }
            },
            error: function (XMLHttpRequest, textStatus, errorThrown) {
              $("body").removeClass("loading");
              toastr.error(XMLHttpRequest.responseJSON);
            }
          });
          sweetAlert.close();
        })
      }
permission_set:
  user:
    allowCreate: false
    allowDelete: false
    allowEdit: false
    allowRead: true
    modifyAllRecords: false
    viewAllRecords: false
  admin:
    allowCreate: true
    allowDelete: false
    allowEdit: true
    allowRead: true
    modifyAllRecords: true
    viewAllRecords: true
  workflow_admin:
    allowCreate: true
    allowDelete: false
    allowEdit: true
    allowRead: true
    modifyAllRecords: false
    viewAllRecords: false
    modifyCompanyRecords: true
    viewCompanyRecords: true
    disabled_list_views: []
    disabled_actions: []
    unreadable_fields: []
    uneditable_fields: []
    unrelated_objects: []
