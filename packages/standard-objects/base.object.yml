name: base
fields:
  owner:
    label: 所有者
    type: lookup
    reference_to: users
    sortable: true
    index: true
    defaultValue: "{userId}"
    omit: true
    hidden: true
  space:
    type: text
    label: 所属工作区
    reference_to: spaces
    index: true
    hidden: true
    defaultValue: "{spaceId}"
  created:
    type: datetime
    label: 创建时间
    readonly: true
    sortable: true
    omit: true
  created_by:
    label: 创建人
    type: lookup
    readonly: true
    reference_to: users
    disabled: true
    index: true
    omit: true
  modified:
    label: 修改时间
    type: datetime
    readonly: true
    sortable: true
    index: true
    omit: true
  modified_by:
    label: 修改人
    type: lookup
    readonly: true
    reference_to: users
    disabled: true
    omit: true
  is_deleted:
    type: boolean
    label: 已删除
    omit: true
    index: true
    hidden: true
  deleted:
    label: 删除时间
    type: datetime
    readonly: true
    sortable: true
    index: true
    omit: true
    hidden: true
  deleted_by:
    label: 删除人
    type: lookup
    readonly: true
    reference_to: users
    disabled: true
    omit: true
    hidden: true
  instances:
    label: 申请单
    type: grid
    omit: true
    hidden: true
  instances.$._id:
    label: 申请单ID
    type: text
    omit: true
    hidden: true
  instances.$.state:
    label: 申请单状态
    type: text
    omit: true
    hidden: true
  sharing:
    label: 记录级权限
    type: grid
    omit: true
    hidden: true
    blackbox: true
  sharing.$:
    label: 授权条件
    blackbox: true
    omit: true
    hidden: true
  sharing.$.u:
    label: 授权用户
    type: "[text]"
    omit: true
    hidden: true
  sharing.$.o:
    label: 授权组织
    type: "[text]"
    omit: true
    hidden: true
  sharing.$.r:
    label: 来自规则
    type: text
    omit: true
    hidden: true
  message_count:
    label: 评论数
    type: number
    omit: true
    hidden: true
  locked:
    label: 已锁定
    type: boolean
    omit: true
    hidden: true
  company_id:
    label: 所属单位
    type: lookup
    reference_to: company
    sortable: true
    index: true
    defaultValue: !!js/function |
      function(){
        if(Meteor.isClient){
          return Steedos.getUserCompanyId()
        }
      }
    optionsFunction: !!js/function |
      function (values) {
        var object = Creator.getObject(values._object_name);
        if(!object){
          console.error("未找到当前对象：" + values._object_name);
          return [];
        }
        var perms = object.permissions.get();
        var options, result, companys, queryFilters;
        result = [];
        options = {
          $select: 'name'
        };
        
        if(perms.modifyAllRecords){
          /* 如果当前用户对当前业务对象的权限为 modifyAllRecords，那选择单位时可以能从所有单位中选择。*/
        }
        else{
          /* 如果当前用户对当前业务对象的权限为 modifyCompanyRecords，那选择单位时只能从当前用户所属单位中选择。*/
          var company_ids = Creator.USER_CONTEXT.user.company_ids;
          if(values.company_id){
            var valueCompanyIds = _.isObject(values.company_id) ? [values.company_id._id] : [values.company_id];
            company_ids = _.union(company_ids, valueCompanyIds);
          }
          if(!company_ids.length){
            console.warn("当前用户不属于任何单位，无权修改该字段。");
            return [];
          }
          queryFilters = ["_id", "in", company_ids];
        }
        var customFilters = this.filters;
        if(!_.isEmpty(customFilters)){
          if(_.isEmpty(queryFilters)){
            queryFilters = customFilters;
          }
          else{
            queryFilters = [customFilters, 'and', queryFilters];
          }
        }
        if(!_.isEmpty(queryFilters)){
          var steedosFilters = require("@steedos/filters");
          var odataFilter = steedosFilters.formatFiltersToODataQuery(queryFilters);
          options.$filter = odataFilter;
        }
        companys = Creator.odata.query('company', options, true);
        companys.forEach(function (item) {
          result.push({
            label: item.name,
            value: item._id
          });
        });
        return result;
      }
    omit: true
    hidden: true
  company_ids:
    label: 所属单位
    type: lookup
    reference_to: company
    sortable: true
    index: true
    multiple: true
    defaultValue: !!js/function |
      function(){
        if(Meteor.isClient){
          var companyId = Steedos.getUserCompanyId();
          if(companyId){
            return [companyId]
          }
          else{
            return []
          }
        }
      }
    optionsFunction: !!js/function |
      function (values) {
        var object = Creator.getObject(values._object_name);
        if(!object){
          console.error("未找到当前对象：" + values._object_name);
          return [];
        }
        var perms = object.permissions.get();
        var options, result, companys, queryFilters;
        result = [];
        options = {
          $select: 'name'
        };
        
        if(perms.modifyAllRecords){
          /* 如果当前用户对当前业务对象的权限为 modifyAllRecords，那选择单位时可以能从所有单位中选择。*/
        }
        else{
          /* 如果当前用户对当前业务对象的权限为 modifyCompanyRecords，那选择单位时只能从当前用户所属单位中选择。*/
          var company_ids = Creator.USER_CONTEXT.user.company_ids;
          if(values.company_ids && values.company_ids.length){
            var valueCompanyIds = values.company_ids.map(function(item){
              return _.isObject(item) ? item._id : item;
            });
            company_ids = _.union(company_ids, valueCompanyIds);
          }
          if(!company_ids.length){
            console.warn("当前用户不属于任何单位，无权修改该字段。");
            return [];
          }
          queryFilters = ["_id", "in", company_ids];
        }
        var customFilters = this.filters;
        if(!_.isEmpty(customFilters)){
          if(_.isEmpty(queryFilters)){
            queryFilters = customFilters;
          }
          else{
            queryFilters = [customFilters, 'and', queryFilters];
          }
        }
        if(!_.isEmpty(queryFilters)){
          var steedosFilters = require("@steedos/filters");
          var odataFilter = steedosFilters.formatFiltersToODataQuery(queryFilters);
          options.$filter = odataFilter;
        }
        companys = Creator.odata.query('company', options, true);
        companys.forEach(function (item) {
          result.push({
            label: item.name,
            value: item._id
          });
        });
        return result;
      }
    omit: true
    hidden: true
  instance_state:
    label: 审批状态
    type: select
    options:
      - label: 草稿
        value: draft
      - label: 进行中
        value: pending
      - label: 已完成
        value: completed
      - label: 已核准
        value: approved
      - label: 已驳回
        value: rejected
      - label: 已取消
        value: terminated
    omit: true
    hidden: true
permission_set:
  none:
    allowCreate: false
    allowDelete: false
    allowEdit: false
    allowRead: false
    modifyAllRecords: false
  user:
    allowCreate: true
    allowDelete: true
    allowEdit: true
    allowRead: true
    modifyAllRecords: false
    viewAllRecords: false
  admin:
    allowCreate: true
    allowDelete: true
    allowEdit: true
    allowRead: true
    modifyAllRecords: true
    viewAllRecords: true
